id: cs.temp.dll
language: CSharp
name:
  Default: cs.temp.dll
qualifiedName:
  Default: cs.temp.dll
type: Assembly
modifiers: {}
items:
- id: Virgis
  commentId: N:Virgis
  language: CSharp
  name:
    CSharp: Virgis
    VB: Virgis
  nameWithType:
    CSharp: Virgis
    VB: Virgis
  qualifiedName:
    CSharp: Virgis
    VB: Virgis
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Virgis.MenuFacade
    commentId: T:Virgis.MenuFacade
    language: CSharp
    name:
      CSharp: MenuFacade
      VB: MenuFacade
    nameWithType:
      CSharp: MenuFacade
      VB: MenuFacade
    qualifiedName:
      CSharp: Virgis.MenuFacade
      VB: Virgis.MenuFacade
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: MenuFacade
      path: ''
      startLine: 13
    summary: "\nMenuFacade is the mediator for all components within the Menus GO.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class MenuFacade : MonoBehaviour'
        VB: >-
          Public Class MenuFacade

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.MenuFacade.startEditButton
      commentId: F:Virgis.MenuFacade.startEditButton
      language: CSharp
      name:
        CSharp: startEditButton
        VB: startEditButton
      nameWithType:
        CSharp: MenuFacade.startEditButton
        VB: MenuFacade.startEditButton
      qualifiedName:
        CSharp: Virgis.MenuFacade.startEditButton
        VB: Virgis.MenuFacade.startEditButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: startEditButton
        path: ''
        startLine: 15
      syntax:
        content:
          CSharp: public Button startEditButton
          VB: Public startEditButton As Button
        return:
          type: Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MenuFacade.stopSaveEditButton
      commentId: F:Virgis.MenuFacade.stopSaveEditButton
      language: CSharp
      name:
        CSharp: stopSaveEditButton
        VB: stopSaveEditButton
      nameWithType:
        CSharp: MenuFacade.stopSaveEditButton
        VB: MenuFacade.stopSaveEditButton
      qualifiedName:
        CSharp: Virgis.MenuFacade.stopSaveEditButton
        VB: Virgis.MenuFacade.stopSaveEditButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: stopSaveEditButton
        path: ''
        startLine: 16
      syntax:
        content:
          CSharp: public Button stopSaveEditButton
          VB: Public stopSaveEditButton As Button
        return:
          type: Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MenuFacade.stopDiscardEditButton
      commentId: F:Virgis.MenuFacade.stopDiscardEditButton
      language: CSharp
      name:
        CSharp: stopDiscardEditButton
        VB: stopDiscardEditButton
      nameWithType:
        CSharp: MenuFacade.stopDiscardEditButton
        VB: MenuFacade.stopDiscardEditButton
      qualifiedName:
        CSharp: Virgis.MenuFacade.stopDiscardEditButton
        VB: Virgis.MenuFacade.stopDiscardEditButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: stopDiscardEditButton
        path: ''
        startLine: 17
      syntax:
        content:
          CSharp: public Button stopDiscardEditButton
          VB: Public stopDiscardEditButton As Button
        return:
          type: Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MenuFacade.layersUI
      commentId: F:Virgis.MenuFacade.layersUI
      language: CSharp
      name:
        CSharp: layersUI
        VB: layersUI
      nameWithType:
        CSharp: MenuFacade.layersUI
        VB: MenuFacade.layersUI
      qualifiedName:
        CSharp: Virgis.MenuFacade.layersUI
        VB: Virgis.MenuFacade.layersUI
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: layersUI
        path: ''
        startLine: 18
      syntax:
        content:
          CSharp: public GameObject layersUI
          VB: Public layersUI As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MenuFacade.Visible(System.Boolean)
      commentId: M:Virgis.MenuFacade.Visible(System.Boolean)
      language: CSharp
      name:
        CSharp: Visible(Boolean)
        VB: Visible(Boolean)
      nameWithType:
        CSharp: MenuFacade.Visible(Boolean)
        VB: MenuFacade.Visible(Boolean)
      qualifiedName:
        CSharp: Virgis.MenuFacade.Visible(System.Boolean)
        VB: Virgis.MenuFacade.Visible(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Visible
        path: ''
        startLine: 39
      syntax:
        content:
          CSharp: public void Visible(bool thisEvent)
          VB: Public Sub Visible(thisEvent As Boolean)
        parameters:
        - id: thisEvent
          type: System.Boolean
      overload: Virgis.MenuFacade.Visible*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MenuFacade.HandleKeyInput(InputAction.CallbackContext)
      commentId: M:Virgis.MenuFacade.HandleKeyInput(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: HandleKeyInput(InputAction.CallbackContext)
        VB: HandleKeyInput(InputAction.CallbackContext)
      nameWithType:
        CSharp: MenuFacade.HandleKeyInput(InputAction.CallbackContext)
        VB: MenuFacade.HandleKeyInput(InputAction.CallbackContext)
      qualifiedName:
        CSharp: Virgis.MenuFacade.HandleKeyInput(InputAction.CallbackContext)
        VB: Virgis.MenuFacade.HandleKeyInput(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: HandleKeyInput
        path: ''
        startLine: 49
      syntax:
        content:
          CSharp: public void HandleKeyInput(InputAction.CallbackContext context)
          VB: Public Sub HandleKeyInput(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: InputAction.CallbackContext
      overload: Virgis.MenuFacade.HandleKeyInput*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MenuFacade.OnShowLayersButtonClicked
      commentId: M:Virgis.MenuFacade.OnShowLayersButtonClicked
      language: CSharp
      name:
        CSharp: OnShowLayersButtonClicked()
        VB: OnShowLayersButtonClicked()
      nameWithType:
        CSharp: MenuFacade.OnShowLayersButtonClicked()
        VB: MenuFacade.OnShowLayersButtonClicked()
      qualifiedName:
        CSharp: Virgis.MenuFacade.OnShowLayersButtonClicked()
        VB: Virgis.MenuFacade.OnShowLayersButtonClicked()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: OnShowLayersButtonClicked
        path: ''
        startLine: 56
      syntax:
        content:
          CSharp: public void OnShowLayersButtonClicked()
          VB: Public Sub OnShowLayersButtonClicked
      overload: Virgis.MenuFacade.OnShowLayersButtonClicked*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MenuFacade.OnStartEditButtonClicked
      commentId: M:Virgis.MenuFacade.OnStartEditButtonClicked
      language: CSharp
      name:
        CSharp: OnStartEditButtonClicked()
        VB: OnStartEditButtonClicked()
      nameWithType:
        CSharp: MenuFacade.OnStartEditButtonClicked()
        VB: MenuFacade.OnStartEditButtonClicked()
      qualifiedName:
        CSharp: Virgis.MenuFacade.OnStartEditButtonClicked()
        VB: Virgis.MenuFacade.OnStartEditButtonClicked()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: OnStartEditButtonClicked
        path: ''
        startLine: 61
      syntax:
        content:
          CSharp: public void OnStartEditButtonClicked()
          VB: Public Sub OnStartEditButtonClicked
      overload: Virgis.MenuFacade.OnStartEditButtonClicked*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MenuFacade.OnStopSaveEditButtonClicked
      commentId: M:Virgis.MenuFacade.OnStopSaveEditButtonClicked
      language: CSharp
      name:
        CSharp: OnStopSaveEditButtonClicked()
        VB: OnStopSaveEditButtonClicked()
      nameWithType:
        CSharp: MenuFacade.OnStopSaveEditButtonClicked()
        VB: MenuFacade.OnStopSaveEditButtonClicked()
      qualifiedName:
        CSharp: Virgis.MenuFacade.OnStopSaveEditButtonClicked()
        VB: Virgis.MenuFacade.OnStopSaveEditButtonClicked()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: OnStopSaveEditButtonClicked
        path: ''
        startLine: 65
      syntax:
        content:
          CSharp: public void OnStopSaveEditButtonClicked()
          VB: Public Sub OnStopSaveEditButtonClicked
      overload: Virgis.MenuFacade.OnStopSaveEditButtonClicked*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MenuFacade.OnStopDiscardEditButtonClicked
      commentId: M:Virgis.MenuFacade.OnStopDiscardEditButtonClicked
      language: CSharp
      name:
        CSharp: OnStopDiscardEditButtonClicked()
        VB: OnStopDiscardEditButtonClicked()
      nameWithType:
        CSharp: MenuFacade.OnStopDiscardEditButtonClicked()
        VB: MenuFacade.OnStopDiscardEditButtonClicked()
      qualifiedName:
        CSharp: Virgis.MenuFacade.OnStopDiscardEditButtonClicked()
        VB: Virgis.MenuFacade.OnStopDiscardEditButtonClicked()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: OnStopDiscardEditButtonClicked
        path: ''
        startLine: 69
      syntax:
        content:
          CSharp: public void OnStopDiscardEditButtonClicked()
          VB: Public Sub OnStopDiscardEditButtonClicked
      overload: Virgis.MenuFacade.OnStopDiscardEditButtonClicked*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.AppState
    commentId: T:Virgis.AppState
    language: CSharp
    name:
      CSharp: AppState
      VB: AppState
    nameWithType:
      CSharp: AppState
      VB: AppState
    qualifiedName:
      CSharp: Virgis.AppState
      VB: Virgis.AppState
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: AppState
      path: ''
      startLine: 113
    syntax:
      content:
        CSharp: 'public class AppState : MonoBehaviour'
        VB: >-
          Public Class AppState

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.AppState.instance
      commentId: F:Virgis.AppState.instance
      language: CSharp
      name:
        CSharp: instance
        VB: instance
      nameWithType:
        CSharp: AppState.instance
        VB: AppState.instance
      qualifiedName:
        CSharp: Virgis.AppState.instance
        VB: Virgis.AppState.instance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: instance
        path: ''
        startLine: 114
      syntax:
        content:
          CSharp: public static AppState instance
          VB: Public Shared instance As AppState
        return:
          type: Virgis.AppState
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Virgis.AppState.Init
      commentId: M:Virgis.AppState.Init
      language: CSharp
      name:
        CSharp: Init()
        VB: Init()
      nameWithType:
        CSharp: AppState.Init()
        VB: AppState.Init()
      qualifiedName:
        CSharp: Virgis.AppState.Init()
        VB: Virgis.AppState.Init()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Init
        path: ''
        startLine: 143
      summary: "\nInit is called after a project has been fully loaded.\n"
      example: []
      syntax:
        content:
          CSharp: public void Init()
          VB: Public Sub Init
      overload: Virgis.AppState.Init*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.AppState.editSession
      commentId: P:Virgis.AppState.editSession
      language: CSharp
      name:
        CSharp: editSession
        VB: editSession
      nameWithType:
        CSharp: AppState.editSession
        VB: AppState.editSession
      qualifiedName:
        CSharp: Virgis.AppState.editSession
        VB: Virgis.AppState.editSession
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: editSession
        path: ''
        startLine: 149
      syntax:
        content:
          CSharp: public EditSession editSession { get; }
          VB: Public ReadOnly Property editSession As EditSession
        parameters: []
        return:
          type: Virgis.EditSession
      overload: Virgis.AppState.editSession*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Virgis.AppState.abstractMap
      commentId: P:Virgis.AppState.abstractMap
      language: CSharp
      name:
        CSharp: abstractMap
        VB: abstractMap
      nameWithType:
        CSharp: AppState.abstractMap
        VB: AppState.abstractMap
      qualifiedName:
        CSharp: Virgis.AppState.abstractMap
        VB: Virgis.AppState.abstractMap
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: abstractMap
        path: ''
        startLine: 153
      syntax:
        content:
          CSharp: public AbstractMap abstractMap { get; set; }
          VB: Public Property abstractMap As AbstractMap
        parameters: []
        return:
          type: AbstractMap
      overload: Virgis.AppState.abstractMap*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Virgis.AppState.map
      commentId: P:Virgis.AppState.map
      language: CSharp
      name:
        CSharp: map
        VB: map
      nameWithType:
        CSharp: AppState.map
        VB: AppState.map
      qualifiedName:
        CSharp: Virgis.AppState.map
        VB: Virgis.AppState.map
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: map
        path: ''
        startLine: 157
      syntax:
        content:
          CSharp: public GameObject map { get; set; }
          VB: Public Property map As GameObject
        parameters: []
        return:
          type: GameObject
      overload: Virgis.AppState.map*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Virgis.AppState.project
      commentId: P:Virgis.AppState.project
      language: CSharp
      name:
        CSharp: project
        VB: project
      nameWithType:
        CSharp: AppState.project
        VB: AppState.project
      qualifiedName:
        CSharp: Virgis.AppState.project
        VB: Virgis.AppState.project
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: project
        path: ''
        startLine: 161
      syntax:
        content:
          CSharp: public GisProject project { get; set; }
          VB: Public Property project As GisProject
        parameters: []
        return:
          type: GisProject
      overload: Virgis.AppState.project*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Virgis.AppState.layers
      commentId: P:Virgis.AppState.layers
      language: CSharp
      name:
        CSharp: layers
        VB: layers
      nameWithType:
        CSharp: AppState.layers
        VB: AppState.layers
      qualifiedName:
        CSharp: Virgis.AppState.layers
        VB: Virgis.AppState.layers
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: layers
        path: ''
        startLine: 165
      syntax:
        content:
          CSharp: public List<Component> layers { get; }
          VB: Public ReadOnly Property layers As List(Of Component)
        parameters: []
        return:
          type: List{Component}
      overload: Virgis.AppState.layers*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Virgis.AppState.addLayer(Component)
      commentId: M:Virgis.AppState.addLayer(Component)
      language: CSharp
      name:
        CSharp: addLayer(Component)
        VB: addLayer(Component)
      nameWithType:
        CSharp: AppState.addLayer(Component)
        VB: AppState.addLayer(Component)
      qualifiedName:
        CSharp: Virgis.AppState.addLayer(Component)
        VB: Virgis.AppState.addLayer(Component)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: addLayer
        path: ''
        startLine: 169
      syntax:
        content:
          CSharp: public void addLayer(Component layer)
          VB: Public Sub addLayer(layer As Component)
        parameters:
        - id: layer
          type: Component
      overload: Virgis.AppState.addLayer*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.AppState.clearLayers
      commentId: M:Virgis.AppState.clearLayers
      language: CSharp
      name:
        CSharp: clearLayers()
        VB: clearLayers()
      nameWithType:
        CSharp: AppState.clearLayers()
        VB: AppState.clearLayers()
      qualifiedName:
        CSharp: Virgis.AppState.clearLayers()
        VB: Virgis.AppState.clearLayers()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: clearLayers
        path: ''
        startLine: 173
      syntax:
        content:
          CSharp: public void clearLayers()
          VB: Public Sub clearLayers
      overload: Virgis.AppState.clearLayers*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.AppState.mainCamera
      commentId: P:Virgis.AppState.mainCamera
      language: CSharp
      name:
        CSharp: mainCamera
        VB: mainCamera
      nameWithType:
        CSharp: AppState.mainCamera
        VB: AppState.mainCamera
      qualifiedName:
        CSharp: Virgis.AppState.mainCamera
        VB: Virgis.AppState.mainCamera
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: mainCamera
        path: ''
        startLine: 177
      syntax:
        content:
          CSharp: public Camera mainCamera { get; set; }
          VB: Public Property mainCamera As Camera
        parameters: []
        return:
          type: Camera
      overload: Virgis.AppState.mainCamera*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Virgis.AppState.trackingSpace
      commentId: P:Virgis.AppState.trackingSpace
      language: CSharp
      name:
        CSharp: trackingSpace
        VB: trackingSpace
      nameWithType:
        CSharp: AppState.trackingSpace
        VB: AppState.trackingSpace
      qualifiedName:
        CSharp: Virgis.AppState.trackingSpace
        VB: Virgis.AppState.trackingSpace
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: trackingSpace
        path: ''
        startLine: 181
      syntax:
        content:
          CSharp: public GameObject trackingSpace { get; set; }
          VB: Public Property trackingSpace As GameObject
        parameters: []
        return:
          type: GameObject
      overload: Virgis.AppState.trackingSpace*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Virgis.AppState.InEditSession
      commentId: M:Virgis.AppState.InEditSession
      language: CSharp
      name:
        CSharp: InEditSession()
        VB: InEditSession()
      nameWithType:
        CSharp: AppState.InEditSession()
        VB: AppState.InEditSession()
      qualifiedName:
        CSharp: Virgis.AppState.InEditSession()
        VB: Virgis.AppState.InEditSession()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: InEditSession
        path: ''
        startLine: 185
      syntax:
        content:
          CSharp: public bool InEditSession()
          VB: Public Function InEditSession As Boolean
        return:
          type: System.Boolean
      overload: Virgis.AppState.InEditSession*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.AppState.StartEditSession
      commentId: M:Virgis.AppState.StartEditSession
      language: CSharp
      name:
        CSharp: StartEditSession()
        VB: StartEditSession()
      nameWithType:
        CSharp: AppState.StartEditSession()
        VB: AppState.StartEditSession()
      qualifiedName:
        CSharp: Virgis.AppState.StartEditSession()
        VB: Virgis.AppState.StartEditSession()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: StartEditSession
        path: ''
        startLine: 189
      syntax:
        content:
          CSharp: public void StartEditSession()
          VB: Public Sub StartEditSession
      overload: Virgis.AppState.StartEditSession*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.AppState.StopSaveEditSession
      commentId: M:Virgis.AppState.StopSaveEditSession
      language: CSharp
      name:
        CSharp: StopSaveEditSession()
        VB: StopSaveEditSession()
      nameWithType:
        CSharp: AppState.StopSaveEditSession()
        VB: AppState.StopSaveEditSession()
      qualifiedName:
        CSharp: Virgis.AppState.StopSaveEditSession()
        VB: Virgis.AppState.StopSaveEditSession()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: StopSaveEditSession
        path: ''
        startLine: 193
      syntax:
        content:
          CSharp: public void StopSaveEditSession()
          VB: Public Sub StopSaveEditSession
      overload: Virgis.AppState.StopSaveEditSession*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.AppState.StopDiscardEditSession
      commentId: M:Virgis.AppState.StopDiscardEditSession
      language: CSharp
      name:
        CSharp: StopDiscardEditSession()
        VB: StopDiscardEditSession()
      nameWithType:
        CSharp: AppState.StopDiscardEditSession()
        VB: AppState.StopDiscardEditSession()
      qualifiedName:
        CSharp: Virgis.AppState.StopDiscardEditSession()
        VB: Virgis.AppState.StopDiscardEditSession()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: StopDiscardEditSession
        path: ''
        startLine: 197
      syntax:
        content:
          CSharp: public void StopDiscardEditSession()
          VB: Public Sub StopDiscardEditSession
      overload: Virgis.AppState.StopDiscardEditSession*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.AppState.AddStartEditSessionListener(UnityAction)
      commentId: M:Virgis.AppState.AddStartEditSessionListener(UnityAction)
      language: CSharp
      name:
        CSharp: AddStartEditSessionListener(UnityAction)
        VB: AddStartEditSessionListener(UnityAction)
      nameWithType:
        CSharp: AppState.AddStartEditSessionListener(UnityAction)
        VB: AppState.AddStartEditSessionListener(UnityAction)
      qualifiedName:
        CSharp: Virgis.AppState.AddStartEditSessionListener(UnityAction)
        VB: Virgis.AppState.AddStartEditSessionListener(UnityAction)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: AddStartEditSessionListener
        path: ''
        startLine: 201
      syntax:
        content:
          CSharp: public void AddStartEditSessionListener(UnityAction action)
          VB: Public Sub AddStartEditSessionListener(action As UnityAction)
        parameters:
        - id: action
          type: UnityAction
      overload: Virgis.AppState.AddStartEditSessionListener*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.AppState.AddEndEditSessionListener(UnityAction{System.Boolean})
      commentId: M:Virgis.AppState.AddEndEditSessionListener(UnityAction{System.Boolean})
      language: CSharp
      name:
        CSharp: AddEndEditSessionListener(UnityAction<Boolean>)
        VB: AddEndEditSessionListener(UnityAction(Of Boolean))
      nameWithType:
        CSharp: AppState.AddEndEditSessionListener(UnityAction<Boolean>)
        VB: AppState.AddEndEditSessionListener(UnityAction(Of Boolean))
      qualifiedName:
        CSharp: Virgis.AppState.AddEndEditSessionListener(UnityAction<System.Boolean>)
        VB: Virgis.AppState.AddEndEditSessionListener(UnityAction(Of System.Boolean))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: AddEndEditSessionListener
        path: ''
        startLine: 205
      syntax:
        content:
          CSharp: public void AddEndEditSessionListener(UnityAction<bool> action)
          VB: Public Sub AddEndEditSessionListener(action As UnityAction(Of Boolean))
        parameters:
        - id: action
          type: UnityAction{System.Boolean}
      overload: Virgis.AppState.AddEndEditSessionListener*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.AppState.AddZoomChangeListerner(UnityAction{System.Single})
      commentId: M:Virgis.AppState.AddZoomChangeListerner(UnityAction{System.Single})
      language: CSharp
      name:
        CSharp: AddZoomChangeListerner(UnityAction<Single>)
        VB: AddZoomChangeListerner(UnityAction(Of Single))
      nameWithType:
        CSharp: AppState.AddZoomChangeListerner(UnityAction<Single>)
        VB: AppState.AddZoomChangeListerner(UnityAction(Of Single))
      qualifiedName:
        CSharp: Virgis.AppState.AddZoomChangeListerner(UnityAction<System.Single>)
        VB: Virgis.AppState.AddZoomChangeListerner(UnityAction(Of System.Single))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: AddZoomChangeListerner
        path: ''
        startLine: 209
      syntax:
        content:
          CSharp: public void AddZoomChangeListerner(UnityAction<float> action)
          VB: Public Sub AddZoomChangeListerner(action As UnityAction(Of Single))
        parameters:
        - id: action
          type: UnityAction{System.Single}
      overload: Virgis.AppState.AddZoomChangeListerner*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.AppState.ZoomChange(System.Single)
      commentId: M:Virgis.AppState.ZoomChange(System.Single)
      language: CSharp
      name:
        CSharp: ZoomChange(Single)
        VB: ZoomChange(Single)
      nameWithType:
        CSharp: AppState.ZoomChange(Single)
        VB: AppState.ZoomChange(Single)
      qualifiedName:
        CSharp: Virgis.AppState.ZoomChange(System.Single)
        VB: Virgis.AppState.ZoomChange(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: ZoomChange
        path: ''
        startLine: 213
      syntax:
        content:
          CSharp: public void ZoomChange(float zoom)
          VB: Public Sub ZoomChange(zoom As Single)
        parameters:
        - id: zoom
          type: System.Single
      overload: Virgis.AppState.ZoomChange*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.AppState.GetScale
      commentId: M:Virgis.AppState.GetScale
      language: CSharp
      name:
        CSharp: GetScale()
        VB: GetScale()
      nameWithType:
        CSharp: AppState.GetScale()
        VB: AppState.GetScale()
      qualifiedName:
        CSharp: Virgis.AppState.GetScale()
        VB: Virgis.AppState.GetScale()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetScale
        path: ''
        startLine: 217
      syntax:
        content:
          CSharp: public float GetScale()
          VB: Public Function GetScale As Single
        return:
          type: System.Single
      overload: Virgis.AppState.GetScale*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.ZoomEvent
    commentId: T:Virgis.ZoomEvent
    language: CSharp
    name:
      CSharp: ZoomEvent
      VB: ZoomEvent
    nameWithType:
      CSharp: ZoomEvent
      VB: ZoomEvent
    qualifiedName:
      CSharp: Virgis.ZoomEvent
      VB: Virgis.ZoomEvent
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: ZoomEvent
      path: ''
      startLine: 233
    summary: "\nEvent type for Zoom Change Events\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ZoomEvent : UnityEvent<float>'
        VB: >-
          Public Class ZoomEvent

              Inherits UnityEvent(Of Single)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.ZoomEvent.#ctor
      commentId: M:Virgis.ZoomEvent.#ctor
      language: CSharp
      name:
        CSharp: ZoomEvent()
        VB: ZoomEvent()
      nameWithType:
        CSharp: ZoomEvent.ZoomEvent()
        VB: ZoomEvent.ZoomEvent()
      qualifiedName:
        CSharp: Virgis.ZoomEvent.ZoomEvent()
        VB: Virgis.ZoomEvent.ZoomEvent()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: .ctor
        path: ''
        startLine: 237
      syntax:
        content:
          CSharp: public ZoomEvent()
          VB: Public Sub New
      overload: Virgis.ZoomEvent.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.ZoomEvent.AddZoomChangeListerner(UnityAction{System.Single})
      commentId: M:Virgis.ZoomEvent.AddZoomChangeListerner(UnityAction{System.Single})
      language: CSharp
      name:
        CSharp: AddZoomChangeListerner(UnityAction<Single>)
        VB: AddZoomChangeListerner(UnityAction(Of Single))
      nameWithType:
        CSharp: ZoomEvent.AddZoomChangeListerner(UnityAction<Single>)
        VB: ZoomEvent.AddZoomChangeListerner(UnityAction(Of Single))
      qualifiedName:
        CSharp: Virgis.ZoomEvent.AddZoomChangeListerner(UnityAction<System.Single>)
        VB: Virgis.ZoomEvent.AddZoomChangeListerner(UnityAction(Of System.Single))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: AddZoomChangeListerner
        path: ''
        startLine: 242
      syntax:
        content:
          CSharp: public void AddZoomChangeListerner(UnityAction<float> action)
          VB: Public Sub AddZoomChangeListerner(action As UnityAction(Of Single))
        parameters:
        - id: action
          type: UnityAction{System.Single}
      overload: Virgis.ZoomEvent.AddZoomChangeListerner*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.ZoomEvent.Change(System.Single)
      commentId: M:Virgis.ZoomEvent.Change(System.Single)
      language: CSharp
      name:
        CSharp: Change(Single)
        VB: Change(Single)
      nameWithType:
        CSharp: ZoomEvent.Change(Single)
        VB: ZoomEvent.Change(Single)
      qualifiedName:
        CSharp: Virgis.ZoomEvent.Change(System.Single)
        VB: Virgis.ZoomEvent.Change(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Change
        path: ''
        startLine: 246
      syntax:
        content:
          CSharp: public void Change(float zoom)
          VB: Public Sub Change(zoom As Single)
        parameters:
        - id: zoom
          type: System.Single
      overload: Virgis.ZoomEvent.Change*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.ZoomEvent.GetScale
      commentId: M:Virgis.ZoomEvent.GetScale
      language: CSharp
      name:
        CSharp: GetScale()
        VB: GetScale()
      nameWithType:
        CSharp: ZoomEvent.GetScale()
        VB: ZoomEvent.GetScale()
      qualifiedName:
        CSharp: Virgis.ZoomEvent.GetScale()
        VB: Virgis.ZoomEvent.GetScale()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetScale
        path: ''
        startLine: 254
      syntax:
        content:
          CSharp: public float GetScale()
          VB: Public Function GetScale As Single
        return:
          type: System.Single
      overload: Virgis.ZoomEvent.GetScale*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.FlyingCam
    commentId: T:Virgis.FlyingCam
    language: CSharp
    name:
      CSharp: FlyingCam
      VB: FlyingCam
    nameWithType:
      CSharp: FlyingCam
      VB: FlyingCam
    qualifiedName:
      CSharp: Virgis.FlyingCam
      VB: Virgis.FlyingCam
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: FlyingCam
      path: ''
      startLine: 274
    summary: "\nMain Script for controlling the UI behaviour and the movement of the Camera\n"
    example: []
    syntax:
      content:
        CSharp: 'public class FlyingCam : MonoBehaviour'
        VB: >-
          Public Class FlyingCam

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.FlyingCam.DesktopAcceleration
      commentId: F:Virgis.FlyingCam.DesktopAcceleration
      language: CSharp
      name:
        CSharp: DesktopAcceleration
        VB: DesktopAcceleration
      nameWithType:
        CSharp: FlyingCam.DesktopAcceleration
        VB: FlyingCam.DesktopAcceleration
      qualifiedName:
        CSharp: Virgis.FlyingCam.DesktopAcceleration
        VB: Virgis.FlyingCam.DesktopAcceleration
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: DesktopAcceleration
        path: ''
        startLine: 278
      syntax:
        content:
          CSharp: public float DesktopAcceleration
          VB: Public DesktopAcceleration As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FlyingCam.XAxisSensitivity
      commentId: F:Virgis.FlyingCam.XAxisSensitivity
      language: CSharp
      name:
        CSharp: XAxisSensitivity
        VB: XAxisSensitivity
      nameWithType:
        CSharp: FlyingCam.XAxisSensitivity
        VB: FlyingCam.XAxisSensitivity
      qualifiedName:
        CSharp: Virgis.FlyingCam.XAxisSensitivity
        VB: Virgis.FlyingCam.XAxisSensitivity
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: XAxisSensitivity
        path: ''
        startLine: 279
      syntax:
        content:
          CSharp: public float XAxisSensitivity
          VB: Public XAxisSensitivity As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FlyingCam.YAxisSensitivity
      commentId: F:Virgis.FlyingCam.YAxisSensitivity
      language: CSharp
      name:
        CSharp: YAxisSensitivity
        VB: YAxisSensitivity
      nameWithType:
        CSharp: FlyingCam.YAxisSensitivity
        VB: FlyingCam.YAxisSensitivity
      qualifiedName:
        CSharp: Virgis.FlyingCam.YAxisSensitivity
        VB: Virgis.FlyingCam.YAxisSensitivity
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: YAxisSensitivity
        path: ''
        startLine: 280
      syntax:
        content:
          CSharp: public float YAxisSensitivity
          VB: Public YAxisSensitivity As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FlyingCam.MaxXAngle
      commentId: F:Virgis.FlyingCam.MaxXAngle
      language: CSharp
      name:
        CSharp: MaxXAngle
        VB: MaxXAngle
      nameWithType:
        CSharp: FlyingCam.MaxXAngle
        VB: FlyingCam.MaxXAngle
      qualifiedName:
        CSharp: Virgis.FlyingCam.MaxXAngle
        VB: Virgis.FlyingCam.MaxXAngle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MaxXAngle
        path: ''
        startLine: 284
      syntax:
        content:
          CSharp: public float MaxXAngle
          VB: Public MaxXAngle As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FlyingCam.VrAcceleration
      commentId: F:Virgis.FlyingCam.VrAcceleration
      language: CSharp
      name:
        CSharp: VrAcceleration
        VB: VrAcceleration
      nameWithType:
        CSharp: FlyingCam.VrAcceleration
        VB: FlyingCam.VrAcceleration
      qualifiedName:
        CSharp: Virgis.FlyingCam.VrAcceleration
        VB: Virgis.FlyingCam.VrAcceleration
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: VrAcceleration
        path: ''
        startLine: 289
      syntax:
        content:
          CSharp: public float VrAcceleration
          VB: Public VrAcceleration As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FlyingCam.PanSensitvity
      commentId: F:Virgis.FlyingCam.PanSensitvity
      language: CSharp
      name:
        CSharp: PanSensitvity
        VB: PanSensitvity
      nameWithType:
        CSharp: FlyingCam.PanSensitvity
        VB: FlyingCam.PanSensitvity
      qualifiedName:
        CSharp: Virgis.FlyingCam.PanSensitvity
        VB: Virgis.FlyingCam.PanSensitvity
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: PanSensitvity
        path: ''
        startLine: 290
      syntax:
        content:
          CSharp: public float PanSensitvity
          VB: Public PanSensitvity As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FlyingCam.ZoomSensitivity
      commentId: F:Virgis.FlyingCam.ZoomSensitivity
      language: CSharp
      name:
        CSharp: ZoomSensitivity
        VB: ZoomSensitivity
      nameWithType:
        CSharp: FlyingCam.ZoomSensitivity
        VB: FlyingCam.ZoomSensitivity
      qualifiedName:
        CSharp: Virgis.FlyingCam.ZoomSensitivity
        VB: Virgis.FlyingCam.ZoomSensitivity
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: ZoomSensitivity
        path: ''
        startLine: 291
      syntax:
        content:
          CSharp: public float ZoomSensitivity
          VB: Public ZoomSensitivity As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FlyingCam.SlideMod
      commentId: F:Virgis.FlyingCam.SlideMod
      language: CSharp
      name:
        CSharp: SlideMod
        VB: SlideMod
      nameWithType:
        CSharp: FlyingCam.SlideMod
        VB: FlyingCam.SlideMod
      qualifiedName:
        CSharp: Virgis.FlyingCam.SlideMod
        VB: Virgis.FlyingCam.SlideMod
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SlideMod
        path: ''
        startLine: 292
      syntax:
        content:
          CSharp: public float SlideMod
          VB: Public SlideMod As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FlyingCam.AxisSensitivity
      commentId: F:Virgis.FlyingCam.AxisSensitivity
      language: CSharp
      name:
        CSharp: AxisSensitivity
        VB: AxisSensitivity
      nameWithType:
        CSharp: FlyingCam.AxisSensitivity
        VB: FlyingCam.AxisSensitivity
      qualifiedName:
        CSharp: Virgis.FlyingCam.AxisSensitivity
        VB: Virgis.FlyingCam.AxisSensitivity
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: AxisSensitivity
        path: ''
        startLine: 293
      syntax:
        content:
          CSharp: public float AxisSensitivity
          VB: Public AxisSensitivity As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FlyingCam.HandleMove(InputAction.CallbackContext)
      commentId: M:Virgis.FlyingCam.HandleMove(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: HandleMove(InputAction.CallbackContext)
        VB: HandleMove(InputAction.CallbackContext)
      nameWithType:
        CSharp: FlyingCam.HandleMove(InputAction.CallbackContext)
        VB: FlyingCam.HandleMove(InputAction.CallbackContext)
      qualifiedName:
        CSharp: Virgis.FlyingCam.HandleMove(InputAction.CallbackContext)
        VB: Virgis.FlyingCam.HandleMove(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: HandleMove
        path: ''
        startLine: 362
      syntax:
        content:
          CSharp: public void HandleMove(InputAction.CallbackContext context)
          VB: Public Sub HandleMove(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: InputAction.CallbackContext
      overload: Virgis.FlyingCam.HandleMove*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FlyingCam.HandleVertical(InputAction.CallbackContext)
      commentId: M:Virgis.FlyingCam.HandleVertical(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: HandleVertical(InputAction.CallbackContext)
        VB: HandleVertical(InputAction.CallbackContext)
      nameWithType:
        CSharp: FlyingCam.HandleVertical(InputAction.CallbackContext)
        VB: FlyingCam.HandleVertical(InputAction.CallbackContext)
      qualifiedName:
        CSharp: Virgis.FlyingCam.HandleVertical(InputAction.CallbackContext)
        VB: Virgis.FlyingCam.HandleVertical(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: HandleVertical
        path: ''
        startLine: 371
      syntax:
        content:
          CSharp: public void HandleVertical(InputAction.CallbackContext context)
          VB: Public Sub HandleVertical(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: InputAction.CallbackContext
      overload: Virgis.FlyingCam.HandleVertical*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FlyingCam.HandlePanZoom(InputAction.CallbackContext)
      commentId: M:Virgis.FlyingCam.HandlePanZoom(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: HandlePanZoom(InputAction.CallbackContext)
        VB: HandlePanZoom(InputAction.CallbackContext)
      nameWithType:
        CSharp: FlyingCam.HandlePanZoom(InputAction.CallbackContext)
        VB: FlyingCam.HandlePanZoom(InputAction.CallbackContext)
      qualifiedName:
        CSharp: Virgis.FlyingCam.HandlePanZoom(InputAction.CallbackContext)
        VB: Virgis.FlyingCam.HandlePanZoom(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: HandlePanZoom
        path: ''
        startLine: 381
      syntax:
        content:
          CSharp: public void HandlePanZoom(InputAction.CallbackContext context)
          VB: Public Sub HandlePanZoom(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: InputAction.CallbackContext
      overload: Virgis.FlyingCam.HandlePanZoom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FlyingCam.HandleMouseRotation(InputAction.CallbackContext)
      commentId: M:Virgis.FlyingCam.HandleMouseRotation(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: HandleMouseRotation(InputAction.CallbackContext)
        VB: HandleMouseRotation(InputAction.CallbackContext)
      nameWithType:
        CSharp: FlyingCam.HandleMouseRotation(InputAction.CallbackContext)
        VB: FlyingCam.HandleMouseRotation(InputAction.CallbackContext)
      qualifiedName:
        CSharp: Virgis.FlyingCam.HandleMouseRotation(InputAction.CallbackContext)
        VB: Virgis.FlyingCam.HandleMouseRotation(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: HandleMouseRotation
        path: ''
        startLine: 394
      syntax:
        content:
          CSharp: public void HandleMouseRotation(InputAction.CallbackContext context)
          VB: Public Sub HandleMouseRotation(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: InputAction.CallbackContext
      overload: Virgis.FlyingCam.HandleMouseRotation*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FlyingCam.HandleKeyInput(InputAction.CallbackContext)
      commentId: M:Virgis.FlyingCam.HandleKeyInput(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: HandleKeyInput(InputAction.CallbackContext)
        VB: HandleKeyInput(InputAction.CallbackContext)
      nameWithType:
        CSharp: FlyingCam.HandleKeyInput(InputAction.CallbackContext)
        VB: FlyingCam.HandleKeyInput(InputAction.CallbackContext)
      qualifiedName:
        CSharp: Virgis.FlyingCam.HandleKeyInput(InputAction.CallbackContext)
        VB: Virgis.FlyingCam.HandleKeyInput(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: HandleKeyInput
        path: ''
        startLine: 431
      syntax:
        content:
          CSharp: public void HandleKeyInput(InputAction.CallbackContext context)
          VB: Public Sub HandleKeyInput(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: InputAction.CallbackContext
      overload: Virgis.FlyingCam.HandleKeyInput*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FlyingCam.HandleMouseClick(InputAction.CallbackContext)
      commentId: M:Virgis.FlyingCam.HandleMouseClick(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: HandleMouseClick(InputAction.CallbackContext)
        VB: HandleMouseClick(InputAction.CallbackContext)
      nameWithType:
        CSharp: FlyingCam.HandleMouseClick(InputAction.CallbackContext)
        VB: FlyingCam.HandleMouseClick(InputAction.CallbackContext)
      qualifiedName:
        CSharp: Virgis.FlyingCam.HandleMouseClick(InputAction.CallbackContext)
        VB: Virgis.FlyingCam.HandleMouseClick(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: HandleMouseClick
        path: ''
        startLine: 462
      syntax:
        content:
          CSharp: public void HandleMouseClick(InputAction.CallbackContext context)
          VB: Public Sub HandleMouseClick(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: InputAction.CallbackContext
      overload: Virgis.FlyingCam.HandleMouseClick*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FlyingCam.Move(Vector2)
      commentId: M:Virgis.FlyingCam.Move(Vector2)
      language: CSharp
      name:
        CSharp: Move(Vector2)
        VB: Move(Vector2)
      nameWithType:
        CSharp: FlyingCam.Move(Vector2)
        VB: FlyingCam.Move(Vector2)
      qualifiedName:
        CSharp: Virgis.FlyingCam.Move(Vector2)
        VB: Virgis.FlyingCam.Move(Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Move
        path: ''
        startLine: 521
      syntax:
        content:
          CSharp: public void Move(Vector2 axis)
          VB: Public Sub Move(axis As Vector2)
        parameters:
        - id: axis
          type: Vector2
      overload: Virgis.FlyingCam.Move*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FlyingCam.PanZoom(Vector2)
      commentId: M:Virgis.FlyingCam.PanZoom(Vector2)
      language: CSharp
      name:
        CSharp: PanZoom(Vector2)
        VB: PanZoom(Vector2)
      nameWithType:
        CSharp: FlyingCam.PanZoom(Vector2)
        VB: FlyingCam.PanZoom(Vector2)
      qualifiedName:
        CSharp: Virgis.FlyingCam.PanZoom(Vector2)
        VB: Virgis.FlyingCam.PanZoom(Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: PanZoom
        path: ''
        startLine: 533
      syntax:
        content:
          CSharp: public void PanZoom(Vector2 axis)
          VB: Public Sub PanZoom(axis As Vector2)
        parameters:
        - id: axis
          type: Vector2
      overload: Virgis.FlyingCam.PanZoom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FlyingCam.PointerHit(ObjectPointer.EventData)
      commentId: M:Virgis.FlyingCam.PointerHit(ObjectPointer.EventData)
      language: CSharp
      name:
        CSharp: PointerHit(ObjectPointer.EventData)
        VB: PointerHit(ObjectPointer.EventData)
      nameWithType:
        CSharp: FlyingCam.PointerHit(ObjectPointer.EventData)
        VB: FlyingCam.PointerHit(ObjectPointer.EventData)
      qualifiedName:
        CSharp: Virgis.FlyingCam.PointerHit(ObjectPointer.EventData)
        VB: Virgis.FlyingCam.PointerHit(ObjectPointer.EventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: PointerHit
        path: ''
        startLine: 555
      syntax:
        content:
          CSharp: public void PointerHit(ObjectPointer.EventData data)
          VB: Public Sub PointerHit(data As ObjectPointer.EventData)
        parameters:
        - id: data
          type: ObjectPointer.EventData
      overload: Virgis.FlyingCam.PointerHit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FlyingCam.PointerUnhit(ObjectPointer.EventData)
      commentId: M:Virgis.FlyingCam.PointerUnhit(ObjectPointer.EventData)
      language: CSharp
      name:
        CSharp: PointerUnhit(ObjectPointer.EventData)
        VB: PointerUnhit(ObjectPointer.EventData)
      nameWithType:
        CSharp: FlyingCam.PointerUnhit(ObjectPointer.EventData)
        VB: FlyingCam.PointerUnhit(ObjectPointer.EventData)
      qualifiedName:
        CSharp: Virgis.FlyingCam.PointerUnhit(ObjectPointer.EventData)
        VB: Virgis.FlyingCam.PointerUnhit(ObjectPointer.EventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: PointerUnhit
        path: ''
        startLine: 588
      syntax:
        content:
          CSharp: public void PointerUnhit(ObjectPointer.EventData data)
          VB: Public Sub PointerUnhit(data As ObjectPointer.EventData)
        parameters:
        - id: data
          type: ObjectPointer.EventData
      overload: Virgis.FlyingCam.PointerUnhit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FlyingCam.triggerPressed(System.Boolean)
      commentId: M:Virgis.FlyingCam.triggerPressed(System.Boolean)
      language: CSharp
      name:
        CSharp: triggerPressed(Boolean)
        VB: triggerPressed(Boolean)
      nameWithType:
        CSharp: FlyingCam.triggerPressed(Boolean)
        VB: FlyingCam.triggerPressed(Boolean)
      qualifiedName:
        CSharp: Virgis.FlyingCam.triggerPressed(System.Boolean)
        VB: Virgis.FlyingCam.triggerPressed(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: triggerPressed
        path: ''
        startLine: 598
      syntax:
        content:
          CSharp: public void triggerPressed(bool thisEvent)
          VB: Public Sub triggerPressed(thisEvent As Boolean)
        parameters:
        - id: thisEvent
          type: System.Boolean
      overload: Virgis.FlyingCam.triggerPressed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FlyingCam.gripPressed(System.Boolean)
      commentId: M:Virgis.FlyingCam.gripPressed(System.Boolean)
      language: CSharp
      name:
        CSharp: gripPressed(Boolean)
        VB: gripPressed(Boolean)
      nameWithType:
        CSharp: FlyingCam.gripPressed(Boolean)
        VB: FlyingCam.gripPressed(Boolean)
      qualifiedName:
        CSharp: Virgis.FlyingCam.gripPressed(System.Boolean)
        VB: Virgis.FlyingCam.gripPressed(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: gripPressed
        path: ''
        startLine: 604
      syntax:
        content:
          CSharp: public void gripPressed(bool thisEvent)
          VB: Public Sub gripPressed(thisEvent As Boolean)
        parameters:
        - id: thisEvent
          type: System.Boolean
      overload: Virgis.FlyingCam.gripPressed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FlyingCam.lhTriggerPressed(System.Boolean)
      commentId: M:Virgis.FlyingCam.lhTriggerPressed(System.Boolean)
      language: CSharp
      name:
        CSharp: lhTriggerPressed(Boolean)
        VB: lhTriggerPressed(Boolean)
      nameWithType:
        CSharp: FlyingCam.lhTriggerPressed(Boolean)
        VB: FlyingCam.lhTriggerPressed(Boolean)
      qualifiedName:
        CSharp: Virgis.FlyingCam.lhTriggerPressed(System.Boolean)
        VB: Virgis.FlyingCam.lhTriggerPressed(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: lhTriggerPressed
        path: ''
        startLine: 610
      syntax:
        content:
          CSharp: public void lhTriggerPressed(bool thisEvent)
          VB: Public Sub lhTriggerPressed(thisEvent As Boolean)
        parameters:
        - id: thisEvent
          type: System.Boolean
      overload: Virgis.FlyingCam.lhTriggerPressed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FlyingCam.lhGripPressed(System.Boolean)
      commentId: M:Virgis.FlyingCam.lhGripPressed(System.Boolean)
      language: CSharp
      name:
        CSharp: lhGripPressed(Boolean)
        VB: lhGripPressed(Boolean)
      nameWithType:
        CSharp: FlyingCam.lhGripPressed(Boolean)
        VB: FlyingCam.lhGripPressed(Boolean)
      qualifiedName:
        CSharp: Virgis.FlyingCam.lhGripPressed(System.Boolean)
        VB: Virgis.FlyingCam.lhGripPressed(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: lhGripPressed
        path: ''
        startLine: 615
      syntax:
        content:
          CSharp: public void lhGripPressed(bool thisEvent)
          VB: Public Sub lhGripPressed(thisEvent As Boolean)
        parameters:
        - id: thisEvent
          type: System.Boolean
      overload: Virgis.FlyingCam.lhGripPressed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FlyingCam.addVertexPressed(System.Boolean)
      commentId: M:Virgis.FlyingCam.addVertexPressed(System.Boolean)
      language: CSharp
      name:
        CSharp: addVertexPressed(Boolean)
        VB: addVertexPressed(Boolean)
      nameWithType:
        CSharp: FlyingCam.addVertexPressed(Boolean)
        VB: FlyingCam.addVertexPressed(Boolean)
      qualifiedName:
        CSharp: Virgis.FlyingCam.addVertexPressed(System.Boolean)
        VB: Virgis.FlyingCam.addVertexPressed(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: addVertexPressed
        path: ''
        startLine: 620
      syntax:
        content:
          CSharp: public void addVertexPressed(bool thisEvent)
          VB: Public Sub addVertexPressed(thisEvent As Boolean)
        parameters:
        - id: thisEvent
          type: System.Boolean
      overload: Virgis.FlyingCam.addVertexPressed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FlyingCam.delVertexPressed(System.Boolean)
      commentId: M:Virgis.FlyingCam.delVertexPressed(System.Boolean)
      language: CSharp
      name:
        CSharp: delVertexPressed(Boolean)
        VB: delVertexPressed(Boolean)
      nameWithType:
        CSharp: FlyingCam.delVertexPressed(Boolean)
        VB: FlyingCam.delVertexPressed(Boolean)
      qualifiedName:
        CSharp: Virgis.FlyingCam.delVertexPressed(System.Boolean)
        VB: Virgis.FlyingCam.delVertexPressed(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: delVertexPressed
        path: ''
        startLine: 626
      syntax:
        content:
          CSharp: public void delVertexPressed(bool thisEvent)
          VB: Public Sub delVertexPressed(thisEvent As Boolean)
        parameters:
        - id: thisEvent
          type: System.Boolean
      overload: Virgis.FlyingCam.delVertexPressed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FlyingCam.triggerReleased(System.Boolean)
      commentId: M:Virgis.FlyingCam.triggerReleased(System.Boolean)
      language: CSharp
      name:
        CSharp: triggerReleased(Boolean)
        VB: triggerReleased(Boolean)
      nameWithType:
        CSharp: FlyingCam.triggerReleased(Boolean)
        VB: FlyingCam.triggerReleased(Boolean)
      qualifiedName:
        CSharp: Virgis.FlyingCam.triggerReleased(System.Boolean)
        VB: Virgis.FlyingCam.triggerReleased(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: triggerReleased
        path: ''
        startLine: 635
      syntax:
        content:
          CSharp: public void triggerReleased(bool thisEvent)
          VB: Public Sub triggerReleased(thisEvent As Boolean)
        parameters:
        - id: thisEvent
          type: System.Boolean
      overload: Virgis.FlyingCam.triggerReleased*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FlyingCam.gripReleased(System.Boolean)
      commentId: M:Virgis.FlyingCam.gripReleased(System.Boolean)
      language: CSharp
      name:
        CSharp: gripReleased(Boolean)
        VB: gripReleased(Boolean)
      nameWithType:
        CSharp: FlyingCam.gripReleased(Boolean)
        VB: FlyingCam.gripReleased(Boolean)
      qualifiedName:
        CSharp: Virgis.FlyingCam.gripReleased(System.Boolean)
        VB: Virgis.FlyingCam.gripReleased(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: gripReleased
        path: ''
        startLine: 642
      syntax:
        content:
          CSharp: public void gripReleased(bool thisEvent)
          VB: Public Sub gripReleased(thisEvent As Boolean)
        parameters:
        - id: thisEvent
          type: System.Boolean
      overload: Virgis.FlyingCam.gripReleased*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FlyingCam.lhTriggerReleased(System.Boolean)
      commentId: M:Virgis.FlyingCam.lhTriggerReleased(System.Boolean)
      language: CSharp
      name:
        CSharp: lhTriggerReleased(Boolean)
        VB: lhTriggerReleased(Boolean)
      nameWithType:
        CSharp: FlyingCam.lhTriggerReleased(Boolean)
        VB: FlyingCam.lhTriggerReleased(Boolean)
      qualifiedName:
        CSharp: Virgis.FlyingCam.lhTriggerReleased(System.Boolean)
        VB: Virgis.FlyingCam.lhTriggerReleased(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: lhTriggerReleased
        path: ''
        startLine: 650
      syntax:
        content:
          CSharp: public void lhTriggerReleased(bool thisEvent)
          VB: Public Sub lhTriggerReleased(thisEvent As Boolean)
        parameters:
        - id: thisEvent
          type: System.Boolean
      overload: Virgis.FlyingCam.lhTriggerReleased*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FlyingCam.lhGripRelaesed(System.Boolean)
      commentId: M:Virgis.FlyingCam.lhGripRelaesed(System.Boolean)
      language: CSharp
      name:
        CSharp: lhGripRelaesed(Boolean)
        VB: lhGripRelaesed(Boolean)
      nameWithType:
        CSharp: FlyingCam.lhGripRelaesed(Boolean)
        VB: FlyingCam.lhGripRelaesed(Boolean)
      qualifiedName:
        CSharp: Virgis.FlyingCam.lhGripRelaesed(System.Boolean)
        VB: Virgis.FlyingCam.lhGripRelaesed(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: lhGripRelaesed
        path: ''
        startLine: 655
      syntax:
        content:
          CSharp: public void lhGripRelaesed(bool thisEvent)
          VB: Public Sub lhGripRelaesed(thisEvent As Boolean)
        parameters:
        - id: thisEvent
          type: System.Boolean
      overload: Virgis.FlyingCam.lhGripRelaesed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FlyingCam.addVertexReleased(System.Boolean)
      commentId: M:Virgis.FlyingCam.addVertexReleased(System.Boolean)
      language: CSharp
      name:
        CSharp: addVertexReleased(Boolean)
        VB: addVertexReleased(Boolean)
      nameWithType:
        CSharp: FlyingCam.addVertexReleased(Boolean)
        VB: FlyingCam.addVertexReleased(Boolean)
      qualifiedName:
        CSharp: Virgis.FlyingCam.addVertexReleased(System.Boolean)
        VB: Virgis.FlyingCam.addVertexReleased(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: addVertexReleased
        path: ''
        startLine: 661
      syntax:
        content:
          CSharp: public void addVertexReleased(bool thisEvent)
          VB: Public Sub addVertexReleased(thisEvent As Boolean)
        parameters:
        - id: thisEvent
          type: System.Boolean
      overload: Virgis.FlyingCam.addVertexReleased*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FlyingCam.delVertexReleased(System.Boolean)
      commentId: M:Virgis.FlyingCam.delVertexReleased(System.Boolean)
      language: CSharp
      name:
        CSharp: delVertexReleased(Boolean)
        VB: delVertexReleased(Boolean)
      nameWithType:
        CSharp: FlyingCam.delVertexReleased(Boolean)
        VB: FlyingCam.delVertexReleased(Boolean)
      qualifiedName:
        CSharp: Virgis.FlyingCam.delVertexReleased(System.Boolean)
        VB: Virgis.FlyingCam.delVertexReleased(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: delVertexReleased
        path: ''
        startLine: 666
      syntax:
        content:
          CSharp: public void delVertexReleased(bool thisEvent)
          VB: Public Sub delVertexReleased(thisEvent As Boolean)
        parameters:
        - id: thisEvent
          type: System.Boolean
      overload: Virgis.FlyingCam.delVertexReleased*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FlyingCam.receiveRay(PointsCast.EventData)
      commentId: M:Virgis.FlyingCam.receiveRay(PointsCast.EventData)
      language: CSharp
      name:
        CSharp: receiveRay(PointsCast.EventData)
        VB: receiveRay(PointsCast.EventData)
      nameWithType:
        CSharp: FlyingCam.receiveRay(PointsCast.EventData)
        VB: FlyingCam.receiveRay(PointsCast.EventData)
      qualifiedName:
        CSharp: Virgis.FlyingCam.receiveRay(PointsCast.EventData)
        VB: Virgis.FlyingCam.receiveRay(PointsCast.EventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: receiveRay
        path: ''
        startLine: 676
      syntax:
        content:
          CSharp: public void receiveRay(PointsCast.EventData data)
          VB: Public Sub receiveRay(data As PointsCast.EventData)
        parameters:
        - id: data
          type: PointsCast.EventData
      overload: Virgis.FlyingCam.receiveRay*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FlyingCam.ScaleUp(System.Boolean)
      commentId: M:Virgis.FlyingCam.ScaleUp(System.Boolean)
      language: CSharp
      name:
        CSharp: ScaleUp(Boolean)
        VB: ScaleUp(Boolean)
      nameWithType:
        CSharp: FlyingCam.ScaleUp(Boolean)
        VB: FlyingCam.ScaleUp(Boolean)
      qualifiedName:
        CSharp: Virgis.FlyingCam.ScaleUp(System.Boolean)
        VB: Virgis.FlyingCam.ScaleUp(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: ScaleUp
        path: ''
        startLine: 691
      syntax:
        content:
          CSharp: public void ScaleUp(bool thisEvent)
          VB: Public Sub ScaleUp(thisEvent As Boolean)
        parameters:
        - id: thisEvent
          type: System.Boolean
      overload: Virgis.FlyingCam.ScaleUp*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FlyingCam.ScaleDown(System.Boolean)
      commentId: M:Virgis.FlyingCam.ScaleDown(System.Boolean)
      language: CSharp
      name:
        CSharp: ScaleDown(Boolean)
        VB: ScaleDown(Boolean)
      nameWithType:
        CSharp: FlyingCam.ScaleDown(Boolean)
        VB: FlyingCam.ScaleDown(Boolean)
      qualifiedName:
        CSharp: Virgis.FlyingCam.ScaleDown(System.Boolean)
        VB: Virgis.FlyingCam.ScaleDown(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: ScaleDown
        path: ''
        startLine: 699
      syntax:
        content:
          CSharp: public void ScaleDown(bool thisEvent)
          VB: Public Sub ScaleDown(thisEvent As Boolean)
        parameters:
        - id: thisEvent
          type: System.Boolean
      overload: Virgis.FlyingCam.ScaleDown*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.FeatureAdder
    commentId: T:Virgis.FeatureAdder
    language: CSharp
    name:
      CSharp: FeatureAdder
      VB: FeatureAdder
    nameWithType:
      CSharp: FeatureAdder
      VB: FeatureAdder
    qualifiedName:
      CSharp: Virgis.FeatureAdder
      VB: Virgis.FeatureAdder
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: FeatureAdder
      path: ''
      startLine: 847
    syntax:
      content:
        CSharp: 'public class FeatureAdder : MonoBehaviour'
        VB: >-
          Public Class FeatureAdder

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.FeatureAdder.blueCubePrefab
      commentId: F:Virgis.FeatureAdder.blueCubePrefab
      language: CSharp
      name:
        CSharp: blueCubePrefab
        VB: blueCubePrefab
      nameWithType:
        CSharp: FeatureAdder.blueCubePrefab
        VB: FeatureAdder.blueCubePrefab
      qualifiedName:
        CSharp: Virgis.FeatureAdder.blueCubePrefab
        VB: Virgis.FeatureAdder.blueCubePrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: blueCubePrefab
        path: ''
        startLine: 848
      syntax:
        content:
          CSharp: public GameObject blueCubePrefab
          VB: Public blueCubePrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FeatureAdder.defaultMarkerShape
      commentId: F:Virgis.FeatureAdder.defaultMarkerShape
      language: CSharp
      name:
        CSharp: defaultMarkerShape
        VB: defaultMarkerShape
      nameWithType:
        CSharp: FeatureAdder.defaultMarkerShape
        VB: FeatureAdder.defaultMarkerShape
      qualifiedName:
        CSharp: Virgis.FeatureAdder.defaultMarkerShape
        VB: Virgis.FeatureAdder.defaultMarkerShape
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: defaultMarkerShape
        path: ''
        startLine: 849
      syntax:
        content:
          CSharp: public GameObject defaultMarkerShape
          VB: Public defaultMarkerShape As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FeatureAdder.LeftTriggerPressed(System.Boolean)
      commentId: M:Virgis.FeatureAdder.LeftTriggerPressed(System.Boolean)
      language: CSharp
      name:
        CSharp: LeftTriggerPressed(Boolean)
        VB: LeftTriggerPressed(Boolean)
      nameWithType:
        CSharp: FeatureAdder.LeftTriggerPressed(Boolean)
        VB: FeatureAdder.LeftTriggerPressed(Boolean)
      qualifiedName:
        CSharp: Virgis.FeatureAdder.LeftTriggerPressed(System.Boolean)
        VB: Virgis.FeatureAdder.LeftTriggerPressed(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: LeftTriggerPressed
        path: ''
        startLine: 884
      syntax:
        content:
          CSharp: public void LeftTriggerPressed(bool activate)
          VB: Public Sub LeftTriggerPressed(activate As Boolean)
        parameters:
        - id: activate
          type: System.Boolean
      overload: Virgis.FeatureAdder.LeftTriggerPressed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FeatureAdder.LeftTriggerReleased(System.Boolean)
      commentId: M:Virgis.FeatureAdder.LeftTriggerReleased(System.Boolean)
      language: CSharp
      name:
        CSharp: LeftTriggerReleased(Boolean)
        VB: LeftTriggerReleased(Boolean)
      nameWithType:
        CSharp: FeatureAdder.LeftTriggerReleased(Boolean)
        VB: FeatureAdder.LeftTriggerReleased(Boolean)
      qualifiedName:
        CSharp: Virgis.FeatureAdder.LeftTriggerReleased(System.Boolean)
        VB: Virgis.FeatureAdder.LeftTriggerReleased(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: LeftTriggerReleased
        path: ''
        startLine: 897
      syntax:
        content:
          CSharp: public void LeftTriggerReleased(bool activate)
          VB: Public Sub LeftTriggerReleased(activate As Boolean)
        parameters:
        - id: activate
          type: System.Boolean
      overload: Virgis.FeatureAdder.LeftTriggerReleased*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.QuitButton
    commentId: T:Virgis.QuitButton
    language: CSharp
    name:
      CSharp: QuitButton
      VB: QuitButton
    nameWithType:
      CSharp: QuitButton
      VB: QuitButton
    qualifiedName:
      CSharp: Virgis.QuitButton
      VB: Virgis.QuitButton
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: QuitButton
      path: ''
      startLine: 1026
    syntax:
      content:
        CSharp: 'public class QuitButton : MonoBehaviour'
        VB: >-
          Public Class QuitButton

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.QuitButton.OnClick
      commentId: M:Virgis.QuitButton.OnClick
      language: CSharp
      name:
        CSharp: OnClick()
        VB: OnClick()
      nameWithType:
        CSharp: QuitButton.OnClick()
        VB: QuitButton.OnClick()
      qualifiedName:
        CSharp: Virgis.QuitButton.OnClick()
        VB: Virgis.QuitButton.OnClick()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: OnClick
        path: ''
        startLine: 1028
      syntax:
        content:
          CSharp: public void OnClick()
          VB: Public Sub OnClick
      overload: Virgis.QuitButton.OnClick*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.MapInitialize
    commentId: T:Virgis.MapInitialize
    language: CSharp
    name:
      CSharp: MapInitialize
      VB: MapInitialize
    nameWithType:
      CSharp: MapInitialize
      VB: MapInitialize
    qualifiedName:
      CSharp: Virgis.MapInitialize
      VB: Virgis.MapInitialize
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: MapInitialize
      path: ''
      startLine: 1060
    summary: "\nThis script initialises the project and loads the Project and Layer data.\n\nIt is run once at Startup\n"
    example: []
    syntax:
      content:
        CSharp: 'public class MapInitialize : VirgisLayer<RecordSet, object>, IVirgisLayer, IVirgisEntity'
        VB: >-
          Public Class MapInitialize

              Inherits VirgisLayer(Of RecordSet, Object)

              Implements IVirgisLayer, IVirgisEntity
    inheritance:
    - System.Object
    - Virgis.VirgisLayer{RecordSet,System.Object}
    implements:
    - Virgis.IVirgisLayer
    - Virgis.IVirgisEntity
    inheritedMembers:
    - Virgis.VirgisLayer{RecordSet,System.Object}.layer
    - Virgis.VirgisLayer{RecordSet,System.Object}.features
    - Virgis.VirgisLayer{RecordSet,System.Object}.changed
    - Virgis.VirgisLayer{RecordSet,System.Object}._id
    - Virgis.VirgisLayer{RecordSet,System.Object}._editable
    - Virgis.VirgisLayer{RecordSet,System.Object}.Init(RecordSet)
    - Virgis.VirgisLayer{RecordSet,System.Object}._init(RecordSet)
    - Virgis.VirgisLayer{RecordSet,System.Object}.AddFeature(Vector3[])
    - Virgis.VirgisLayer{RecordSet,System.Object}._addFeature(Vector3[])
    - Virgis.VirgisLayer{RecordSet,System.Object}.Draw
    - Virgis.VirgisLayer{RecordSet,System.Object}._draw
    - Virgis.VirgisLayer{RecordSet,System.Object}.CheckPoint
    - Virgis.VirgisLayer{RecordSet,System.Object}._checkpoint
    - Virgis.VirgisLayer{RecordSet,System.Object}.Save
    - Virgis.VirgisLayer{RecordSet,System.Object}._save
    - Virgis.VirgisLayer{RecordSet,System.Object}.Translate(Virgis.MoveArgs)
    - Virgis.VirgisLayer{RecordSet,System.Object}.MoveAxis(Virgis.MoveArgs)
    - Virgis.VirgisLayer{RecordSet,System.Object}.MoveTo(Virgis.MoveArgs)
    - Virgis.VirgisLayer{RecordSet,System.Object}.VertexMove(Virgis.MoveArgs)
    - Virgis.VirgisLayer{RecordSet,System.Object}.StartEditSession
    - Virgis.VirgisLayer{RecordSet,System.Object}.ExitEditSession(System.Boolean)
    - Virgis.VirgisLayer{RecordSet,System.Object}.Selected(Virgis.SelectionTypes)
    - Virgis.VirgisLayer{RecordSet,System.Object}.UnSelected(Virgis.SelectionTypes)
    - Virgis.VirgisLayer{RecordSet,System.Object}.GetClosest(Vector3,Guid[])
    - Virgis.VirgisLayer{RecordSet,System.Object}.GetFeature(Guid)
    - Virgis.VirgisLayer{RecordSet,System.Object}.GetId
    - Virgis.VirgisLayer{RecordSet,System.Object}.GetMetadata
    - Virgis.VirgisLayer{RecordSet,System.Object}.GetFeatureShape
    - Virgis.VirgisLayer{RecordSet,System.Object}.SetVisible(System.Boolean)
    - Virgis.VirgisLayer{RecordSet,System.Object}.IsVisible
    - Virgis.VirgisLayer{RecordSet,System.Object}.SetEditable(System.Boolean)
    - Virgis.VirgisLayer{RecordSet,System.Object}.IsEditable
    - Virgis.VirgisLayer{RecordSet,System.Object}.Equals(System.Object)
    - Virgis.VirgisLayer{RecordSet,System.Object}.GetHashCode
    - Virgis.VirgisLayer{RecordSet,System.Object}.Equals(Virgis.VirgisLayer{RecordSet,System.Object})
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.MapInitialize.TrackingSpace
      commentId: F:Virgis.MapInitialize.TrackingSpace
      language: CSharp
      name:
        CSharp: TrackingSpace
        VB: TrackingSpace
      nameWithType:
        CSharp: MapInitialize.TrackingSpace
        VB: MapInitialize.TrackingSpace
      qualifiedName:
        CSharp: Virgis.MapInitialize.TrackingSpace
        VB: Virgis.MapInitialize.TrackingSpace
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: TrackingSpace
        path: ''
        startLine: 1063
      syntax:
        content:
          CSharp: public GameObject TrackingSpace
          VB: Public TrackingSpace As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MapInitialize.MainCamera
      commentId: F:Virgis.MapInitialize.MainCamera
      language: CSharp
      name:
        CSharp: MainCamera
        VB: MainCamera
      nameWithType:
        CSharp: MapInitialize.MainCamera
        VB: MapInitialize.MainCamera
      qualifiedName:
        CSharp: Virgis.MapInitialize.MainCamera
        VB: Virgis.MapInitialize.MainCamera
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MainCamera
        path: ''
        startLine: 1066
      syntax:
        content:
          CSharp: public Camera MainCamera
          VB: Public MainCamera As Camera
        return:
          type: Camera
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MapInitialize.PointLayer
      commentId: F:Virgis.MapInitialize.PointLayer
      language: CSharp
      name:
        CSharp: PointLayer
        VB: PointLayer
      nameWithType:
        CSharp: MapInitialize.PointLayer
        VB: MapInitialize.PointLayer
      qualifiedName:
        CSharp: Virgis.MapInitialize.PointLayer
        VB: Virgis.MapInitialize.PointLayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: PointLayer
        path: ''
        startLine: 1069
      syntax:
        content:
          CSharp: public GameObject PointLayer
          VB: Public PointLayer As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MapInitialize.LineLayer
      commentId: F:Virgis.MapInitialize.LineLayer
      language: CSharp
      name:
        CSharp: LineLayer
        VB: LineLayer
      nameWithType:
        CSharp: MapInitialize.LineLayer
        VB: MapInitialize.LineLayer
      qualifiedName:
        CSharp: Virgis.MapInitialize.LineLayer
        VB: Virgis.MapInitialize.LineLayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: LineLayer
        path: ''
        startLine: 1070
      syntax:
        content:
          CSharp: public GameObject LineLayer
          VB: Public LineLayer As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MapInitialize.PolygonLayer
      commentId: F:Virgis.MapInitialize.PolygonLayer
      language: CSharp
      name:
        CSharp: PolygonLayer
        VB: PolygonLayer
      nameWithType:
        CSharp: MapInitialize.PolygonLayer
        VB: MapInitialize.PolygonLayer
      qualifiedName:
        CSharp: Virgis.MapInitialize.PolygonLayer
        VB: Virgis.MapInitialize.PolygonLayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: PolygonLayer
        path: ''
        startLine: 1071
      syntax:
        content:
          CSharp: public GameObject PolygonLayer
          VB: Public PolygonLayer As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MapInitialize.PointCloud
      commentId: F:Virgis.MapInitialize.PointCloud
      language: CSharp
      name:
        CSharp: PointCloud
        VB: PointCloud
      nameWithType:
        CSharp: MapInitialize.PointCloud
        VB: MapInitialize.PointCloud
      qualifiedName:
        CSharp: Virgis.MapInitialize.PointCloud
        VB: Virgis.MapInitialize.PointCloud
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: PointCloud
        path: ''
        startLine: 1072
      syntax:
        content:
          CSharp: public GameObject PointCloud
          VB: Public PointCloud As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MapInitialize.MeshLayer
      commentId: F:Virgis.MapInitialize.MeshLayer
      language: CSharp
      name:
        CSharp: MeshLayer
        VB: MeshLayer
      nameWithType:
        CSharp: MapInitialize.MeshLayer
        VB: MapInitialize.MeshLayer
      qualifiedName:
        CSharp: Virgis.MapInitialize.MeshLayer
        VB: Virgis.MapInitialize.MeshLayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MeshLayer
        path: ''
        startLine: 1073
      syntax:
        content:
          CSharp: public GameObject MeshLayer
          VB: Public MeshLayer As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MapInitialize.CsvLayer
      commentId: F:Virgis.MapInitialize.CsvLayer
      language: CSharp
      name:
        CSharp: CsvLayer
        VB: CsvLayer
      nameWithType:
        CSharp: MapInitialize.CsvLayer
        VB: MapInitialize.CsvLayer
      qualifiedName:
        CSharp: Virgis.MapInitialize.CsvLayer
        VB: Virgis.MapInitialize.CsvLayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CsvLayer
        path: ''
        startLine: 1074
      syntax:
        content:
          CSharp: public GameObject CsvLayer
          VB: Public CsvLayer As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MapInitialize.appState
      commentId: F:Virgis.MapInitialize.appState
      language: CSharp
      name:
        CSharp: appState
        VB: appState
      nameWithType:
        CSharp: MapInitialize.appState
        VB: MapInitialize.appState
      qualifiedName:
        CSharp: Virgis.MapInitialize.appState
        VB: Virgis.MapInitialize.appState
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: appState
        path: ''
        startLine: 1075
      syntax:
        content:
          CSharp: public AppState appState
          VB: Public appState As AppState
        return:
          type: Virgis.AppState
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MapInitialize.inputfile
      commentId: F:Virgis.MapInitialize.inputfile
      language: CSharp
      name:
        CSharp: inputfile
        VB: inputfile
      nameWithType:
        CSharp: MapInitialize.inputfile
        VB: MapInitialize.inputfile
      qualifiedName:
        CSharp: Virgis.MapInitialize.inputfile
        VB: Virgis.MapInitialize.inputfile
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: inputfile
        path: ''
        startLine: 1078
      syntax:
        content:
          CSharp: public string inputfile
          VB: Public inputfile As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MapInitialize._init(RecordSet)
      commentId: M:Virgis.MapInitialize._init(RecordSet)
      language: CSharp
      name:
        CSharp: _init(RecordSet)
        VB: _init(RecordSet)
      nameWithType:
        CSharp: MapInitialize._init(RecordSet)
        VB: MapInitialize._init(RecordSet)
      qualifiedName:
        CSharp: Virgis.MapInitialize._init(RecordSet)
        VB: Virgis.MapInitialize._init(RecordSet)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _init
        path: ''
        startLine: 1167
      syntax:
        content:
          CSharp: protected override Task _init(RecordSet layer)
          VB: Protected Overrides Function _init(layer As RecordSet) As Task
        parameters:
        - id: layer
          type: RecordSet
        return:
          type: Task
      overload: Virgis.MapInitialize._init*
      overridden: Virgis.VirgisLayer{RecordSet,System.Object}._init(RecordSet)
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.MapInitialize.Add(Virgis.MoveArgs)
      commentId: M:Virgis.MapInitialize.Add(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: Add(MoveArgs)
        VB: Add(MoveArgs)
      nameWithType:
        CSharp: MapInitialize.Add(MoveArgs)
        VB: MapInitialize.Add(MoveArgs)
      qualifiedName:
        CSharp: Virgis.MapInitialize.Add(Virgis.MoveArgs)
        VB: Virgis.MapInitialize.Add(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Add
        path: ''
        startLine: 1172
      syntax:
        content:
          CSharp: public void Add(MoveArgs args)
          VB: Public Sub Add(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.MapInitialize.Add*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MapInitialize._addFeature(Vector3[])
      commentId: M:Virgis.MapInitialize._addFeature(Vector3[])
      language: CSharp
      name:
        CSharp: _addFeature(Vector3[])
        VB: _addFeature(Vector3())
      nameWithType:
        CSharp: MapInitialize._addFeature(Vector3[])
        VB: MapInitialize._addFeature(Vector3())
      qualifiedName:
        CSharp: Virgis.MapInitialize._addFeature(Vector3[])
        VB: Virgis.MapInitialize._addFeature(Vector3())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _addFeature
        path: ''
        startLine: 1177
      syntax:
        content:
          CSharp: protected override VirgisFeature _addFeature(Vector3[] geometry)
          VB: Protected Overrides Function _addFeature(geometry As Vector3()) As VirgisFeature
        parameters:
        - id: geometry
          type: Vector3[]
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.MapInitialize._addFeature*
      overridden: Virgis.VirgisLayer{RecordSet,System.Object}._addFeature(Vector3[])
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.MapInitialize._draw
      commentId: M:Virgis.MapInitialize._draw
      language: CSharp
      name:
        CSharp: _draw()
        VB: _draw()
      nameWithType:
        CSharp: MapInitialize._draw()
        VB: MapInitialize._draw()
      qualifiedName:
        CSharp: Virgis.MapInitialize._draw()
        VB: Virgis.MapInitialize._draw()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _draw
        path: ''
        startLine: 1190
      syntax:
        content:
          CSharp: protected override void _draw()
          VB: Protected Overrides Sub _draw
      overload: Virgis.MapInitialize._draw*
      overridden: Virgis.VirgisLayer{RecordSet,System.Object}._draw
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.MapInitialize.ExitEditSession(System.Boolean)
      commentId: M:Virgis.MapInitialize.ExitEditSession(System.Boolean)
      language: CSharp
      name:
        CSharp: ExitEditSession(Boolean)
        VB: ExitEditSession(Boolean)
      nameWithType:
        CSharp: MapInitialize.ExitEditSession(Boolean)
        VB: MapInitialize.ExitEditSession(Boolean)
      qualifiedName:
        CSharp: Virgis.MapInitialize.ExitEditSession(System.Boolean)
        VB: Virgis.MapInitialize.ExitEditSession(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: ExitEditSession
        path: ''
        startLine: 1195
      syntax:
        content:
          CSharp: public override void ExitEditSession(bool saved)
          VB: Public Overrides Sub ExitEditSession(saved As Boolean)
        parameters:
        - id: saved
          type: System.Boolean
      overload: Virgis.MapInitialize.ExitEditSession*
      overridden: Virgis.VirgisLayer{RecordSet,System.Object}.ExitEditSession(System.Boolean)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.MapInitialize._checkpoint
      commentId: M:Virgis.MapInitialize._checkpoint
      language: CSharp
      name:
        CSharp: _checkpoint()
        VB: _checkpoint()
      nameWithType:
        CSharp: MapInitialize._checkpoint()
        VB: MapInitialize._checkpoint()
      qualifiedName:
        CSharp: Virgis.MapInitialize._checkpoint()
        VB: Virgis.MapInitialize._checkpoint()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _checkpoint
        path: ''
        startLine: 1202
      syntax:
        content:
          CSharp: protected override void _checkpoint()
          VB: Protected Overrides Sub _checkpoint
      overload: Virgis.MapInitialize._checkpoint*
      overridden: Virgis.VirgisLayer{RecordSet,System.Object}._checkpoint
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.MapInitialize.Save(System.Boolean)
      commentId: M:Virgis.MapInitialize.Save(System.Boolean)
      language: CSharp
      name:
        CSharp: Save(Boolean)
        VB: Save(Boolean)
      nameWithType:
        CSharp: MapInitialize.Save(Boolean)
        VB: MapInitialize.Save(Boolean)
      qualifiedName:
        CSharp: Virgis.MapInitialize.Save(System.Boolean)
        VB: Virgis.MapInitialize.Save(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Save
        path: ''
        startLine: 1206
      syntax:
        content:
          CSharp: public Task<RecordSet> Save(bool all = true)
          VB: Public Function Save(all As Boolean = True) As Task(Of RecordSet)
        parameters:
        - id: all
          type: System.Boolean
        return:
          type: Task{RecordSet}
      overload: Virgis.MapInitialize.Save*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MapInitialize._save
      commentId: M:Virgis.MapInitialize._save
      language: CSharp
      name:
        CSharp: _save()
        VB: _save()
      nameWithType:
        CSharp: MapInitialize._save()
        VB: MapInitialize._save()
      qualifiedName:
        CSharp: Virgis.MapInitialize._save()
        VB: Virgis.MapInitialize._save()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _save
        path: ''
        startLine: 1230
      syntax:
        content:
          CSharp: protected override Task _save()
          VB: Protected Overrides Function _save As Task
        return:
          type: Task
      overload: Virgis.MapInitialize._save*
      overridden: Virgis.VirgisLayer{RecordSet,System.Object}._save
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.MapInitialize.Translate(Virgis.MoveArgs)
      commentId: M:Virgis.MapInitialize.Translate(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: Translate(MoveArgs)
        VB: Translate(MoveArgs)
      nameWithType:
        CSharp: MapInitialize.Translate(MoveArgs)
        VB: MapInitialize.Translate(MoveArgs)
      qualifiedName:
        CSharp: Virgis.MapInitialize.Translate(Virgis.MoveArgs)
        VB: Virgis.MapInitialize.Translate(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Translate
        path: ''
        startLine: 1235
      syntax:
        content:
          CSharp: public override void Translate(MoveArgs args)
          VB: Public Overrides Sub Translate(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.MapInitialize.Translate*
      overridden: Virgis.VirgisLayer{RecordSet,System.Object}.Translate(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.MapInitialize.MoveAxis(Virgis.MoveArgs)
      commentId: M:Virgis.MapInitialize.MoveAxis(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveAxis(MoveArgs)
        VB: MoveAxis(MoveArgs)
      nameWithType:
        CSharp: MapInitialize.MoveAxis(MoveArgs)
        VB: MapInitialize.MoveAxis(MoveArgs)
      qualifiedName:
        CSharp: Virgis.MapInitialize.MoveAxis(Virgis.MoveArgs)
        VB: Virgis.MapInitialize.MoveAxis(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveAxis
        path: ''
        startLine: 1240
      syntax:
        content:
          CSharp: public override void MoveAxis(MoveArgs args)
          VB: Public Overrides Sub MoveAxis(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.MapInitialize.MoveAxis*
      overridden: Virgis.VirgisLayer{RecordSet,System.Object}.MoveAxis(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.MapInitialize.StartEditSession
      commentId: M:Virgis.MapInitialize.StartEditSession
      language: CSharp
      name:
        CSharp: StartEditSession()
        VB: StartEditSession()
      nameWithType:
        CSharp: MapInitialize.StartEditSession()
        VB: MapInitialize.StartEditSession()
      qualifiedName:
        CSharp: Virgis.MapInitialize.StartEditSession()
        VB: Virgis.MapInitialize.StartEditSession()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: StartEditSession
        path: ''
        startLine: 1245
      syntax:
        content:
          CSharp: public override void StartEditSession()
          VB: Public Overrides Sub StartEditSession
      overload: Virgis.MapInitialize.StartEditSession*
      overridden: Virgis.VirgisLayer{RecordSet,System.Object}.StartEditSession
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.MapInitialize._onStartEditSession
      commentId: M:Virgis.MapInitialize._onStartEditSession
      language: CSharp
      name:
        CSharp: _onStartEditSession()
        VB: _onStartEditSession()
      nameWithType:
        CSharp: MapInitialize._onStartEditSession()
        VB: MapInitialize._onStartEditSession()
      qualifiedName:
        CSharp: Virgis.MapInitialize._onStartEditSession()
        VB: Virgis.MapInitialize._onStartEditSession()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _onStartEditSession
        path: ''
        startLine: 1250
      syntax:
        content:
          CSharp: protected void _onStartEditSession()
          VB: Protected Sub _onStartEditSession
      overload: Virgis.MapInitialize._onStartEditSession*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.MapInitialize._onExitEditSession(System.Boolean)
      commentId: M:Virgis.MapInitialize._onExitEditSession(System.Boolean)
      language: CSharp
      name:
        CSharp: _onExitEditSession(Boolean)
        VB: _onExitEditSession(Boolean)
      nameWithType:
        CSharp: MapInitialize._onExitEditSession(Boolean)
        VB: MapInitialize._onExitEditSession(Boolean)
      qualifiedName:
        CSharp: Virgis.MapInitialize._onExitEditSession(System.Boolean)
        VB: Virgis.MapInitialize._onExitEditSession(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _onExitEditSession
        path: ''
        startLine: 1259
      summary: "\nCalled when an edit session ends\n"
      example: []
      syntax:
        content:
          CSharp: protected void _onExitEditSession(bool saved)
          VB: Protected Sub _onExitEditSession(saved As Boolean)
        parameters:
        - id: saved
          type: System.Boolean
          description: true if stop and save, false if stop and discard
      overload: Virgis.MapInitialize._onExitEditSession*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.MapInitialize.GetFeatureShape
      commentId: M:Virgis.MapInitialize.GetFeatureShape
      language: CSharp
      name:
        CSharp: GetFeatureShape()
        VB: GetFeatureShape()
      nameWithType:
        CSharp: MapInitialize.GetFeatureShape()
        VB: MapInitialize.GetFeatureShape()
      qualifiedName:
        CSharp: Virgis.MapInitialize.GetFeatureShape()
        VB: Virgis.MapInitialize.GetFeatureShape()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetFeatureShape
        path: ''
        startLine: 1264
      syntax:
        content:
          CSharp: public override GameObject GetFeatureShape()
          VB: Public Overrides Function GetFeatureShape As GameObject
        return:
          type: GameObject
      overload: Virgis.MapInitialize.GetFeatureShape*
      overridden: Virgis.VirgisLayer{RecordSet,System.Object}.GetFeatureShape
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Virgis.EditModeUI
    commentId: T:Virgis.EditModeUI
    language: CSharp
    name:
      CSharp: EditModeUI
      VB: EditModeUI
    nameWithType:
      CSharp: EditModeUI
      VB: EditModeUI
    qualifiedName:
      CSharp: Virgis.EditModeUI
      VB: Virgis.EditModeUI
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: EditModeUI
      path: ''
      startLine: 1276
    syntax:
      content:
        CSharp: 'public class EditModeUI : MonoBehaviour'
        VB: >-
          Public Class EditModeUI

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.EditModeUI.snapGridToggle
      commentId: F:Virgis.EditModeUI.snapGridToggle
      language: CSharp
      name:
        CSharp: snapGridToggle
        VB: snapGridToggle
      nameWithType:
        CSharp: EditModeUI.snapGridToggle
        VB: EditModeUI.snapGridToggle
      qualifiedName:
        CSharp: Virgis.EditModeUI.snapGridToggle
        VB: Virgis.EditModeUI.snapGridToggle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: snapGridToggle
        path: ''
        startLine: 1277
      syntax:
        content:
          CSharp: public Toggle snapGridToggle
          VB: Public snapGridToggle As Toggle
        return:
          type: Toggle
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.EditModeUI.snapAnchorToggle
      commentId: F:Virgis.EditModeUI.snapAnchorToggle
      language: CSharp
      name:
        CSharp: snapAnchorToggle
        VB: snapAnchorToggle
      nameWithType:
        CSharp: EditModeUI.snapAnchorToggle
        VB: EditModeUI.snapAnchorToggle
      qualifiedName:
        CSharp: Virgis.EditModeUI.snapAnchorToggle
        VB: Virgis.EditModeUI.snapAnchorToggle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: snapAnchorToggle
        path: ''
        startLine: 1278
      syntax:
        content:
          CSharp: public Toggle snapAnchorToggle
          VB: Public snapAnchorToggle As Toggle
        return:
          type: Toggle
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.EditModeUI.OnSnapGridToggleValueChanged(System.Boolean)
      commentId: M:Virgis.EditModeUI.OnSnapGridToggleValueChanged(System.Boolean)
      language: CSharp
      name:
        CSharp: OnSnapGridToggleValueChanged(Boolean)
        VB: OnSnapGridToggleValueChanged(Boolean)
      nameWithType:
        CSharp: EditModeUI.OnSnapGridToggleValueChanged(Boolean)
        VB: EditModeUI.OnSnapGridToggleValueChanged(Boolean)
      qualifiedName:
        CSharp: Virgis.EditModeUI.OnSnapGridToggleValueChanged(System.Boolean)
        VB: Virgis.EditModeUI.OnSnapGridToggleValueChanged(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: OnSnapGridToggleValueChanged
        path: ''
        startLine: 1296
      syntax:
        content:
          CSharp: public void OnSnapGridToggleValueChanged(bool enabled)
          VB: Public Sub OnSnapGridToggleValueChanged(enabled As Boolean)
        parameters:
        - id: enabled
          type: System.Boolean
      overload: Virgis.EditModeUI.OnSnapGridToggleValueChanged*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.EditModeUI.OnSnapAnchorToggleValueChanged(System.Boolean)
      commentId: M:Virgis.EditModeUI.OnSnapAnchorToggleValueChanged(System.Boolean)
      language: CSharp
      name:
        CSharp: OnSnapAnchorToggleValueChanged(Boolean)
        VB: OnSnapAnchorToggleValueChanged(Boolean)
      nameWithType:
        CSharp: EditModeUI.OnSnapAnchorToggleValueChanged(Boolean)
        VB: EditModeUI.OnSnapAnchorToggleValueChanged(Boolean)
      qualifiedName:
        CSharp: Virgis.EditModeUI.OnSnapAnchorToggleValueChanged(System.Boolean)
        VB: Virgis.EditModeUI.OnSnapAnchorToggleValueChanged(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: OnSnapAnchorToggleValueChanged
        path: ''
        startLine: 1312
      syntax:
        content:
          CSharp: public void OnSnapAnchorToggleValueChanged(bool enabled)
          VB: Public Sub OnSnapAnchorToggleValueChanged(enabled As Boolean)
        parameters:
        - id: enabled
          type: System.Boolean
      overload: Virgis.EditModeUI.OnSnapAnchorToggleValueChanged*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.EndEditSessionEvent
    commentId: T:Virgis.EndEditSessionEvent
    language: CSharp
    name:
      CSharp: EndEditSessionEvent
      VB: EndEditSessionEvent
    nameWithType:
      CSharp: EndEditSessionEvent
      VB: EndEditSessionEvent
    qualifiedName:
      CSharp: Virgis.EndEditSessionEvent
      VB: Virgis.EndEditSessionEvent
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: EndEditSessionEvent
      path: ''
      startLine: 1363
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class EndEditSessionEvent : UnityEvent<bool>
        VB: >-
          <Serializable>

          Public Class EndEditSessionEvent

              Inherits UnityEvent(Of Boolean)
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Virgis.EditableLayerChangedEvent
    commentId: T:Virgis.EditableLayerChangedEvent
    language: CSharp
    name:
      CSharp: EditableLayerChangedEvent
      VB: EditableLayerChangedEvent
    nameWithType:
      CSharp: EditableLayerChangedEvent
      VB: EditableLayerChangedEvent
    qualifiedName:
      CSharp: Virgis.EditableLayerChangedEvent
      VB: Virgis.EditableLayerChangedEvent
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: EditableLayerChangedEvent
      path: ''
      startLine: 1373
    summary: "\nEditableLayerChangedEvent is triggered during an edit session,\nwhere the editable layer has been changed to another layer.\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class EditableLayerChangedEvent : UnityEvent<IVirgisLayer>
        VB: >-
          <Serializable>

          Public Class EditableLayerChangedEvent

              Inherits UnityEvent(Of IVirgisLayer)
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Virgis.EditSession
    commentId: T:Virgis.EditSession
    language: CSharp
    name:
      CSharp: EditSession
      VB: EditSession
    nameWithType:
      CSharp: EditSession
      VB: EditSession
    qualifiedName:
      CSharp: Virgis.EditSession
      VB: Virgis.EditSession
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: EditSession
      path: ''
      startLine: 1377
    syntax:
      content:
        CSharp: public class EditSession
        VB: Public Class EditSession
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.EditSession.#ctor
      commentId: M:Virgis.EditSession.#ctor
      language: CSharp
      name:
        CSharp: EditSession()
        VB: EditSession()
      nameWithType:
        CSharp: EditSession.EditSession()
        VB: EditSession.EditSession()
      qualifiedName:
        CSharp: Virgis.EditSession.EditSession()
        VB: Virgis.EditSession.EditSession()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: .ctor
        path: ''
        startLine: 1389
      syntax:
        content:
          CSharp: public EditSession()
          VB: Public Sub New
      overload: Virgis.EditSession.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.EditSession.editableLayer
      commentId: P:Virgis.EditSession.editableLayer
      language: CSharp
      name:
        CSharp: editableLayer
        VB: editableLayer
      nameWithType:
        CSharp: EditSession.editableLayer
        VB: EditSession.editableLayer
      qualifiedName:
        CSharp: Virgis.EditSession.editableLayer
        VB: Virgis.EditSession.editableLayer
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: editableLayer
        path: ''
        startLine: 1397
      syntax:
        content:
          CSharp: public IVirgisLayer editableLayer { get; set; }
          VB: Public Property editableLayer As IVirgisLayer
        parameters: []
        return:
          type: Virgis.IVirgisLayer
      overload: Virgis.EditSession.editableLayer*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Virgis.EditSession.IsActive
      commentId: M:Virgis.EditSession.IsActive
      language: CSharp
      name:
        CSharp: IsActive()
        VB: IsActive()
      nameWithType:
        CSharp: EditSession.IsActive()
        VB: EditSession.IsActive()
      qualifiedName:
        CSharp: Virgis.EditSession.IsActive()
        VB: Virgis.EditSession.IsActive()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: IsActive
        path: ''
        startLine: 1407
      syntax:
        content:
          CSharp: public bool IsActive()
          VB: Public Function IsActive As Boolean
        return:
          type: System.Boolean
      overload: Virgis.EditSession.IsActive*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.EditSession.Start
      commentId: M:Virgis.EditSession.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: EditSession.Start()
        VB: EditSession.Start()
      qualifiedName:
        CSharp: Virgis.EditSession.Start()
        VB: Virgis.EditSession.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Start
        path: ''
        startLine: 1411
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: Virgis.EditSession.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.EditSession.StopAndSave
      commentId: M:Virgis.EditSession.StopAndSave
      language: CSharp
      name:
        CSharp: StopAndSave()
        VB: StopAndSave()
      nameWithType:
        CSharp: EditSession.StopAndSave()
        VB: EditSession.StopAndSave()
      qualifiedName:
        CSharp: Virgis.EditSession.StopAndSave()
        VB: Virgis.EditSession.StopAndSave()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: StopAndSave
        path: ''
        startLine: 1418
      syntax:
        content:
          CSharp: public void StopAndSave()
          VB: Public Sub StopAndSave
      overload: Virgis.EditSession.StopAndSave*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.EditSession.StopAndDiscard
      commentId: M:Virgis.EditSession.StopAndDiscard
      language: CSharp
      name:
        CSharp: StopAndDiscard()
        VB: StopAndDiscard()
      nameWithType:
        CSharp: EditSession.StopAndDiscard()
        VB: EditSession.StopAndDiscard()
      qualifiedName:
        CSharp: Virgis.EditSession.StopAndDiscard()
        VB: Virgis.EditSession.StopAndDiscard()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: StopAndDiscard
        path: ''
        startLine: 1425
      syntax:
        content:
          CSharp: public void StopAndDiscard()
          VB: Public Sub StopAndDiscard
      overload: Virgis.EditSession.StopAndDiscard*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.EditSession.AddStartEditSessionListener(UnityAction)
      commentId: M:Virgis.EditSession.AddStartEditSessionListener(UnityAction)
      language: CSharp
      name:
        CSharp: AddStartEditSessionListener(UnityAction)
        VB: AddStartEditSessionListener(UnityAction)
      nameWithType:
        CSharp: EditSession.AddStartEditSessionListener(UnityAction)
        VB: EditSession.AddStartEditSessionListener(UnityAction)
      qualifiedName:
        CSharp: Virgis.EditSession.AddStartEditSessionListener(UnityAction)
        VB: Virgis.EditSession.AddStartEditSessionListener(UnityAction)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: AddStartEditSessionListener
        path: ''
        startLine: 1432
      syntax:
        content:
          CSharp: public void AddStartEditSessionListener(UnityAction action)
          VB: Public Sub AddStartEditSessionListener(action As UnityAction)
        parameters:
        - id: action
          type: UnityAction
      overload: Virgis.EditSession.AddStartEditSessionListener*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.EditSession.AddEndEditSessionListener(UnityAction{System.Boolean})
      commentId: M:Virgis.EditSession.AddEndEditSessionListener(UnityAction{System.Boolean})
      language: CSharp
      name:
        CSharp: AddEndEditSessionListener(UnityAction<Boolean>)
        VB: AddEndEditSessionListener(UnityAction(Of Boolean))
      nameWithType:
        CSharp: EditSession.AddEndEditSessionListener(UnityAction<Boolean>)
        VB: EditSession.AddEndEditSessionListener(UnityAction(Of Boolean))
      qualifiedName:
        CSharp: Virgis.EditSession.AddEndEditSessionListener(UnityAction<System.Boolean>)
        VB: Virgis.EditSession.AddEndEditSessionListener(UnityAction(Of System.Boolean))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: AddEndEditSessionListener
        path: ''
        startLine: 1436
      syntax:
        content:
          CSharp: public void AddEndEditSessionListener(UnityAction<bool> action)
          VB: Public Sub AddEndEditSessionListener(action As UnityAction(Of Boolean))
        parameters:
        - id: action
          type: UnityAction{System.Boolean}
      overload: Virgis.EditSession.AddEndEditSessionListener*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.EditSession.AddEditableLayerChangedListener(UnityAction{Virgis.IVirgisLayer})
      commentId: M:Virgis.EditSession.AddEditableLayerChangedListener(UnityAction{Virgis.IVirgisLayer})
      language: CSharp
      name:
        CSharp: AddEditableLayerChangedListener(UnityAction<IVirgisLayer>)
        VB: AddEditableLayerChangedListener(UnityAction(Of IVirgisLayer))
      nameWithType:
        CSharp: EditSession.AddEditableLayerChangedListener(UnityAction<IVirgisLayer>)
        VB: EditSession.AddEditableLayerChangedListener(UnityAction(Of IVirgisLayer))
      qualifiedName:
        CSharp: Virgis.EditSession.AddEditableLayerChangedListener(UnityAction<Virgis.IVirgisLayer>)
        VB: Virgis.EditSession.AddEditableLayerChangedListener(UnityAction(Of Virgis.IVirgisLayer))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: AddEditableLayerChangedListener
        path: ''
        startLine: 1440
      syntax:
        content:
          CSharp: public void AddEditableLayerChangedListener(UnityAction<IVirgisLayer> action)
          VB: Public Sub AddEditableLayerChangedListener(action As UnityAction(Of IVirgisLayer))
        parameters:
        - id: action
          type: UnityAction{Virgis.IVirgisLayer}
      overload: Virgis.EditSession.AddEditableLayerChangedListener*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.EditSession.mode
      commentId: P:Virgis.EditSession.mode
      language: CSharp
      name:
        CSharp: mode
        VB: mode
      nameWithType:
        CSharp: EditSession.mode
        VB: EditSession.mode
      qualifiedName:
        CSharp: Virgis.EditSession.mode
        VB: Virgis.EditSession.mode
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: mode
        path: ''
        startLine: 1444
      syntax:
        content:
          CSharp: public EditSession.EditMode mode { get; set; }
          VB: Public Property mode As EditSession.EditMode
        parameters: []
        return:
          type: Virgis.EditSession.EditMode
      overload: Virgis.EditSession.mode*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: Virgis.EditSession.EditMode
    commentId: T:Virgis.EditSession.EditMode
    language: CSharp
    name:
      CSharp: EditSession.EditMode
      VB: EditSession.EditMode
    nameWithType:
      CSharp: EditSession.EditMode
      VB: EditSession.EditMode
    qualifiedName:
      CSharp: Virgis.EditSession.EditMode
      VB: Virgis.EditSession.EditMode
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: EditMode
      path: ''
      startLine: 1378
    syntax:
      content:
        CSharp: public enum EditMode
        VB: Public Enum EditMode
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Virgis.EditSession.EditMode.None
      commentId: F:Virgis.EditSession.EditMode.None
      language: CSharp
      name:
        CSharp: None
        VB: None
      nameWithType:
        CSharp: EditSession.EditMode.None
        VB: EditSession.EditMode.None
      qualifiedName:
        CSharp: Virgis.EditSession.EditMode.None
        VB: Virgis.EditSession.EditMode.None
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: None
        path: ''
        startLine: 1379
      syntax:
        content:
          CSharp: None = 0
          VB: None = 0
        return:
          type: Virgis.EditSession.EditMode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Virgis.EditSession.EditMode.SnapGrid
      commentId: F:Virgis.EditSession.EditMode.SnapGrid
      language: CSharp
      name:
        CSharp: SnapGrid
        VB: SnapGrid
      nameWithType:
        CSharp: EditSession.EditMode.SnapGrid
        VB: EditSession.EditMode.SnapGrid
      qualifiedName:
        CSharp: Virgis.EditSession.EditMode.SnapGrid
        VB: Virgis.EditSession.EditMode.SnapGrid
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SnapGrid
        path: ''
        startLine: 1379
      syntax:
        content:
          CSharp: SnapGrid = 1
          VB: SnapGrid = 1
        return:
          type: Virgis.EditSession.EditMode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Virgis.EditSession.EditMode.SnapAnchor
      commentId: F:Virgis.EditSession.EditMode.SnapAnchor
      language: CSharp
      name:
        CSharp: SnapAnchor
        VB: SnapAnchor
      nameWithType:
        CSharp: EditSession.EditMode.SnapAnchor
        VB: EditSession.EditMode.SnapAnchor
      qualifiedName:
        CSharp: Virgis.EditSession.EditMode.SnapAnchor
        VB: Virgis.EditSession.EditMode.SnapAnchor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SnapAnchor
        path: ''
        startLine: 1379
      syntax:
        content:
          CSharp: SnapAnchor = 2
          VB: SnapAnchor = 2
        return:
          type: Virgis.EditSession.EditMode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Virgis.DataRotator
    commentId: T:Virgis.DataRotator
    language: CSharp
    name:
      CSharp: DataRotator
      VB: DataRotator
    nameWithType:
      CSharp: DataRotator
      VB: DataRotator
    qualifiedName:
      CSharp: Virgis.DataRotator
      VB: Virgis.DataRotator
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: DataRotator
      path: ''
      startLine: 1459
    syntax:
      content:
        CSharp: 'public class DataRotator : MonoBehaviour'
        VB: >-
          Public Class DataRotator

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.DataRotator.color
      commentId: F:Virgis.DataRotator.color
      language: CSharp
      name:
        CSharp: color
        VB: color
      nameWithType:
        CSharp: DataRotator.color
        VB: DataRotator.color
      qualifiedName:
        CSharp: Virgis.DataRotator.color
        VB: Virgis.DataRotator.color
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: color
        path: ''
        startLine: 1461
      syntax:
        content:
          CSharp: public Color color
          VB: Public color As Color
        return:
          type: Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.DataRotator.anticolor
      commentId: F:Virgis.DataRotator.anticolor
      language: CSharp
      name:
        CSharp: anticolor
        VB: anticolor
      nameWithType:
        CSharp: DataRotator.anticolor
        VB: DataRotator.anticolor
      qualifiedName:
        CSharp: Virgis.DataRotator.anticolor
        VB: Virgis.DataRotator.anticolor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: anticolor
        path: ''
        startLine: 1462
      syntax:
        content:
          CSharp: public Color anticolor
          VB: Public anticolor As Color
        return:
          type: Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.DataRotator.position
      commentId: F:Virgis.DataRotator.position
      language: CSharp
      name:
        CSharp: position
        VB: position
      nameWithType:
        CSharp: DataRotator.position
        VB: DataRotator.position
      qualifiedName:
        CSharp: Virgis.DataRotator.position
        VB: Virgis.DataRotator.position
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: position
        path: ''
        startLine: 1463
      syntax:
        content:
          CSharp: public Vector3 position
          VB: Public position As Vector3
        return:
          type: Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.DataRotator.SetColor(Color)
      commentId: M:Virgis.DataRotator.SetColor(Color)
      language: CSharp
      name:
        CSharp: SetColor(Color)
        VB: SetColor(Color)
      nameWithType:
        CSharp: DataRotator.SetColor(Color)
        VB: DataRotator.SetColor(Color)
      qualifiedName:
        CSharp: Virgis.DataRotator.SetColor(Color)
        VB: Virgis.DataRotator.SetColor(Color)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SetColor
        path: ''
        startLine: 1477
      syntax:
        content:
          CSharp: public void SetColor(Color newCol)
          VB: Public Sub SetColor(newCol As Color)
        parameters:
        - id: newCol
          type: Color
      overload: Virgis.DataRotator.SetColor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.DataRotator.Selected(System.Int32)
      commentId: M:Virgis.DataRotator.Selected(System.Int32)
      language: CSharp
      name:
        CSharp: Selected(Int32)
        VB: Selected(Int32)
      nameWithType:
        CSharp: DataRotator.Selected(Int32)
        VB: DataRotator.Selected(Int32)
      qualifiedName:
        CSharp: Virgis.DataRotator.Selected(System.Int32)
        VB: Virgis.DataRotator.Selected(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Selected
        path: ''
        startLine: 1486
      syntax:
        content:
          CSharp: public void Selected(int button)
          VB: Public Sub Selected(button As Integer)
        parameters:
        - id: button
          type: System.Int32
      overload: Virgis.DataRotator.Selected*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.DataRotator.UnSelected(System.Int32)
      commentId: M:Virgis.DataRotator.UnSelected(System.Int32)
      language: CSharp
      name:
        CSharp: UnSelected(Int32)
        VB: UnSelected(Int32)
      nameWithType:
        CSharp: DataRotator.UnSelected(Int32)
        VB: DataRotator.UnSelected(Int32)
      qualifiedName:
        CSharp: Virgis.DataRotator.UnSelected(System.Int32)
        VB: Virgis.DataRotator.UnSelected(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: UnSelected
        path: ''
        startLine: 1494
      syntax:
        content:
          CSharp: public void UnSelected(int button)
          VB: Public Sub UnSelected(button As Integer)
        parameters:
        - id: button
          type: System.Int32
      overload: Virgis.DataRotator.UnSelected*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.DataRotator.Translate(Virgis.MoveArgs)
      commentId: M:Virgis.DataRotator.Translate(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: Translate(MoveArgs)
        VB: Translate(MoveArgs)
      nameWithType:
        CSharp: DataRotator.Translate(MoveArgs)
        VB: DataRotator.Translate(MoveArgs)
      qualifiedName:
        CSharp: Virgis.DataRotator.Translate(Virgis.MoveArgs)
        VB: Virgis.DataRotator.Translate(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Translate
        path: ''
        startLine: 1502
      syntax:
        content:
          CSharp: public void Translate(MoveArgs args)
          VB: Public Sub Translate(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.DataRotator.Translate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.LayersUI
    commentId: T:Virgis.LayersUI
    language: CSharp
    name:
      CSharp: LayersUI
      VB: LayersUI
    nameWithType:
      CSharp: LayersUI
      VB: LayersUI
    qualifiedName:
      CSharp: Virgis.LayersUI
      VB: Virgis.LayersUI
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: LayersUI
      path: ''
      startLine: 1774
    summary: "\nLayersUI is the mediator for all components within the Layers UI GO (i.e. Layers Menu).\n"
    example: []
    syntax:
      content:
        CSharp: 'public class LayersUI : MonoBehaviour'
        VB: >-
          Public Class LayersUI

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.LayersUI.layersScrollView
      commentId: F:Virgis.LayersUI.layersScrollView
      language: CSharp
      name:
        CSharp: layersScrollView
        VB: layersScrollView
      nameWithType:
        CSharp: LayersUI.layersScrollView
        VB: LayersUI.layersScrollView
      qualifiedName:
        CSharp: Virgis.LayersUI.layersScrollView
        VB: Virgis.LayersUI.layersScrollView
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: layersScrollView
        path: ''
        startLine: 1776
      syntax:
        content:
          CSharp: public GameObject layersScrollView
          VB: Public layersScrollView As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LayersUI.layerPanelPrefab
      commentId: F:Virgis.LayersUI.layerPanelPrefab
      language: CSharp
      name:
        CSharp: layerPanelPrefab
        VB: layerPanelPrefab
      nameWithType:
        CSharp: LayersUI.layerPanelPrefab
        VB: LayersUI.layerPanelPrefab
      qualifiedName:
        CSharp: Virgis.LayersUI.layerPanelPrefab
        VB: Virgis.LayersUI.layerPanelPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: layerPanelPrefab
        path: ''
        startLine: 1777
      syntax:
        content:
          CSharp: public GameObject layerPanelPrefab
          VB: Public layerPanelPrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LayersUI.menus
      commentId: F:Virgis.LayersUI.menus
      language: CSharp
      name:
        CSharp: menus
        VB: menus
      nameWithType:
        CSharp: LayersUI.menus
        VB: LayersUI.menus
      qualifiedName:
        CSharp: Virgis.LayersUI.menus
        VB: Virgis.LayersUI.menus
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: menus
        path: ''
        startLine: 1778
      syntax:
        content:
          CSharp: public GameObject menus
          VB: Public menus As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LayersUI.HandleKeyInput(InputAction.CallbackContext)
      commentId: M:Virgis.LayersUI.HandleKeyInput(InputAction.CallbackContext)
      language: CSharp
      name:
        CSharp: HandleKeyInput(InputAction.CallbackContext)
        VB: HandleKeyInput(InputAction.CallbackContext)
      nameWithType:
        CSharp: LayersUI.HandleKeyInput(InputAction.CallbackContext)
        VB: LayersUI.HandleKeyInput(InputAction.CallbackContext)
      qualifiedName:
        CSharp: Virgis.LayersUI.HandleKeyInput(InputAction.CallbackContext)
        VB: Virgis.LayersUI.HandleKeyInput(InputAction.CallbackContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: HandleKeyInput
        path: ''
        startLine: 1793
      syntax:
        content:
          CSharp: public void HandleKeyInput(InputAction.CallbackContext context)
          VB: Public Sub HandleKeyInput(context As InputAction.CallbackContext)
        parameters:
        - id: context
          type: InputAction.CallbackContext
      overload: Virgis.LayersUI.HandleKeyInput*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LayersUI.OnShowMenuButtonClicked
      commentId: M:Virgis.LayersUI.OnShowMenuButtonClicked
      language: CSharp
      name:
        CSharp: OnShowMenuButtonClicked()
        VB: OnShowMenuButtonClicked()
      nameWithType:
        CSharp: LayersUI.OnShowMenuButtonClicked()
        VB: LayersUI.OnShowMenuButtonClicked()
      qualifiedName:
        CSharp: Virgis.LayersUI.OnShowMenuButtonClicked()
        VB: Virgis.LayersUI.OnShowMenuButtonClicked()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: OnShowMenuButtonClicked
        path: ''
        startLine: 1811
      syntax:
        content:
          CSharp: public void OnShowMenuButtonClicked()
          VB: Public Sub OnShowMenuButtonClicked
      overload: Virgis.LayersUI.OnShowMenuButtonClicked*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.PointCloudLayer
    commentId: T:Virgis.PointCloudLayer
    language: CSharp
    name:
      CSharp: PointCloudLayer
      VB: PointCloudLayer
    nameWithType:
      CSharp: PointCloudLayer
      VB: PointCloudLayer
    qualifiedName:
      CSharp: Virgis.PointCloudLayer
      VB: Virgis.PointCloudLayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: PointCloudLayer
      path: ''
      startLine: 1914
    syntax:
      content:
        CSharp: 'public class PointCloudLayer : VirgisLayer<GeographyCollection, ParticleData>, IVirgisLayer, IVirgisEntity'
        VB: >-
          Public Class PointCloudLayer

              Inherits VirgisLayer(Of GeographyCollection, ParticleData)

              Implements IVirgisLayer, IVirgisEntity
    inheritance:
    - System.Object
    - Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
    implements:
    - Virgis.IVirgisLayer
    - Virgis.IVirgisEntity
    inheritedMembers:
    - Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.layer
    - Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.features
    - Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.changed
    - Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}._id
    - Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}._editable
    - Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.Init(GeographyCollection)
    - Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}._init(GeographyCollection)
    - Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.AddFeature(Vector3[])
    - Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}._addFeature(Vector3[])
    - Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.Draw
    - Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}._draw
    - Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.CheckPoint
    - Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}._checkpoint
    - Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.Save
    - Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}._save
    - Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.Translate(Virgis.MoveArgs)
    - Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.MoveAxis(Virgis.MoveArgs)
    - Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.MoveTo(Virgis.MoveArgs)
    - Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.VertexMove(Virgis.MoveArgs)
    - Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.StartEditSession
    - Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.ExitEditSession(System.Boolean)
    - Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.Selected(Virgis.SelectionTypes)
    - Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.UnSelected(Virgis.SelectionTypes)
    - Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.GetClosest(Vector3,Guid[])
    - Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.GetFeature(Guid)
    - Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.GetId
    - Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.GetMetadata
    - Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.GetFeatureShape
    - Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.SetVisible(System.Boolean)
    - Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.IsVisible
    - Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.SetEditable(System.Boolean)
    - Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.IsEditable
    - Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.Equals(System.Object)
    - Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.GetHashCode
    - Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.Equals(Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData})
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.PointCloudLayer.material
      commentId: F:Virgis.PointCloudLayer.material
      language: CSharp
      name:
        CSharp: material
        VB: material
      nameWithType:
        CSharp: PointCloudLayer.material
        VB: PointCloudLayer.material
      qualifiedName:
        CSharp: Virgis.PointCloudLayer.material
        VB: Virgis.PointCloudLayer.material
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: material
        path: ''
        startLine: 1917
      syntax:
        content:
          CSharp: public Material material
          VB: Public material As Material
        return:
          type: Material
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PointCloudLayer.handle
      commentId: F:Virgis.PointCloudLayer.handle
      language: CSharp
      name:
        CSharp: handle
        VB: handle
      nameWithType:
        CSharp: PointCloudLayer.handle
        VB: PointCloudLayer.handle
      qualifiedName:
        CSharp: Virgis.PointCloudLayer.handle
        VB: Virgis.PointCloudLayer.handle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: handle
        path: ''
        startLine: 1918
      syntax:
        content:
          CSharp: public GameObject handle
          VB: Public handle As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PointCloudLayer.pointCloud
      commentId: F:Virgis.PointCloudLayer.pointCloud
      language: CSharp
      name:
        CSharp: pointCloud
        VB: pointCloud
      nameWithType:
        CSharp: PointCloudLayer.pointCloud
        VB: PointCloudLayer.pointCloud
      qualifiedName:
        CSharp: Virgis.PointCloudLayer.pointCloud
        VB: Virgis.PointCloudLayer.pointCloud
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: pointCloud
        path: ''
        startLine: 1919
      syntax:
        content:
          CSharp: public GameObject pointCloud
          VB: Public pointCloud As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PointCloudLayer.meshes
      commentId: F:Virgis.PointCloudLayer.meshes
      language: CSharp
      name:
        CSharp: meshes
        VB: meshes
      nameWithType:
        CSharp: PointCloudLayer.meshes
        VB: PointCloudLayer.meshes
      qualifiedName:
        CSharp: Virgis.PointCloudLayer.meshes
        VB: Virgis.PointCloudLayer.meshes
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: meshes
        path: ''
        startLine: 1920
      syntax:
        content:
          CSharp: public List<GameObject> meshes
          VB: Public meshes As List(Of GameObject)
        return:
          type: List{GameObject}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PointCloudLayer.HandleMaterial
      commentId: F:Virgis.PointCloudLayer.HandleMaterial
      language: CSharp
      name:
        CSharp: HandleMaterial
        VB: HandleMaterial
      nameWithType:
        CSharp: PointCloudLayer.HandleMaterial
        VB: PointCloudLayer.HandleMaterial
      qualifiedName:
        CSharp: Virgis.PointCloudLayer.HandleMaterial
        VB: Virgis.PointCloudLayer.HandleMaterial
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: HandleMaterial
        path: ''
        startLine: 1921
      syntax:
        content:
          CSharp: public Material HandleMaterial
          VB: Public HandleMaterial As Material
        return:
          type: Material
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PointCloudLayer._init(GeographyCollection)
      commentId: M:Virgis.PointCloudLayer._init(GeographyCollection)
      language: CSharp
      name:
        CSharp: _init(GeographyCollection)
        VB: _init(GeographyCollection)
      nameWithType:
        CSharp: PointCloudLayer._init(GeographyCollection)
        VB: PointCloudLayer._init(GeographyCollection)
      qualifiedName:
        CSharp: Virgis.PointCloudLayer._init(GeographyCollection)
        VB: Virgis.PointCloudLayer._init(GeographyCollection)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _init
        path: ''
        startLine: 1929
      syntax:
        content:
          CSharp: protected override Task _init(GeographyCollection layer)
          VB: Protected Overrides Function _init(layer As GeographyCollection) As Task
        parameters:
        - id: layer
          type: GeographyCollection
        return:
          type: Task
      overload: Virgis.PointCloudLayer._init*
      overridden: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}._init(GeographyCollection)
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.PointCloudLayer._addFeature(Vector3[])
      commentId: M:Virgis.PointCloudLayer._addFeature(Vector3[])
      language: CSharp
      name:
        CSharp: _addFeature(Vector3[])
        VB: _addFeature(Vector3())
      nameWithType:
        CSharp: PointCloudLayer._addFeature(Vector3[])
        VB: PointCloudLayer._addFeature(Vector3())
      qualifiedName:
        CSharp: Virgis.PointCloudLayer._addFeature(Vector3[])
        VB: Virgis.PointCloudLayer._addFeature(Vector3())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _addFeature
        path: ''
        startLine: 1943
      syntax:
        content:
          CSharp: protected override VirgisFeature _addFeature(Vector3[] geometry)
          VB: Protected Overrides Function _addFeature(geometry As Vector3()) As VirgisFeature
        parameters:
        - id: geometry
          type: Vector3[]
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.PointCloudLayer._addFeature*
      overridden: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}._addFeature(Vector3[])
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.PointCloudLayer._draw
      commentId: M:Virgis.PointCloudLayer._draw
      language: CSharp
      name:
        CSharp: _draw()
        VB: _draw()
      nameWithType:
        CSharp: PointCloudLayer._draw()
        VB: PointCloudLayer._draw()
      qualifiedName:
        CSharp: Virgis.PointCloudLayer._draw()
        VB: Virgis.PointCloudLayer._draw()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _draw
        path: ''
        startLine: 1948
      syntax:
        content:
          CSharp: protected override void _draw()
          VB: Protected Overrides Sub _draw
      overload: Virgis.PointCloudLayer._draw*
      overridden: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}._draw
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.PointCloudLayer.Translate(Virgis.MoveArgs)
      commentId: M:Virgis.PointCloudLayer.Translate(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: Translate(MoveArgs)
        VB: Translate(MoveArgs)
      nameWithType:
        CSharp: PointCloudLayer.Translate(MoveArgs)
        VB: PointCloudLayer.Translate(MoveArgs)
      qualifiedName:
        CSharp: Virgis.PointCloudLayer.Translate(Virgis.MoveArgs)
        VB: Virgis.PointCloudLayer.Translate(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Translate
        path: ''
        startLine: 1977
      syntax:
        content:
          CSharp: public override void Translate(MoveArgs args)
          VB: Public Overrides Sub Translate(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.PointCloudLayer.Translate*
      overridden: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.Translate(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.PointCloudLayer.MoveAxis(Virgis.MoveArgs)
      commentId: M:Virgis.PointCloudLayer.MoveAxis(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveAxis(MoveArgs)
        VB: MoveAxis(MoveArgs)
      nameWithType:
        CSharp: PointCloudLayer.MoveAxis(MoveArgs)
        VB: PointCloudLayer.MoveAxis(MoveArgs)
      qualifiedName:
        CSharp: Virgis.PointCloudLayer.MoveAxis(Virgis.MoveArgs)
        VB: Virgis.PointCloudLayer.MoveAxis(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveAxis
        path: ''
        startLine: 1986
      syntax:
        content:
          CSharp: public override void MoveAxis(MoveArgs args)
          VB: Public Overrides Sub MoveAxis(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.PointCloudLayer.MoveAxis*
      overridden: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.MoveAxis(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.PointCloudLayer._checkpoint
      commentId: M:Virgis.PointCloudLayer._checkpoint
      language: CSharp
      name:
        CSharp: _checkpoint()
        VB: _checkpoint()
      nameWithType:
        CSharp: PointCloudLayer._checkpoint()
        VB: PointCloudLayer._checkpoint()
      qualifiedName:
        CSharp: Virgis.PointCloudLayer._checkpoint()
        VB: Virgis.PointCloudLayer._checkpoint()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _checkpoint
        path: ''
        startLine: 2014
      syntax:
        content:
          CSharp: protected override void _checkpoint()
          VB: Protected Overrides Sub _checkpoint
      overload: Virgis.PointCloudLayer._checkpoint*
      overridden: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}._checkpoint
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.PointCloudLayer._save
      commentId: M:Virgis.PointCloudLayer._save
      language: CSharp
      name:
        CSharp: _save()
        VB: _save()
      nameWithType:
        CSharp: PointCloudLayer._save()
        VB: PointCloudLayer._save()
      qualifiedName:
        CSharp: Virgis.PointCloudLayer._save()
        VB: Virgis.PointCloudLayer._save()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _save
        path: ''
        startLine: 2016
      syntax:
        content:
          CSharp: protected override Task _save()
          VB: Protected Overrides Function _save As Task
        return:
          type: Task
      overload: Virgis.PointCloudLayer._save*
      overridden: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}._save
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: Virgis.MeshLayer
    commentId: T:Virgis.MeshLayer
    language: CSharp
    name:
      CSharp: MeshLayer
      VB: MeshLayer
    nameWithType:
      CSharp: MeshLayer
      VB: MeshLayer
    qualifiedName:
      CSharp: Virgis.MeshLayer
      VB: Virgis.MeshLayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: MeshLayer
      path: ''
      startLine: 2038
    syntax:
      content:
        CSharp: 'public class MeshLayer : VirgisLayer<GeographyCollection, List<SimpleMesh>>, IVirgisLayer, IVirgisEntity'
        VB: >-
          Public Class MeshLayer

              Inherits VirgisLayer(Of GeographyCollection, List(Of SimpleMesh))

              Implements IVirgisLayer, IVirgisEntity
    inheritance:
    - System.Object
    - Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
    implements:
    - Virgis.IVirgisLayer
    - Virgis.IVirgisEntity
    inheritedMembers:
    - Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.layer
    - Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.features
    - Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.changed
    - Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}._id
    - Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}._editable
    - Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.Init(GeographyCollection)
    - Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}._init(GeographyCollection)
    - Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.AddFeature(Vector3[])
    - Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}._addFeature(Vector3[])
    - Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.Draw
    - Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}._draw
    - Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.CheckPoint
    - Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}._checkpoint
    - Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.Save
    - Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}._save
    - Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.Translate(Virgis.MoveArgs)
    - Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.MoveAxis(Virgis.MoveArgs)
    - Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.MoveTo(Virgis.MoveArgs)
    - Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.VertexMove(Virgis.MoveArgs)
    - Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.StartEditSession
    - Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.ExitEditSession(System.Boolean)
    - Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.Selected(Virgis.SelectionTypes)
    - Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.UnSelected(Virgis.SelectionTypes)
    - Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.GetClosest(Vector3,Guid[])
    - Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.GetFeature(Guid)
    - Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.GetId
    - Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.GetMetadata
    - Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.GetFeatureShape
    - Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.SetVisible(System.Boolean)
    - Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.IsVisible
    - Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.SetEditable(System.Boolean)
    - Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.IsEditable
    - Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.Equals(System.Object)
    - Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.GetHashCode
    - Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.Equals(Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}})
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.MeshLayer.material
      commentId: F:Virgis.MeshLayer.material
      language: CSharp
      name:
        CSharp: material
        VB: material
      nameWithType:
        CSharp: MeshLayer.material
        VB: MeshLayer.material
      qualifiedName:
        CSharp: Virgis.MeshLayer.material
        VB: Virgis.MeshLayer.material
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: material
        path: ''
        startLine: 2041
      syntax:
        content:
          CSharp: public Material material
          VB: Public material As Material
        return:
          type: Material
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MeshLayer.handle
      commentId: F:Virgis.MeshLayer.handle
      language: CSharp
      name:
        CSharp: handle
        VB: handle
      nameWithType:
        CSharp: MeshLayer.handle
        VB: MeshLayer.handle
      qualifiedName:
        CSharp: Virgis.MeshLayer.handle
        VB: Virgis.MeshLayer.handle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: handle
        path: ''
        startLine: 2042
      syntax:
        content:
          CSharp: public GameObject handle
          VB: Public handle As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MeshLayer.meshes
      commentId: F:Virgis.MeshLayer.meshes
      language: CSharp
      name:
        CSharp: meshes
        VB: meshes
      nameWithType:
        CSharp: MeshLayer.meshes
        VB: MeshLayer.meshes
      qualifiedName:
        CSharp: Virgis.MeshLayer.meshes
        VB: Virgis.MeshLayer.meshes
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: meshes
        path: ''
        startLine: 2043
      syntax:
        content:
          CSharp: public List<GameObject> meshes
          VB: Public meshes As List(Of GameObject)
        return:
          type: List{GameObject}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MeshLayer.HandleMaterial
      commentId: F:Virgis.MeshLayer.HandleMaterial
      language: CSharp
      name:
        CSharp: HandleMaterial
        VB: HandleMaterial
      nameWithType:
        CSharp: MeshLayer.HandleMaterial
        VB: MeshLayer.HandleMaterial
      qualifiedName:
        CSharp: Virgis.MeshLayer.HandleMaterial
        VB: Virgis.MeshLayer.HandleMaterial
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: HandleMaterial
        path: ''
        startLine: 2044
      syntax:
        content:
          CSharp: public Material HandleMaterial
          VB: Public HandleMaterial As Material
        return:
          type: Material
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MeshLayer._init(GeographyCollection)
      commentId: M:Virgis.MeshLayer._init(GeographyCollection)
      language: CSharp
      name:
        CSharp: _init(GeographyCollection)
        VB: _init(GeographyCollection)
      nameWithType:
        CSharp: MeshLayer._init(GeographyCollection)
        VB: MeshLayer._init(GeographyCollection)
      qualifiedName:
        CSharp: Virgis.MeshLayer._init(GeographyCollection)
        VB: Virgis.MeshLayer._init(GeographyCollection)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _init
        path: ''
        startLine: 2070
      syntax:
        content:
          CSharp: protected override Task _init(GeographyCollection layer)
          VB: Protected Overrides Function _init(layer As GeographyCollection) As Task
        parameters:
        - id: layer
          type: GeographyCollection
        return:
          type: Task
      overload: Virgis.MeshLayer._init*
      overridden: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}._init(GeographyCollection)
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.MeshLayer._addFeature(Vector3[])
      commentId: M:Virgis.MeshLayer._addFeature(Vector3[])
      language: CSharp
      name:
        CSharp: _addFeature(Vector3[])
        VB: _addFeature(Vector3())
      nameWithType:
        CSharp: MeshLayer._addFeature(Vector3[])
        VB: MeshLayer._addFeature(Vector3())
      qualifiedName:
        CSharp: Virgis.MeshLayer._addFeature(Vector3[])
        VB: Virgis.MeshLayer._addFeature(Vector3())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _addFeature
        path: ''
        startLine: 2084
      syntax:
        content:
          CSharp: protected override VirgisFeature _addFeature(Vector3[] geometry)
          VB: Protected Overrides Function _addFeature(geometry As Vector3()) As VirgisFeature
        parameters:
        - id: geometry
          type: Vector3[]
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.MeshLayer._addFeature*
      overridden: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}._addFeature(Vector3[])
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.MeshLayer._draw
      commentId: M:Virgis.MeshLayer._draw
      language: CSharp
      name:
        CSharp: _draw()
        VB: _draw()
      nameWithType:
        CSharp: MeshLayer._draw()
        VB: MeshLayer._draw()
      qualifiedName:
        CSharp: Virgis.MeshLayer._draw()
        VB: Virgis.MeshLayer._draw()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _draw
        path: ''
        startLine: 2088
      syntax:
        content:
          CSharp: protected override void _draw()
          VB: Protected Overrides Sub _draw
      overload: Virgis.MeshLayer._draw*
      overridden: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}._draw
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.MeshLayer.Translate(Virgis.MoveArgs)
      commentId: M:Virgis.MeshLayer.Translate(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: Translate(MoveArgs)
        VB: Translate(MoveArgs)
      nameWithType:
        CSharp: MeshLayer.Translate(MoveArgs)
        VB: MeshLayer.Translate(MoveArgs)
      qualifiedName:
        CSharp: Virgis.MeshLayer.Translate(Virgis.MoveArgs)
        VB: Virgis.MeshLayer.Translate(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Translate
        path: ''
        startLine: 2116
      syntax:
        content:
          CSharp: public override void Translate(MoveArgs args)
          VB: Public Overrides Sub Translate(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.MeshLayer.Translate*
      overridden: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.Translate(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.MeshLayer.MoveAxis(Virgis.MoveArgs)
      commentId: M:Virgis.MeshLayer.MoveAxis(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveAxis(MoveArgs)
        VB: MoveAxis(MoveArgs)
      nameWithType:
        CSharp: MeshLayer.MoveAxis(MoveArgs)
        VB: MeshLayer.MoveAxis(MoveArgs)
      qualifiedName:
        CSharp: Virgis.MeshLayer.MoveAxis(Virgis.MoveArgs)
        VB: Virgis.MeshLayer.MoveAxis(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveAxis
        path: ''
        startLine: 2126
      example: []
      syntax:
        content:
          CSharp: public override void MoveAxis(MoveArgs args)
          VB: Public Overrides Sub MoveAxis(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.MeshLayer.MoveAxis*
      overridden: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.MoveAxis(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.MeshLayer._checkpoint
      commentId: M:Virgis.MeshLayer._checkpoint
      language: CSharp
      name:
        CSharp: _checkpoint()
        VB: _checkpoint()
      nameWithType:
        CSharp: MeshLayer._checkpoint()
        VB: MeshLayer._checkpoint()
      qualifiedName:
        CSharp: Virgis.MeshLayer._checkpoint()
        VB: Virgis.MeshLayer._checkpoint()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _checkpoint
        path: ''
        startLine: 2152
      syntax:
        content:
          CSharp: protected override void _checkpoint()
          VB: Protected Overrides Sub _checkpoint
      overload: Virgis.MeshLayer._checkpoint*
      overridden: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}._checkpoint
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.MeshLayer._save
      commentId: M:Virgis.MeshLayer._save
      language: CSharp
      name:
        CSharp: _save()
        VB: _save()
      nameWithType:
        CSharp: MeshLayer._save()
        VB: MeshLayer._save()
      qualifiedName:
        CSharp: Virgis.MeshLayer._save()
        VB: Virgis.MeshLayer._save()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _save
        path: ''
        startLine: 2154
      syntax:
        content:
          CSharp: protected override Task _save()
          VB: Protected Overrides Function _save As Task
        return:
          type: Task
      overload: Virgis.MeshLayer._save*
      overridden: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}._save
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: Virgis.PolygonLayer
    commentId: T:Virgis.PolygonLayer
    language: CSharp
    name:
      CSharp: PolygonLayer
      VB: PolygonLayer
    nameWithType:
      CSharp: PolygonLayer
      VB: PolygonLayer
    qualifiedName:
      CSharp: Virgis.PolygonLayer
      VB: Virgis.PolygonLayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: PolygonLayer
      path: ''
      startLine: 2186
    summary: "\nControls an instance of a Polygon Layer\n"
    example: []
    syntax:
      content:
        CSharp: 'public class PolygonLayer : VirgisLayer<GeographyCollection, FeatureCollection>, IVirgisLayer, IVirgisEntity'
        VB: >-
          Public Class PolygonLayer

              Inherits VirgisLayer(Of GeographyCollection, FeatureCollection)

              Implements IVirgisLayer, IVirgisEntity
    inheritance:
    - System.Object
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    implements:
    - Virgis.IVirgisLayer
    - Virgis.IVirgisEntity
    inheritedMembers:
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.layer
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.features
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.changed
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._id
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._editable
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Init(GeographyCollection)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._init(GeographyCollection)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.AddFeature(Vector3[])
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._addFeature(Vector3[])
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Draw
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._draw
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.CheckPoint
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._checkpoint
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Save
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._save
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Translate(Virgis.MoveArgs)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.MoveAxis(Virgis.MoveArgs)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.MoveTo(Virgis.MoveArgs)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.VertexMove(Virgis.MoveArgs)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.StartEditSession
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.ExitEditSession(System.Boolean)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Selected(Virgis.SelectionTypes)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.UnSelected(Virgis.SelectionTypes)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.GetClosest(Vector3,Guid[])
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.GetFeature(Guid)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.GetId
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.GetMetadata
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.GetFeatureShape
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.SetVisible(System.Boolean)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.IsVisible
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.SetEditable(System.Boolean)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.IsEditable
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Equals(System.Object)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.GetHashCode
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Equals(Virgis.VirgisLayer{GeographyCollection,FeatureCollection})
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.PolygonLayer.CylinderLinePrefab
      commentId: F:Virgis.PolygonLayer.CylinderLinePrefab
      language: CSharp
      name:
        CSharp: CylinderLinePrefab
        VB: CylinderLinePrefab
      nameWithType:
        CSharp: PolygonLayer.CylinderLinePrefab
        VB: PolygonLayer.CylinderLinePrefab
      qualifiedName:
        CSharp: Virgis.PolygonLayer.CylinderLinePrefab
        VB: Virgis.PolygonLayer.CylinderLinePrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CylinderLinePrefab
        path: ''
        startLine: 2190
      syntax:
        content:
          CSharp: public GameObject CylinderLinePrefab
          VB: Public CylinderLinePrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PolygonLayer.CuboidLinePrefab
      commentId: F:Virgis.PolygonLayer.CuboidLinePrefab
      language: CSharp
      name:
        CSharp: CuboidLinePrefab
        VB: CuboidLinePrefab
      nameWithType:
        CSharp: PolygonLayer.CuboidLinePrefab
        VB: PolygonLayer.CuboidLinePrefab
      qualifiedName:
        CSharp: Virgis.PolygonLayer.CuboidLinePrefab
        VB: Virgis.PolygonLayer.CuboidLinePrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CuboidLinePrefab
        path: ''
        startLine: 2191
      syntax:
        content:
          CSharp: public GameObject CuboidLinePrefab
          VB: Public CuboidLinePrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PolygonLayer.SpherePrefab
      commentId: F:Virgis.PolygonLayer.SpherePrefab
      language: CSharp
      name:
        CSharp: SpherePrefab
        VB: SpherePrefab
      nameWithType:
        CSharp: PolygonLayer.SpherePrefab
        VB: PolygonLayer.SpherePrefab
      qualifiedName:
        CSharp: Virgis.PolygonLayer.SpherePrefab
        VB: Virgis.PolygonLayer.SpherePrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SpherePrefab
        path: ''
        startLine: 2192
      syntax:
        content:
          CSharp: public GameObject SpherePrefab
          VB: Public SpherePrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PolygonLayer.CubePrefab
      commentId: F:Virgis.PolygonLayer.CubePrefab
      language: CSharp
      name:
        CSharp: CubePrefab
        VB: CubePrefab
      nameWithType:
        CSharp: PolygonLayer.CubePrefab
        VB: PolygonLayer.CubePrefab
      qualifiedName:
        CSharp: Virgis.PolygonLayer.CubePrefab
        VB: Virgis.PolygonLayer.CubePrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CubePrefab
        path: ''
        startLine: 2193
      syntax:
        content:
          CSharp: public GameObject CubePrefab
          VB: Public CubePrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PolygonLayer.CylinderPrefab
      commentId: F:Virgis.PolygonLayer.CylinderPrefab
      language: CSharp
      name:
        CSharp: CylinderPrefab
        VB: CylinderPrefab
      nameWithType:
        CSharp: PolygonLayer.CylinderPrefab
        VB: PolygonLayer.CylinderPrefab
      qualifiedName:
        CSharp: Virgis.PolygonLayer.CylinderPrefab
        VB: Virgis.PolygonLayer.CylinderPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CylinderPrefab
        path: ''
        startLine: 2194
      syntax:
        content:
          CSharp: public GameObject CylinderPrefab
          VB: Public CylinderPrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PolygonLayer.PolygonPrefab
      commentId: F:Virgis.PolygonLayer.PolygonPrefab
      language: CSharp
      name:
        CSharp: PolygonPrefab
        VB: PolygonPrefab
      nameWithType:
        CSharp: PolygonLayer.PolygonPrefab
        VB: PolygonLayer.PolygonPrefab
      qualifiedName:
        CSharp: Virgis.PolygonLayer.PolygonPrefab
        VB: Virgis.PolygonLayer.PolygonPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: PolygonPrefab
        path: ''
        startLine: 2195
      syntax:
        content:
          CSharp: public GameObject PolygonPrefab
          VB: Public PolygonPrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PolygonLayer.LabelPrefab
      commentId: F:Virgis.PolygonLayer.LabelPrefab
      language: CSharp
      name:
        CSharp: LabelPrefab
        VB: LabelPrefab
      nameWithType:
        CSharp: PolygonLayer.LabelPrefab
        VB: PolygonLayer.LabelPrefab
      qualifiedName:
        CSharp: Virgis.PolygonLayer.LabelPrefab
        VB: Virgis.PolygonLayer.LabelPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: LabelPrefab
        path: ''
        startLine: 2196
      syntax:
        content:
          CSharp: public GameObject LabelPrefab
          VB: Public LabelPrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PolygonLayer.PointBaseMaterial
      commentId: F:Virgis.PolygonLayer.PointBaseMaterial
      language: CSharp
      name:
        CSharp: PointBaseMaterial
        VB: PointBaseMaterial
      nameWithType:
        CSharp: PolygonLayer.PointBaseMaterial
        VB: PolygonLayer.PointBaseMaterial
      qualifiedName:
        CSharp: Virgis.PolygonLayer.PointBaseMaterial
        VB: Virgis.PolygonLayer.PointBaseMaterial
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: PointBaseMaterial
        path: ''
        startLine: 2197
      syntax:
        content:
          CSharp: public Material PointBaseMaterial
          VB: Public PointBaseMaterial As Material
        return:
          type: Material
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PolygonLayer.LineBaseMaterial
      commentId: F:Virgis.PolygonLayer.LineBaseMaterial
      language: CSharp
      name:
        CSharp: LineBaseMaterial
        VB: LineBaseMaterial
      nameWithType:
        CSharp: PolygonLayer.LineBaseMaterial
        VB: PolygonLayer.LineBaseMaterial
      qualifiedName:
        CSharp: Virgis.PolygonLayer.LineBaseMaterial
        VB: Virgis.PolygonLayer.LineBaseMaterial
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: LineBaseMaterial
        path: ''
        startLine: 2198
      syntax:
        content:
          CSharp: public Material LineBaseMaterial
          VB: Public LineBaseMaterial As Material
        return:
          type: Material
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PolygonLayer.BodyBaseMaterial
      commentId: F:Virgis.PolygonLayer.BodyBaseMaterial
      language: CSharp
      name:
        CSharp: BodyBaseMaterial
        VB: BodyBaseMaterial
      nameWithType:
        CSharp: PolygonLayer.BodyBaseMaterial
        VB: PolygonLayer.BodyBaseMaterial
      qualifiedName:
        CSharp: Virgis.PolygonLayer.BodyBaseMaterial
        VB: Virgis.PolygonLayer.BodyBaseMaterial
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: BodyBaseMaterial
        path: ''
        startLine: 2199
      syntax:
        content:
          CSharp: public Material BodyBaseMaterial
          VB: Public BodyBaseMaterial As Material
        return:
          type: Material
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PolygonLayer._init(GeographyCollection)
      commentId: M:Virgis.PolygonLayer._init(GeographyCollection)
      language: CSharp
      name:
        CSharp: _init(GeographyCollection)
        VB: _init(GeographyCollection)
      nameWithType:
        CSharp: PolygonLayer._init(GeographyCollection)
        VB: PolygonLayer._init(GeographyCollection)
      qualifiedName:
        CSharp: Virgis.PolygonLayer._init(GeographyCollection)
        VB: Virgis.PolygonLayer._init(GeographyCollection)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _init
        path: ''
        startLine: 2214
      syntax:
        content:
          CSharp: protected override Task _init(GeographyCollection layer)
          VB: Protected Overrides Function _init(layer As GeographyCollection) As Task
        parameters:
        - id: layer
          type: GeographyCollection
        return:
          type: Task
      overload: Virgis.PolygonLayer._init*
      overridden: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._init(GeographyCollection)
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.PolygonLayer._addFeature(Vector3[])
      commentId: M:Virgis.PolygonLayer._addFeature(Vector3[])
      language: CSharp
      name:
        CSharp: _addFeature(Vector3[])
        VB: _addFeature(Vector3())
      nameWithType:
        CSharp: PolygonLayer._addFeature(Vector3[])
        VB: PolygonLayer._addFeature(Vector3())
      qualifiedName:
        CSharp: Virgis.PolygonLayer._addFeature(Vector3[])
        VB: Virgis.PolygonLayer._addFeature(Vector3())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _addFeature
        path: ''
        startLine: 2284
      syntax:
        content:
          CSharp: protected override VirgisFeature _addFeature(Vector3[] geometry)
          VB: Protected Overrides Function _addFeature(geometry As Vector3()) As VirgisFeature
        parameters:
        - id: geometry
          type: Vector3[]
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.PolygonLayer._addFeature*
      overridden: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._addFeature(Vector3[])
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.PolygonLayer._draw
      commentId: M:Virgis.PolygonLayer._draw
      language: CSharp
      name:
        CSharp: _draw()
        VB: _draw()
      nameWithType:
        CSharp: PolygonLayer._draw()
        VB: PolygonLayer._draw()
      qualifiedName:
        CSharp: Virgis.PolygonLayer._draw()
        VB: Virgis.PolygonLayer._draw()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _draw
        path: ''
        startLine: 2291
      syntax:
        content:
          CSharp: protected override void _draw()
          VB: Protected Overrides Sub _draw
      overload: Virgis.PolygonLayer._draw*
      overridden: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._draw
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.PolygonLayer._drawFeature(IEnumerable{LineString},System.String,Dictionary{System.String,System.Object})
      commentId: M:Virgis.PolygonLayer._drawFeature(IEnumerable{LineString},System.String,Dictionary{System.String,System.Object})
      language: CSharp
      name:
        CSharp: _drawFeature(IEnumerable<LineString>, String, Dictionary<String, Object>)
        VB: _drawFeature(IEnumerable(Of LineString), String, Dictionary(Of String, Object))
      nameWithType:
        CSharp: PolygonLayer._drawFeature(IEnumerable<LineString>, String, Dictionary<String, Object>)
        VB: PolygonLayer._drawFeature(IEnumerable(Of LineString), String, Dictionary(Of String, Object))
      qualifiedName:
        CSharp: Virgis.PolygonLayer._drawFeature(IEnumerable<LineString>, System.String, Dictionary<System.String, System.Object>)
        VB: Virgis.PolygonLayer._drawFeature(IEnumerable(Of LineString), System.String, Dictionary(Of System.String, System.Object))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _drawFeature
        path: ''
        startLine: 2319
      syntax:
        content:
          CSharp: protected VirgisFeature _drawFeature(IEnumerable<LineString> LinearRings, string gisId = null, Dictionary<string, object> properties = null)
          VB: Protected Function _drawFeature(LinearRings As IEnumerable(Of LineString), gisId As String = Nothing, properties As Dictionary(Of String, Object) = Nothing) As VirgisFeature
        parameters:
        - id: LinearRings
          type: IEnumerable{LineString}
        - id: gisId
          type: System.String
        - id: properties
          type: Dictionary{System.String,System.Object}
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.PolygonLayer._drawFeature*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.PolygonLayer._checkpoint
      commentId: M:Virgis.PolygonLayer._checkpoint
      language: CSharp
      name:
        CSharp: _checkpoint()
        VB: _checkpoint()
      nameWithType:
        CSharp: PolygonLayer._checkpoint()
        VB: PolygonLayer._checkpoint()
      qualifiedName:
        CSharp: Virgis.PolygonLayer._checkpoint()
        VB: Virgis.PolygonLayer._checkpoint()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _checkpoint
        path: ''
        startLine: 2364
      syntax:
        content:
          CSharp: protected override void _checkpoint()
          VB: Protected Overrides Sub _checkpoint
      overload: Virgis.PolygonLayer._checkpoint*
      overridden: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._checkpoint
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.PolygonLayer._save
      commentId: M:Virgis.PolygonLayer._save
      language: CSharp
      name:
        CSharp: _save()
        VB: _save()
      nameWithType:
        CSharp: PolygonLayer._save()
        VB: PolygonLayer._save()
      qualifiedName:
        CSharp: Virgis.PolygonLayer._save()
        VB: Virgis.PolygonLayer._save()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _save
        path: ''
        startLine: 2367
      syntax:
        content:
          CSharp: protected override Task _save()
          VB: Protected Overrides Function _save As Task
        return:
          type: Task
      overload: Virgis.PolygonLayer._save*
      overridden: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._save
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.PolygonLayer.GetFeatureShape
      commentId: M:Virgis.PolygonLayer.GetFeatureShape
      language: CSharp
      name:
        CSharp: GetFeatureShape()
        VB: GetFeatureShape()
      nameWithType:
        CSharp: PolygonLayer.GetFeatureShape()
        VB: PolygonLayer.GetFeatureShape()
      qualifiedName:
        CSharp: Virgis.PolygonLayer.GetFeatureShape()
        VB: Virgis.PolygonLayer.GetFeatureShape()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetFeatureShape
        path: ''
        startLine: 2398
      syntax:
        content:
          CSharp: public override GameObject GetFeatureShape()
          VB: Public Overrides Function GetFeatureShape As GameObject
        return:
          type: GameObject
      overload: Virgis.PolygonLayer.GetFeatureShape*
      overridden: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.GetFeatureShape
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.PolygonLayer.Translate(Virgis.MoveArgs)
      commentId: M:Virgis.PolygonLayer.Translate(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: Translate(MoveArgs)
        VB: Translate(MoveArgs)
      nameWithType:
        CSharp: PolygonLayer.Translate(MoveArgs)
        VB: PolygonLayer.Translate(MoveArgs)
      qualifiedName:
        CSharp: Virgis.PolygonLayer.Translate(Virgis.MoveArgs)
        VB: Virgis.PolygonLayer.Translate(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Translate
        path: ''
        startLine: 2406
      syntax:
        content:
          CSharp: public override void Translate(MoveArgs args)
          VB: Public Overrides Sub Translate(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.PolygonLayer.Translate*
      overridden: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Translate(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.PolygonLayer.MoveAxis(Virgis.MoveArgs)
      commentId: M:Virgis.PolygonLayer.MoveAxis(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveAxis(MoveArgs)
        VB: MoveAxis(MoveArgs)
      nameWithType:
        CSharp: PolygonLayer.MoveAxis(MoveArgs)
        VB: PolygonLayer.MoveAxis(MoveArgs)
      qualifiedName:
        CSharp: Virgis.PolygonLayer.MoveAxis(Virgis.MoveArgs)
        VB: Virgis.PolygonLayer.MoveAxis(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveAxis
        path: ''
        startLine: 2411
      syntax:
        content:
          CSharp: public override void MoveAxis(MoveArgs args)
          VB: Public Overrides Sub MoveAxis(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.PolygonLayer.MoveAxis*
      overridden: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.MoveAxis(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Virgis.PointLayer
    commentId: T:Virgis.PointLayer
    language: CSharp
    name:
      CSharp: PointLayer
      VB: PointLayer
    nameWithType:
      CSharp: PointLayer
      VB: PointLayer
    qualifiedName:
      CSharp: Virgis.PointLayer
      VB: Virgis.PointLayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: PointLayer
      path: ''
      startLine: 2431
    syntax:
      content:
        CSharp: 'public class PointLayer : VirgisLayer<GeographyCollection, FeatureCollection>, IVirgisLayer, IVirgisEntity'
        VB: >-
          Public Class PointLayer

              Inherits VirgisLayer(Of GeographyCollection, FeatureCollection)

              Implements IVirgisLayer, IVirgisEntity
    inheritance:
    - System.Object
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    implements:
    - Virgis.IVirgisLayer
    - Virgis.IVirgisEntity
    inheritedMembers:
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.layer
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.features
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.changed
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._id
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._editable
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Init(GeographyCollection)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._init(GeographyCollection)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.AddFeature(Vector3[])
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._addFeature(Vector3[])
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Draw
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._draw
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.CheckPoint
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._checkpoint
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Save
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._save
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Translate(Virgis.MoveArgs)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.MoveAxis(Virgis.MoveArgs)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.MoveTo(Virgis.MoveArgs)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.VertexMove(Virgis.MoveArgs)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.StartEditSession
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.ExitEditSession(System.Boolean)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Selected(Virgis.SelectionTypes)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.UnSelected(Virgis.SelectionTypes)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.GetClosest(Vector3,Guid[])
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.GetFeature(Guid)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.GetId
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.GetMetadata
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.GetFeatureShape
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.SetVisible(System.Boolean)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.IsVisible
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.SetEditable(System.Boolean)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.IsEditable
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Equals(System.Object)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.GetHashCode
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Equals(Virgis.VirgisLayer{GeographyCollection,FeatureCollection})
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.PointLayer.SpherePrefab
      commentId: F:Virgis.PointLayer.SpherePrefab
      language: CSharp
      name:
        CSharp: SpherePrefab
        VB: SpherePrefab
      nameWithType:
        CSharp: PointLayer.SpherePrefab
        VB: PointLayer.SpherePrefab
      qualifiedName:
        CSharp: Virgis.PointLayer.SpherePrefab
        VB: Virgis.PointLayer.SpherePrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SpherePrefab
        path: ''
        startLine: 2433
      syntax:
        content:
          CSharp: public GameObject SpherePrefab
          VB: Public SpherePrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PointLayer.CubePrefab
      commentId: F:Virgis.PointLayer.CubePrefab
      language: CSharp
      name:
        CSharp: CubePrefab
        VB: CubePrefab
      nameWithType:
        CSharp: PointLayer.CubePrefab
        VB: PointLayer.CubePrefab
      qualifiedName:
        CSharp: Virgis.PointLayer.CubePrefab
        VB: Virgis.PointLayer.CubePrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CubePrefab
        path: ''
        startLine: 2434
      syntax:
        content:
          CSharp: public GameObject CubePrefab
          VB: Public CubePrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PointLayer.CylinderPrefab
      commentId: F:Virgis.PointLayer.CylinderPrefab
      language: CSharp
      name:
        CSharp: CylinderPrefab
        VB: CylinderPrefab
      nameWithType:
        CSharp: PointLayer.CylinderPrefab
        VB: PointLayer.CylinderPrefab
      qualifiedName:
        CSharp: Virgis.PointLayer.CylinderPrefab
        VB: Virgis.PointLayer.CylinderPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CylinderPrefab
        path: ''
        startLine: 2435
      syntax:
        content:
          CSharp: public GameObject CylinderPrefab
          VB: Public CylinderPrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PointLayer.LabelPrefab
      commentId: F:Virgis.PointLayer.LabelPrefab
      language: CSharp
      name:
        CSharp: LabelPrefab
        VB: LabelPrefab
      nameWithType:
        CSharp: PointLayer.LabelPrefab
        VB: PointLayer.LabelPrefab
      qualifiedName:
        CSharp: Virgis.PointLayer.LabelPrefab
        VB: Virgis.PointLayer.LabelPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: LabelPrefab
        path: ''
        startLine: 2436
      syntax:
        content:
          CSharp: public GameObject LabelPrefab
          VB: Public LabelPrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PointLayer.BaseMaterial
      commentId: F:Virgis.PointLayer.BaseMaterial
      language: CSharp
      name:
        CSharp: BaseMaterial
        VB: BaseMaterial
      nameWithType:
        CSharp: PointLayer.BaseMaterial
        VB: PointLayer.BaseMaterial
      qualifiedName:
        CSharp: Virgis.PointLayer.BaseMaterial
        VB: Virgis.PointLayer.BaseMaterial
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: BaseMaterial
        path: ''
        startLine: 2437
      syntax:
        content:
          CSharp: public Material BaseMaterial
          VB: Public BaseMaterial As Material
        return:
          type: Material
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PointLayer._init(GeographyCollection)
      commentId: M:Virgis.PointLayer._init(GeographyCollection)
      language: CSharp
      name:
        CSharp: _init(GeographyCollection)
        VB: _init(GeographyCollection)
      nameWithType:
        CSharp: PointLayer._init(GeographyCollection)
        VB: PointLayer._init(GeographyCollection)
      qualifiedName:
        CSharp: Virgis.PointLayer._init(GeographyCollection)
        VB: Virgis.PointLayer._init(GeographyCollection)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _init
        path: ''
        startLine: 2448
      syntax:
        content:
          CSharp: protected override Task _init(GeographyCollection layer)
          VB: Protected Overrides Function _init(layer As GeographyCollection) As Task
        parameters:
        - id: layer
          type: GeographyCollection
        return:
          type: Task
      overload: Virgis.PointLayer._init*
      overridden: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._init(GeographyCollection)
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.PointLayer._addFeature(Vector3[])
      commentId: M:Virgis.PointLayer._addFeature(Vector3[])
      language: CSharp
      name:
        CSharp: _addFeature(Vector3[])
        VB: _addFeature(Vector3())
      nameWithType:
        CSharp: PointLayer._addFeature(Vector3[])
        VB: PointLayer._addFeature(Vector3())
      qualifiedName:
        CSharp: Virgis.PointLayer._addFeature(Vector3[])
        VB: Virgis.PointLayer._addFeature(Vector3())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _addFeature
        path: ''
        startLine: 2483
      syntax:
        content:
          CSharp: protected override VirgisFeature _addFeature(Vector3[] geometry)
          VB: Protected Overrides Function _addFeature(geometry As Vector3()) As VirgisFeature
        parameters:
        - id: geometry
          type: Vector3[]
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.PointLayer._addFeature*
      overridden: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._addFeature(Vector3[])
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.PointLayer._draw
      commentId: M:Virgis.PointLayer._draw
      language: CSharp
      name:
        CSharp: _draw()
        VB: _draw()
      nameWithType:
        CSharp: PointLayer._draw()
        VB: PointLayer._draw()
      qualifiedName:
        CSharp: Virgis.PointLayer._draw()
        VB: Virgis.PointLayer._draw()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _draw
        path: ''
        startLine: 2489
      syntax:
        content:
          CSharp: protected override void _draw()
          VB: Protected Overrides Sub _draw
      overload: Virgis.PointLayer._draw*
      overridden: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._draw
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.PointLayer._drawFeature(Vector3,System.String,Dictionary{System.String,System.Object})
      commentId: M:Virgis.PointLayer._drawFeature(Vector3,System.String,Dictionary{System.String,System.Object})
      language: CSharp
      name:
        CSharp: _drawFeature(Vector3, String, Dictionary<String, Object>)
        VB: _drawFeature(Vector3, String, Dictionary(Of String, Object))
      nameWithType:
        CSharp: PointLayer._drawFeature(Vector3, String, Dictionary<String, Object>)
        VB: PointLayer._drawFeature(Vector3, String, Dictionary(Of String, Object))
      qualifiedName:
        CSharp: Virgis.PointLayer._drawFeature(Vector3, System.String, Dictionary<System.String, System.Object>)
        VB: Virgis.PointLayer._drawFeature(Vector3, System.String, Dictionary(Of System.String, System.Object))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _drawFeature
        path: ''
        startLine: 2511
      summary: "\nDraws a single feature based on world space coordinates\n"
      example: []
      syntax:
        content:
          CSharp: protected VirgisFeature _drawFeature(Vector3 position, string gisId = null, Dictionary<string, object> properties = null)
          VB: Protected Function _drawFeature(position As Vector3, gisId As String = Nothing, properties As Dictionary(Of String, Object) = Nothing) As VirgisFeature
        parameters:
        - id: position
          type: Vector3
          description: Vector3 position
        - id: gisId
          type: System.String
          description: string Id
        - id: properties
          type: Dictionary{System.String,System.Object}
          description: Dictionary properties
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.PointLayer._drawFeature*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.PointLayer._checkpoint
      commentId: M:Virgis.PointLayer._checkpoint
      language: CSharp
      name:
        CSharp: _checkpoint()
        VB: _checkpoint()
      nameWithType:
        CSharp: PointLayer._checkpoint()
        VB: PointLayer._checkpoint()
      qualifiedName:
        CSharp: Virgis.PointLayer._checkpoint()
        VB: Virgis.PointLayer._checkpoint()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _checkpoint
        path: ''
        startLine: 2542
      syntax:
        content:
          CSharp: protected override void _checkpoint()
          VB: Protected Overrides Sub _checkpoint
      overload: Virgis.PointLayer._checkpoint*
      overridden: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._checkpoint
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.PointLayer._save
      commentId: M:Virgis.PointLayer._save
      language: CSharp
      name:
        CSharp: _save()
        VB: _save()
      nameWithType:
        CSharp: PointLayer._save()
        VB: PointLayer._save()
      qualifiedName:
        CSharp: Virgis.PointLayer._save()
        VB: Virgis.PointLayer._save()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _save
        path: ''
        startLine: 2544
      syntax:
        content:
          CSharp: protected override Task _save()
          VB: Protected Overrides Function _save As Task
        return:
          type: Task
      overload: Virgis.PointLayer._save*
      overridden: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._save
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.PointLayer.GetFeatureShape
      commentId: M:Virgis.PointLayer.GetFeatureShape
      language: CSharp
      name:
        CSharp: GetFeatureShape()
        VB: GetFeatureShape()
      nameWithType:
        CSharp: PointLayer.GetFeatureShape()
        VB: PointLayer.GetFeatureShape()
      qualifiedName:
        CSharp: Virgis.PointLayer.GetFeatureShape()
        VB: Virgis.PointLayer.GetFeatureShape()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetFeatureShape
        path: ''
        startLine: 2556
      syntax:
        content:
          CSharp: public override GameObject GetFeatureShape()
          VB: Public Overrides Function GetFeatureShape As GameObject
        return:
          type: GameObject
      overload: Virgis.PointLayer.GetFeatureShape*
      overridden: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.GetFeatureShape
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.PointLayer.Translate(Virgis.MoveArgs)
      commentId: M:Virgis.PointLayer.Translate(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: Translate(MoveArgs)
        VB: Translate(MoveArgs)
      nameWithType:
        CSharp: PointLayer.Translate(MoveArgs)
        VB: PointLayer.Translate(MoveArgs)
      qualifiedName:
        CSharp: Virgis.PointLayer.Translate(Virgis.MoveArgs)
        VB: Virgis.PointLayer.Translate(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Translate
        path: ''
        startLine: 2563
      syntax:
        content:
          CSharp: public override void Translate(MoveArgs args)
          VB: Public Overrides Sub Translate(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.PointLayer.Translate*
      overridden: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Translate(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.PointLayer.MoveAxis(Virgis.MoveArgs)
      commentId: M:Virgis.PointLayer.MoveAxis(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveAxis(MoveArgs)
        VB: MoveAxis(MoveArgs)
      nameWithType:
        CSharp: PointLayer.MoveAxis(MoveArgs)
        VB: PointLayer.MoveAxis(MoveArgs)
      qualifiedName:
        CSharp: Virgis.PointLayer.MoveAxis(Virgis.MoveArgs)
        VB: Virgis.PointLayer.MoveAxis(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveAxis
        path: ''
        startLine: 2568
      syntax:
        content:
          CSharp: public override void MoveAxis(MoveArgs args)
          VB: Public Overrides Sub MoveAxis(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.PointLayer.MoveAxis*
      overridden: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.MoveAxis(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.PointLayer.RemoveVertex(Virgis.VirgisFeature)
      commentId: M:Virgis.PointLayer.RemoveVertex(Virgis.VirgisFeature)
      language: CSharp
      name:
        CSharp: RemoveVertex(VirgisFeature)
        VB: RemoveVertex(VirgisFeature)
      nameWithType:
        CSharp: PointLayer.RemoveVertex(VirgisFeature)
        VB: PointLayer.RemoveVertex(VirgisFeature)
      qualifiedName:
        CSharp: Virgis.PointLayer.RemoveVertex(Virgis.VirgisFeature)
        VB: Virgis.PointLayer.RemoveVertex(Virgis.VirgisFeature)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: RemoveVertex
        path: ''
        startLine: 2572
      syntax:
        content:
          CSharp: public void RemoveVertex(VirgisFeature vertex)
          VB: Public Sub RemoveVertex(vertex As VirgisFeature)
        parameters:
        - id: vertex
          type: Virgis.VirgisFeature
      overload: Virgis.PointLayer.RemoveVertex*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.LayerPanelEditSelectedEvent
    commentId: T:Virgis.LayerPanelEditSelectedEvent
    language: CSharp
    name:
      CSharp: LayerPanelEditSelectedEvent
      VB: LayerPanelEditSelectedEvent
    nameWithType:
      CSharp: LayerPanelEditSelectedEvent
      VB: LayerPanelEditSelectedEvent
    qualifiedName:
      CSharp: Virgis.LayerPanelEditSelectedEvent
      VB: Virgis.LayerPanelEditSelectedEvent
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: LayerPanelEditSelectedEvent
      path: ''
      startLine: 2589
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class LayerPanelEditSelectedEvent : UnityEvent<LayerUIPanel, bool>
        VB: >-
          <Serializable>

          Public Class LayerPanelEditSelectedEvent

              Inherits UnityEvent(Of LayerUIPanel, Boolean)
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Virgis.LayerUIPanel
    commentId: T:Virgis.LayerUIPanel
    language: CSharp
    name:
      CSharp: LayerUIPanel
      VB: LayerUIPanel
    nameWithType:
      CSharp: LayerUIPanel
      VB: LayerUIPanel
    qualifiedName:
      CSharp: Virgis.LayerUIPanel
      VB: Virgis.LayerUIPanel
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: LayerUIPanel
      path: ''
      startLine: 2592
    syntax:
      content:
        CSharp: 'public class LayerUIPanel : MonoBehaviour'
        VB: >-
          Public Class LayerUIPanel

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.LayerUIPanel.editLayerToggle
      commentId: F:Virgis.LayerUIPanel.editLayerToggle
      language: CSharp
      name:
        CSharp: editLayerToggle
        VB: editLayerToggle
      nameWithType:
        CSharp: LayerUIPanel.editLayerToggle
        VB: LayerUIPanel.editLayerToggle
      qualifiedName:
        CSharp: Virgis.LayerUIPanel.editLayerToggle
        VB: Virgis.LayerUIPanel.editLayerToggle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: editLayerToggle
        path: ''
        startLine: 2593
      syntax:
        content:
          CSharp: public Toggle editLayerToggle
          VB: Public editLayerToggle As Toggle
        return:
          type: Toggle
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LayerUIPanel.viewLayerToggle
      commentId: F:Virgis.LayerUIPanel.viewLayerToggle
      language: CSharp
      name:
        CSharp: viewLayerToggle
        VB: viewLayerToggle
      nameWithType:
        CSharp: LayerUIPanel.viewLayerToggle
        VB: LayerUIPanel.viewLayerToggle
      qualifiedName:
        CSharp: Virgis.LayerUIPanel.viewLayerToggle
        VB: Virgis.LayerUIPanel.viewLayerToggle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: viewLayerToggle
        path: ''
        startLine: 2594
      syntax:
        content:
          CSharp: public Toggle viewLayerToggle
          VB: Public viewLayerToggle As Toggle
        return:
          type: Toggle
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LayerUIPanel.layer
      commentId: P:Virgis.LayerUIPanel.layer
      language: CSharp
      name:
        CSharp: layer
        VB: layer
      nameWithType:
        CSharp: LayerUIPanel.layer
        VB: LayerUIPanel.layer
      qualifiedName:
        CSharp: Virgis.LayerUIPanel.layer
        VB: Virgis.LayerUIPanel.layer
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: layer
        path: ''
        startLine: 2605
      syntax:
        content:
          CSharp: public IVirgisLayer layer { get; set; }
          VB: Public Property layer As IVirgisLayer
        parameters: []
        return:
          type: Virgis.IVirgisLayer
      overload: Virgis.LayerUIPanel.layer*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Virgis.LayerUIPanel.AddEditSelectedListener(UnityAction{Virgis.LayerUIPanel,System.Boolean})
      commentId: M:Virgis.LayerUIPanel.AddEditSelectedListener(UnityAction{Virgis.LayerUIPanel,System.Boolean})
      language: CSharp
      name:
        CSharp: AddEditSelectedListener(UnityAction<LayerUIPanel, Boolean>)
        VB: AddEditSelectedListener(UnityAction(Of LayerUIPanel, Boolean))
      nameWithType:
        CSharp: LayerUIPanel.AddEditSelectedListener(UnityAction<LayerUIPanel, Boolean>)
        VB: LayerUIPanel.AddEditSelectedListener(UnityAction(Of LayerUIPanel, Boolean))
      qualifiedName:
        CSharp: Virgis.LayerUIPanel.AddEditSelectedListener(UnityAction<Virgis.LayerUIPanel, System.Boolean>)
        VB: Virgis.LayerUIPanel.AddEditSelectedListener(UnityAction(Of Virgis.LayerUIPanel, System.Boolean))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: AddEditSelectedListener
        path: ''
        startLine: 2618
      syntax:
        content:
          CSharp: public void AddEditSelectedListener(UnityAction<LayerUIPanel, bool> action)
          VB: Public Sub AddEditSelectedListener(action As UnityAction(Of LayerUIPanel, Boolean))
        parameters:
        - id: action
          type: UnityAction{Virgis.LayerUIPanel,System.Boolean}
      overload: Virgis.LayerUIPanel.AddEditSelectedListener*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.LineLayer
    commentId: T:Virgis.LineLayer
    language: CSharp
    name:
      CSharp: LineLayer
      VB: LineLayer
    nameWithType:
      CSharp: LineLayer
      VB: LineLayer
    qualifiedName:
      CSharp: Virgis.LineLayer
      VB: Virgis.LineLayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: LineLayer
      path: ''
      startLine: 2660
    summary: "\nThe parent entity for a instance of a Line Layer - that holds one MultiLineString FeatureCollection\n"
    example: []
    syntax:
      content:
        CSharp: 'public class LineLayer : VirgisLayer<GeographyCollection, FeatureCollection>, IVirgisLayer, IVirgisEntity'
        VB: >-
          Public Class LineLayer

              Inherits VirgisLayer(Of GeographyCollection, FeatureCollection)

              Implements IVirgisLayer, IVirgisEntity
    inheritance:
    - System.Object
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    implements:
    - Virgis.IVirgisLayer
    - Virgis.IVirgisEntity
    inheritedMembers:
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.layer
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.features
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.changed
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._id
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._editable
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Init(GeographyCollection)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._init(GeographyCollection)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.AddFeature(Vector3[])
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._addFeature(Vector3[])
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Draw
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._draw
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.CheckPoint
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._checkpoint
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Save
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._save
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Translate(Virgis.MoveArgs)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.MoveAxis(Virgis.MoveArgs)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.MoveTo(Virgis.MoveArgs)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.VertexMove(Virgis.MoveArgs)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.StartEditSession
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.ExitEditSession(System.Boolean)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Selected(Virgis.SelectionTypes)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.UnSelected(Virgis.SelectionTypes)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.GetClosest(Vector3,Guid[])
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.GetFeature(Guid)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.GetId
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.GetMetadata
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.GetFeatureShape
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.SetVisible(System.Boolean)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.IsVisible
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.SetEditable(System.Boolean)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.IsEditable
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Equals(System.Object)
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.GetHashCode
    - Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Equals(Virgis.VirgisLayer{GeographyCollection,FeatureCollection})
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.LineLayer.CylinderLinePrefab
      commentId: F:Virgis.LineLayer.CylinderLinePrefab
      language: CSharp
      name:
        CSharp: CylinderLinePrefab
        VB: CylinderLinePrefab
      nameWithType:
        CSharp: LineLayer.CylinderLinePrefab
        VB: LineLayer.CylinderLinePrefab
      qualifiedName:
        CSharp: Virgis.LineLayer.CylinderLinePrefab
        VB: Virgis.LineLayer.CylinderLinePrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CylinderLinePrefab
        path: ''
        startLine: 2663
      syntax:
        content:
          CSharp: public GameObject CylinderLinePrefab
          VB: Public CylinderLinePrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LineLayer.CuboidLinePrefab
      commentId: F:Virgis.LineLayer.CuboidLinePrefab
      language: CSharp
      name:
        CSharp: CuboidLinePrefab
        VB: CuboidLinePrefab
      nameWithType:
        CSharp: LineLayer.CuboidLinePrefab
        VB: LineLayer.CuboidLinePrefab
      qualifiedName:
        CSharp: Virgis.LineLayer.CuboidLinePrefab
        VB: Virgis.LineLayer.CuboidLinePrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CuboidLinePrefab
        path: ''
        startLine: 2664
      syntax:
        content:
          CSharp: public GameObject CuboidLinePrefab
          VB: Public CuboidLinePrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LineLayer.SpherePrefab
      commentId: F:Virgis.LineLayer.SpherePrefab
      language: CSharp
      name:
        CSharp: SpherePrefab
        VB: SpherePrefab
      nameWithType:
        CSharp: LineLayer.SpherePrefab
        VB: LineLayer.SpherePrefab
      qualifiedName:
        CSharp: Virgis.LineLayer.SpherePrefab
        VB: Virgis.LineLayer.SpherePrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SpherePrefab
        path: ''
        startLine: 2665
      syntax:
        content:
          CSharp: public GameObject SpherePrefab
          VB: Public SpherePrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LineLayer.CubePrefab
      commentId: F:Virgis.LineLayer.CubePrefab
      language: CSharp
      name:
        CSharp: CubePrefab
        VB: CubePrefab
      nameWithType:
        CSharp: LineLayer.CubePrefab
        VB: LineLayer.CubePrefab
      qualifiedName:
        CSharp: Virgis.LineLayer.CubePrefab
        VB: Virgis.LineLayer.CubePrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CubePrefab
        path: ''
        startLine: 2666
      syntax:
        content:
          CSharp: public GameObject CubePrefab
          VB: Public CubePrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LineLayer.CylinderPrefab
      commentId: F:Virgis.LineLayer.CylinderPrefab
      language: CSharp
      name:
        CSharp: CylinderPrefab
        VB: CylinderPrefab
      nameWithType:
        CSharp: LineLayer.CylinderPrefab
        VB: LineLayer.CylinderPrefab
      qualifiedName:
        CSharp: Virgis.LineLayer.CylinderPrefab
        VB: Virgis.LineLayer.CylinderPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CylinderPrefab
        path: ''
        startLine: 2667
      syntax:
        content:
          CSharp: public GameObject CylinderPrefab
          VB: Public CylinderPrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LineLayer.LabelPrefab
      commentId: F:Virgis.LineLayer.LabelPrefab
      language: CSharp
      name:
        CSharp: LabelPrefab
        VB: LabelPrefab
      nameWithType:
        CSharp: LineLayer.LabelPrefab
        VB: LineLayer.LabelPrefab
      qualifiedName:
        CSharp: Virgis.LineLayer.LabelPrefab
        VB: Virgis.LineLayer.LabelPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: LabelPrefab
        path: ''
        startLine: 2668
      syntax:
        content:
          CSharp: public GameObject LabelPrefab
          VB: Public LabelPrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LineLayer.PointBaseMaterial
      commentId: F:Virgis.LineLayer.PointBaseMaterial
      language: CSharp
      name:
        CSharp: PointBaseMaterial
        VB: PointBaseMaterial
      nameWithType:
        CSharp: LineLayer.PointBaseMaterial
        VB: LineLayer.PointBaseMaterial
      qualifiedName:
        CSharp: Virgis.LineLayer.PointBaseMaterial
        VB: Virgis.LineLayer.PointBaseMaterial
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: PointBaseMaterial
        path: ''
        startLine: 2669
      syntax:
        content:
          CSharp: public Material PointBaseMaterial
          VB: Public PointBaseMaterial As Material
        return:
          type: Material
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LineLayer.LineBaseMaterial
      commentId: F:Virgis.LineLayer.LineBaseMaterial
      language: CSharp
      name:
        CSharp: LineBaseMaterial
        VB: LineBaseMaterial
      nameWithType:
        CSharp: LineLayer.LineBaseMaterial
        VB: LineLayer.LineBaseMaterial
      qualifiedName:
        CSharp: Virgis.LineLayer.LineBaseMaterial
        VB: Virgis.LineLayer.LineBaseMaterial
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: LineBaseMaterial
        path: ''
        startLine: 2670
      syntax:
        content:
          CSharp: public Material LineBaseMaterial
          VB: Public LineBaseMaterial As Material
        return:
          type: Material
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LineLayer._init(GeographyCollection)
      commentId: M:Virgis.LineLayer._init(GeographyCollection)
      language: CSharp
      name:
        CSharp: _init(GeographyCollection)
        VB: _init(GeographyCollection)
      nameWithType:
        CSharp: LineLayer._init(GeographyCollection)
        VB: LineLayer._init(GeographyCollection)
      qualifiedName:
        CSharp: Virgis.LineLayer._init(GeographyCollection)
        VB: Virgis.LineLayer._init(GeographyCollection)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _init
        path: ''
        startLine: 2686
      syntax:
        content:
          CSharp: protected override Task _init(GeographyCollection layer)
          VB: Protected Overrides Function _init(layer As GeographyCollection) As Task
        parameters:
        - id: layer
          type: GeographyCollection
        return:
          type: Task
      overload: Virgis.LineLayer._init*
      overridden: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._init(GeographyCollection)
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.LineLayer._addFeature(Vector3[])
      commentId: M:Virgis.LineLayer._addFeature(Vector3[])
      language: CSharp
      name:
        CSharp: _addFeature(Vector3[])
        VB: _addFeature(Vector3())
      nameWithType:
        CSharp: LineLayer._addFeature(Vector3[])
        VB: LineLayer._addFeature(Vector3())
      qualifiedName:
        CSharp: Virgis.LineLayer._addFeature(Vector3[])
        VB: Virgis.LineLayer._addFeature(Vector3())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _addFeature
        path: ''
        startLine: 2751
      syntax:
        content:
          CSharp: protected override VirgisFeature _addFeature(Vector3[] geometry)
          VB: Protected Overrides Function _addFeature(geometry As Vector3()) As VirgisFeature
        parameters:
        - id: geometry
          type: Vector3[]
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.LineLayer._addFeature*
      overridden: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._addFeature(Vector3[])
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.LineLayer._draw
      commentId: M:Virgis.LineLayer._draw
      language: CSharp
      name:
        CSharp: _draw()
        VB: _draw()
      nameWithType:
        CSharp: LineLayer._draw()
        VB: LineLayer._draw()
      qualifiedName:
        CSharp: Virgis.LineLayer._draw()
        VB: Virgis.LineLayer._draw()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _draw
        path: ''
        startLine: 2756
      syntax:
        content:
          CSharp: protected override void _draw()
          VB: Protected Overrides Sub _draw
      overload: Virgis.LineLayer._draw*
      overridden: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._draw
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.LineLayer._drawFeature(Vector3[],System.Boolean,System.String,Dictionary{System.String,System.Object})
      commentId: M:Virgis.LineLayer._drawFeature(Vector3[],System.Boolean,System.String,Dictionary{System.String,System.Object})
      language: CSharp
      name:
        CSharp: _drawFeature(Vector3[], Boolean, String, Dictionary<String, Object>)
        VB: _drawFeature(Vector3(), Boolean, String, Dictionary(Of String, Object))
      nameWithType:
        CSharp: LineLayer._drawFeature(Vector3[], Boolean, String, Dictionary<String, Object>)
        VB: LineLayer._drawFeature(Vector3(), Boolean, String, Dictionary(Of String, Object))
      qualifiedName:
        CSharp: Virgis.LineLayer._drawFeature(Vector3[], System.Boolean, System.String, Dictionary<System.String, System.Object>)
        VB: Virgis.LineLayer._drawFeature(Vector3(), System.Boolean, System.String, Dictionary(Of System.String, System.Object))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _drawFeature
        path: ''
        startLine: 2789
      summary: "\nDraws a single feature based on world scale coordinates\n"
      example: []
      syntax:
        content:
          CSharp: protected VirgisFeature _drawFeature(Vector3[] line, bool Lr = false, string gisId = null, Dictionary<string, object> properties = null)
          VB: Protected Function _drawFeature(line As Vector3(), Lr As Boolean = False, gisId As String = Nothing, properties As Dictionary(Of String, Object) = Nothing) As VirgisFeature
        parameters:
        - id: line
          type: Vector3[]
          description: Vector3[] coordinates
        - id: Lr
          type: System.Boolean
          description: boolean Is the line a linear ring , deafult false
        - id: gisId
          type: System.String
          description: string Id
        - id: properties
          type: Dictionary{System.String,System.Object}
          description: Dictionary properties
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.LineLayer._drawFeature*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.LineLayer._checkpoint
      commentId: M:Virgis.LineLayer._checkpoint
      language: CSharp
      name:
        CSharp: _checkpoint()
        VB: _checkpoint()
      nameWithType:
        CSharp: LineLayer._checkpoint()
        VB: LineLayer._checkpoint()
      qualifiedName:
        CSharp: Virgis.LineLayer._checkpoint()
        VB: Virgis.LineLayer._checkpoint()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _checkpoint
        path: ''
        startLine: 2803
      syntax:
        content:
          CSharp: protected override void _checkpoint()
          VB: Protected Overrides Sub _checkpoint
      overload: Virgis.LineLayer._checkpoint*
      overridden: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._checkpoint
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.LineLayer._save
      commentId: M:Virgis.LineLayer._save
      language: CSharp
      name:
        CSharp: _save()
        VB: _save()
      nameWithType:
        CSharp: LineLayer._save()
        VB: LineLayer._save()
      qualifiedName:
        CSharp: Virgis.LineLayer._save()
        VB: Virgis.LineLayer._save()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _save
        path: ''
        startLine: 2807
      syntax:
        content:
          CSharp: protected override Task _save()
          VB: Protected Overrides Function _save As Task
        return:
          type: Task
      overload: Virgis.LineLayer._save*
      overridden: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._save
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.LineLayer.GetFeatureShape
      commentId: M:Virgis.LineLayer.GetFeatureShape
      language: CSharp
      name:
        CSharp: GetFeatureShape()
        VB: GetFeatureShape()
      nameWithType:
        CSharp: LineLayer.GetFeatureShape()
        VB: LineLayer.GetFeatureShape()
      qualifiedName:
        CSharp: Virgis.LineLayer.GetFeatureShape()
        VB: Virgis.LineLayer.GetFeatureShape()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetFeatureShape
        path: ''
        startLine: 2829
      syntax:
        content:
          CSharp: public override GameObject GetFeatureShape()
          VB: Public Overrides Function GetFeatureShape As GameObject
        return:
          type: GameObject
      overload: Virgis.LineLayer.GetFeatureShape*
      overridden: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.GetFeatureShape
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.LineLayer.Translate(Virgis.MoveArgs)
      commentId: M:Virgis.LineLayer.Translate(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: Translate(MoveArgs)
        VB: Translate(MoveArgs)
      nameWithType:
        CSharp: LineLayer.Translate(MoveArgs)
        VB: LineLayer.Translate(MoveArgs)
      qualifiedName:
        CSharp: Virgis.LineLayer.Translate(Virgis.MoveArgs)
        VB: Virgis.LineLayer.Translate(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Translate
        path: ''
        startLine: 2837
      syntax:
        content:
          CSharp: public override void Translate(MoveArgs args)
          VB: Public Overrides Sub Translate(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.LineLayer.Translate*
      overridden: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Translate(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.LineLayer.MoveAxis(Virgis.MoveArgs)
      commentId: M:Virgis.LineLayer.MoveAxis(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveAxis(MoveArgs)
        VB: MoveAxis(MoveArgs)
      nameWithType:
        CSharp: LineLayer.MoveAxis(MoveArgs)
        VB: LineLayer.MoveAxis(MoveArgs)
      qualifiedName:
        CSharp: Virgis.LineLayer.MoveAxis(Virgis.MoveArgs)
        VB: Virgis.LineLayer.MoveAxis(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveAxis
        path: ''
        startLine: 2845
      syntax:
        content:
          CSharp: public override void MoveAxis(MoveArgs args)
          VB: Public Overrides Sub MoveAxis(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.LineLayer.MoveAxis*
      overridden: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.MoveAxis(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Virgis.PlyImport
    commentId: T:Virgis.PlyImport
    language: CSharp
    name:
      CSharp: PlyImport
      VB: PlyImport
    nameWithType:
      CSharp: PlyImport
      VB: PlyImport
    qualifiedName:
      CSharp: Virgis.PlyImport
      VB: Virgis.PlyImport
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: PlyImport
      path: ''
      startLine: 2873
    summary: "\nImports a .ply file as a ParticleData Object\n\nAdapted from https://github.com/leon196/PointCloudExporter/blob/master/Assets/Scripts/SimpleImporter.cs\n"
    example: []
    syntax:
      content:
        CSharp: public class PlyImport
        VB: Public Class PlyImport
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.PlyImport.Load(System.String,System.Int32)
      commentId: M:Virgis.PlyImport.Load(System.String,System.Int32)
      language: CSharp
      name:
        CSharp: Load(String, Int32)
        VB: Load(String, Int32)
      nameWithType:
        CSharp: PlyImport.Load(String, Int32)
        VB: PlyImport.Load(String, Int32)
      qualifiedName:
        CSharp: Virgis.PlyImport.Load(System.String, System.Int32)
        VB: Virgis.PlyImport.Load(System.String, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Load
        path: ''
        startLine: 2876
      syntax:
        content:
          CSharp: public Task<ParticleData> Load(string filePath, int maximumVertex = 10000000)
          VB: Public Function Load(filePath As String, maximumVertex As Integer = 10000000) As Task(Of ParticleData)
        parameters:
        - id: filePath
          type: System.String
        - id: maximumVertex
          type: System.Int32
        return:
          type: Task{Virgis.ParticleData}
      overload: Virgis.PlyImport.Load*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.CSVRow
    commentId: T:Virgis.CSVRow
    language: CSharp
    name:
      CSharp: CSVRow
      VB: CSVRow
    nameWithType:
      CSharp: CSVRow
      VB: CSVRow
    qualifiedName:
      CSharp: Virgis.CSVRow
      VB: Virgis.CSVRow
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: CSVRow
      path: ''
      startLine: 3014
    syntax:
      content:
        CSharp: 'public class CSVRow : Dictionary<string, object>'
        VB: >-
          Public Class CSVRow

              Inherits Dictionary(Of String, Object)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Virgis.CSVData
    commentId: T:Virgis.CSVData
    language: CSharp
    name:
      CSharp: CSVData
      VB: CSVData
    nameWithType:
      CSharp: CSVData
      VB: CSVData
    qualifiedName:
      CSharp: Virgis.CSVData
      VB: Virgis.CSVData
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: CSVData
      path: ''
      startLine: 3015
    syntax:
      content:
        CSharp: 'public class CSVData : List<CSVRow>'
        VB: >-
          Public Class CSVData

              Inherits List(Of CSVRow)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Virgis.CSVReader
    commentId: T:Virgis.CSVReader
    language: CSharp
    name:
      CSharp: CSVReader
      VB: CSVReader
    nameWithType:
      CSharp: CSVReader
      VB: CSVReader
    qualifiedName:
      CSharp: Virgis.CSVReader
      VB: Virgis.CSVReader
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: CSVReader
      path: ''
      startLine: 3016
    syntax:
      content:
        CSharp: public class CSVReader
        VB: Public Class CSVReader
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.CSVReader.Payload
      commentId: F:Virgis.CSVReader.Payload
      language: CSharp
      name:
        CSharp: Payload
        VB: Payload
      nameWithType:
        CSharp: CSVReader.Payload
        VB: CSVReader.Payload
      qualifiedName:
        CSharp: Virgis.CSVReader.Payload
        VB: Virgis.CSVReader.Payload
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Payload
        path: ''
        startLine: 3022
      syntax:
        content:
          CSharp: public string Payload
          VB: Public Payload As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.CSVReader.Load(System.String)
      commentId: M:Virgis.CSVReader.Load(System.String)
      language: CSharp
      name:
        CSharp: Load(String)
        VB: Load(String)
      nameWithType:
        CSharp: CSVReader.Load(String)
        VB: CSVReader.Load(String)
      qualifiedName:
        CSharp: Virgis.CSVReader.Load(System.String)
        VB: Virgis.CSVReader.Load(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Load
        path: ''
        startLine: 3024
      syntax:
        content:
          CSharp: public Task Load(string file)
          VB: Public Function Load(file As String) As Task
        parameters:
        - id: file
          type: System.String
        return:
          type: Task
      overload: Virgis.CSVReader.Load*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.CSVReader.Read
      commentId: M:Virgis.CSVReader.Read
      language: CSharp
      name:
        CSharp: Read()
        VB: Read()
      nameWithType:
        CSharp: CSVReader.Read()
        VB: CSVReader.Read()
      qualifiedName:
        CSharp: Virgis.CSVReader.Read()
        VB: Virgis.CSVReader.Read()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Read
        path: ''
        startLine: 3049
      syntax:
        content:
          CSharp: public CSVData Read()
          VB: Public Function Read As CSVData
        return:
          type: Virgis.CSVData
      overload: Virgis.CSVReader.Read*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.GeoJsonReader
    commentId: T:Virgis.GeoJsonReader
    language: CSharp
    name:
      CSharp: GeoJsonReader
      VB: GeoJsonReader
    nameWithType:
      CSharp: GeoJsonReader
      VB: GeoJsonReader
    qualifiedName:
      CSharp: Virgis.GeoJsonReader
      VB: Virgis.GeoJsonReader
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: GeoJsonReader
      path: ''
      startLine: 3108
    syntax:
      content:
        CSharp: public class GeoJsonReader
        VB: Public Class GeoJsonReader
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.GeoJsonReader.payload
      commentId: F:Virgis.GeoJsonReader.payload
      language: CSharp
      name:
        CSharp: payload
        VB: payload
      nameWithType:
        CSharp: GeoJsonReader.payload
        VB: GeoJsonReader.payload
      qualifiedName:
        CSharp: Virgis.GeoJsonReader.payload
        VB: Virgis.GeoJsonReader.payload
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: payload
        path: ''
        startLine: 3110
      syntax:
        content:
          CSharp: public string payload
          VB: Public payload As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.GeoJsonReader.fileName
      commentId: F:Virgis.GeoJsonReader.fileName
      language: CSharp
      name:
        CSharp: fileName
        VB: fileName
      nameWithType:
        CSharp: GeoJsonReader.fileName
        VB: GeoJsonReader.fileName
      qualifiedName:
        CSharp: Virgis.GeoJsonReader.fileName
        VB: Virgis.GeoJsonReader.fileName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: fileName
        path: ''
        startLine: 3111
      syntax:
        content:
          CSharp: public string fileName
          VB: Public fileName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.GeoJsonReader.getFeatureCollection
      commentId: M:Virgis.GeoJsonReader.getFeatureCollection
      language: CSharp
      name:
        CSharp: getFeatureCollection()
        VB: getFeatureCollection()
      nameWithType:
        CSharp: GeoJsonReader.getFeatureCollection()
        VB: GeoJsonReader.getFeatureCollection()
      qualifiedName:
        CSharp: Virgis.GeoJsonReader.getFeatureCollection()
        VB: Virgis.GeoJsonReader.getFeatureCollection()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: getFeatureCollection
        path: ''
        startLine: 3113
      syntax:
        content:
          CSharp: public FeatureCollection getFeatureCollection()
          VB: Public Function getFeatureCollection As FeatureCollection
        return:
          type: FeatureCollection
      overload: Virgis.GeoJsonReader.getFeatureCollection*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.GeoJsonReader.Load(System.String)
      commentId: M:Virgis.GeoJsonReader.Load(System.String)
      language: CSharp
      name:
        CSharp: Load(String)
        VB: Load(String)
      nameWithType:
        CSharp: GeoJsonReader.Load(String)
        VB: GeoJsonReader.Load(String)
      qualifiedName:
        CSharp: Virgis.GeoJsonReader.Load(System.String)
        VB: Virgis.GeoJsonReader.Load(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Load
        path: ''
        startLine: 3125
      syntax:
        content:
          CSharp: public Task Load(string file)
          VB: Public Function Load(file As String) As Task
        parameters:
        - id: file
          type: System.String
        return:
          type: Task
      overload: Virgis.GeoJsonReader.Load*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.GeoJsonReader.GetProject
      commentId: M:Virgis.GeoJsonReader.GetProject
      language: CSharp
      name:
        CSharp: GetProject()
        VB: GetProject()
      nameWithType:
        CSharp: GeoJsonReader.GetProject()
        VB: GeoJsonReader.GetProject()
      qualifiedName:
        CSharp: Virgis.GeoJsonReader.GetProject()
        VB: Virgis.GeoJsonReader.GetProject()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetProject
        path: ''
        startLine: 3156
      syntax:
        content:
          CSharp: public GisProject GetProject()
          VB: Public Function GetProject As GisProject
        return:
          type: GisProject
      overload: Virgis.GeoJsonReader.GetProject*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.GeoJsonReader.Save
      commentId: M:Virgis.GeoJsonReader.Save
      language: CSharp
      name:
        CSharp: Save()
        VB: Save()
      nameWithType:
        CSharp: GeoJsonReader.Save()
        VB: GeoJsonReader.Save()
      qualifiedName:
        CSharp: Virgis.GeoJsonReader.Save()
        VB: Virgis.GeoJsonReader.Save()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Save
        path: ''
        startLine: 3161
      syntax:
        content:
          CSharp: public Task Save()
          VB: Public Function Save As Task
        return:
          type: Task
      overload: Virgis.GeoJsonReader.Save*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.GeoJsonReader.SetFeatureCollection(FeatureCollection)
      commentId: M:Virgis.GeoJsonReader.SetFeatureCollection(FeatureCollection)
      language: CSharp
      name:
        CSharp: SetFeatureCollection(FeatureCollection)
        VB: SetFeatureCollection(FeatureCollection)
      nameWithType:
        CSharp: GeoJsonReader.SetFeatureCollection(FeatureCollection)
        VB: GeoJsonReader.SetFeatureCollection(FeatureCollection)
      qualifiedName:
        CSharp: Virgis.GeoJsonReader.SetFeatureCollection(FeatureCollection)
        VB: Virgis.GeoJsonReader.SetFeatureCollection(FeatureCollection)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SetFeatureCollection
        path: ''
        startLine: 3170
      syntax:
        content:
          CSharp: public void SetFeatureCollection(FeatureCollection contents)
          VB: Public Sub SetFeatureCollection(contents As FeatureCollection)
        parameters:
        - id: contents
          type: FeatureCollection
      overload: Virgis.GeoJsonReader.SetFeatureCollection*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.GeoJsonReader.SetProject(GisProject)
      commentId: M:Virgis.GeoJsonReader.SetProject(GisProject)
      language: CSharp
      name:
        CSharp: SetProject(GisProject)
        VB: SetProject(GisProject)
      nameWithType:
        CSharp: GeoJsonReader.SetProject(GisProject)
        VB: GeoJsonReader.SetProject(GisProject)
      qualifiedName:
        CSharp: Virgis.GeoJsonReader.SetProject(GisProject)
        VB: Virgis.GeoJsonReader.SetProject(GisProject)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SetProject
        path: ''
        startLine: 3175
      syntax:
        content:
          CSharp: public void SetProject(GisProject project)
          VB: Public Sub SetProject(project As GisProject)
        parameters:
        - id: project
          type: GisProject
      overload: Virgis.GeoJsonReader.SetProject*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.DataPlotter
    commentId: T:Virgis.DataPlotter
    language: CSharp
    name:
      CSharp: DataPlotter
      VB: DataPlotter
    nameWithType:
      CSharp: DataPlotter
      VB: DataPlotter
    qualifiedName:
      CSharp: Virgis.DataPlotter
      VB: Virgis.DataPlotter
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: DataPlotter
      path: ''
      startLine: 3196
    syntax:
      content:
        CSharp: 'public class DataPlotter : VirgisLayer<RecordSet, CSVData>, IVirgisLayer, IVirgisEntity'
        VB: >-
          Public Class DataPlotter

              Inherits VirgisLayer(Of RecordSet, CSVData)

              Implements IVirgisLayer, IVirgisEntity
    inheritance:
    - System.Object
    - Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
    implements:
    - Virgis.IVirgisLayer
    - Virgis.IVirgisEntity
    inheritedMembers:
    - Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.layer
    - Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.features
    - Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.changed
    - Virgis.VirgisLayer{RecordSet,Virgis.CSVData}._id
    - Virgis.VirgisLayer{RecordSet,Virgis.CSVData}._editable
    - Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.Init(RecordSet)
    - Virgis.VirgisLayer{RecordSet,Virgis.CSVData}._init(RecordSet)
    - Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.AddFeature(Vector3[])
    - Virgis.VirgisLayer{RecordSet,Virgis.CSVData}._addFeature(Vector3[])
    - Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.Draw
    - Virgis.VirgisLayer{RecordSet,Virgis.CSVData}._draw
    - Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.CheckPoint
    - Virgis.VirgisLayer{RecordSet,Virgis.CSVData}._checkpoint
    - Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.Save
    - Virgis.VirgisLayer{RecordSet,Virgis.CSVData}._save
    - Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.Translate(Virgis.MoveArgs)
    - Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.MoveAxis(Virgis.MoveArgs)
    - Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.MoveTo(Virgis.MoveArgs)
    - Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.VertexMove(Virgis.MoveArgs)
    - Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.StartEditSession
    - Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.ExitEditSession(System.Boolean)
    - Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.Selected(Virgis.SelectionTypes)
    - Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.UnSelected(Virgis.SelectionTypes)
    - Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.GetClosest(Vector3,Guid[])
    - Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.GetFeature(Guid)
    - Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.GetId
    - Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.GetMetadata
    - Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.GetFeatureShape
    - Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.SetVisible(System.Boolean)
    - Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.IsVisible
    - Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.SetEditable(System.Boolean)
    - Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.IsEditable
    - Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.Equals(System.Object)
    - Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.GetHashCode
    - Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.Equals(Virgis.VirgisLayer{RecordSet,Virgis.CSVData})
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.DataPlotter.SpherePrefab
      commentId: F:Virgis.DataPlotter.SpherePrefab
      language: CSharp
      name:
        CSharp: SpherePrefab
        VB: SpherePrefab
      nameWithType:
        CSharp: DataPlotter.SpherePrefab
        VB: DataPlotter.SpherePrefab
      qualifiedName:
        CSharp: Virgis.DataPlotter.SpherePrefab
        VB: Virgis.DataPlotter.SpherePrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SpherePrefab
        path: ''
        startLine: 3199
      syntax:
        content:
          CSharp: public GameObject SpherePrefab
          VB: Public SpherePrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.DataPlotter.CubePrefab
      commentId: F:Virgis.DataPlotter.CubePrefab
      language: CSharp
      name:
        CSharp: CubePrefab
        VB: CubePrefab
      nameWithType:
        CSharp: DataPlotter.CubePrefab
        VB: DataPlotter.CubePrefab
      qualifiedName:
        CSharp: Virgis.DataPlotter.CubePrefab
        VB: Virgis.DataPlotter.CubePrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CubePrefab
        path: ''
        startLine: 3200
      syntax:
        content:
          CSharp: public GameObject CubePrefab
          VB: Public CubePrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.DataPlotter.CylinderPrefab
      commentId: F:Virgis.DataPlotter.CylinderPrefab
      language: CSharp
      name:
        CSharp: CylinderPrefab
        VB: CylinderPrefab
      nameWithType:
        CSharp: DataPlotter.CylinderPrefab
        VB: DataPlotter.CylinderPrefab
      qualifiedName:
        CSharp: Virgis.DataPlotter.CylinderPrefab
        VB: Virgis.DataPlotter.CylinderPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CylinderPrefab
        path: ''
        startLine: 3201
      syntax:
        content:
          CSharp: public GameObject CylinderPrefab
          VB: Public CylinderPrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.DataPlotter.LabelPrefab
      commentId: F:Virgis.DataPlotter.LabelPrefab
      language: CSharp
      name:
        CSharp: LabelPrefab
        VB: LabelPrefab
      nameWithType:
        CSharp: DataPlotter.LabelPrefab
        VB: DataPlotter.LabelPrefab
      qualifiedName:
        CSharp: Virgis.DataPlotter.LabelPrefab
        VB: Virgis.DataPlotter.LabelPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: LabelPrefab
        path: ''
        startLine: 3202
      syntax:
        content:
          CSharp: public GameObject LabelPrefab
          VB: Public LabelPrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.DataPlotter._init(RecordSet)
      commentId: M:Virgis.DataPlotter._init(RecordSet)
      language: CSharp
      name:
        CSharp: _init(RecordSet)
        VB: _init(RecordSet)
      nameWithType:
        CSharp: DataPlotter._init(RecordSet)
        VB: DataPlotter._init(RecordSet)
      qualifiedName:
        CSharp: Virgis.DataPlotter._init(RecordSet)
        VB: Virgis.DataPlotter._init(RecordSet)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _init
        path: ''
        startLine: 3210
      syntax:
        content:
          CSharp: protected override Task _init(RecordSet layer)
          VB: Protected Overrides Function _init(layer As RecordSet) As Task
        parameters:
        - id: layer
          type: RecordSet
        return:
          type: Task
      overload: Virgis.DataPlotter._init*
      overridden: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}._init(RecordSet)
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.DataPlotter._checkpoint
      commentId: M:Virgis.DataPlotter._checkpoint
      language: CSharp
      name:
        CSharp: _checkpoint()
        VB: _checkpoint()
      nameWithType:
        CSharp: DataPlotter._checkpoint()
        VB: DataPlotter._checkpoint()
      qualifiedName:
        CSharp: Virgis.DataPlotter._checkpoint()
        VB: Virgis.DataPlotter._checkpoint()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _checkpoint
        path: ''
        startLine: 3217
      syntax:
        content:
          CSharp: protected override void _checkpoint()
          VB: Protected Overrides Sub _checkpoint
      overload: Virgis.DataPlotter._checkpoint*
      overridden: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}._checkpoint
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.DataPlotter._draw
      commentId: M:Virgis.DataPlotter._draw
      language: CSharp
      name:
        CSharp: _draw()
        VB: _draw()
      nameWithType:
        CSharp: DataPlotter._draw()
        VB: DataPlotter._draw()
      qualifiedName:
        CSharp: Virgis.DataPlotter._draw()
        VB: Virgis.DataPlotter._draw()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _draw
        path: ''
        startLine: 3221
      syntax:
        content:
          CSharp: protected override void _draw()
          VB: Protected Overrides Sub _draw
      overload: Virgis.DataPlotter._draw*
      overridden: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}._draw
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.DataPlotter._addFeature(Vector3[])
      commentId: M:Virgis.DataPlotter._addFeature(Vector3[])
      language: CSharp
      name:
        CSharp: _addFeature(Vector3[])
        VB: _addFeature(Vector3())
      nameWithType:
        CSharp: DataPlotter._addFeature(Vector3[])
        VB: DataPlotter._addFeature(Vector3())
      qualifiedName:
        CSharp: Virgis.DataPlotter._addFeature(Vector3[])
        VB: Virgis.DataPlotter._addFeature(Vector3())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _addFeature
        path: ''
        startLine: 3284
      syntax:
        content:
          CSharp: protected override VirgisFeature _addFeature(Vector3[] geometry)
          VB: Protected Overrides Function _addFeature(geometry As Vector3()) As VirgisFeature
        parameters:
        - id: geometry
          type: Vector3[]
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.DataPlotter._addFeature*
      overridden: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}._addFeature(Vector3[])
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.DataPlotter._save
      commentId: M:Virgis.DataPlotter._save
      language: CSharp
      name:
        CSharp: _save()
        VB: _save()
      nameWithType:
        CSharp: DataPlotter._save()
        VB: DataPlotter._save()
      qualifiedName:
        CSharp: Virgis.DataPlotter._save()
        VB: Virgis.DataPlotter._save()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _save
        path: ''
        startLine: 3288
      syntax:
        content:
          CSharp: protected override Task _save()
          VB: Protected Overrides Function _save As Task
        return:
          type: Task
      overload: Virgis.DataPlotter._save*
      overridden: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}._save
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.DataPlotter.MoveAxis(Virgis.MoveArgs)
      commentId: M:Virgis.DataPlotter.MoveAxis(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveAxis(MoveArgs)
        VB: MoveAxis(MoveArgs)
      nameWithType:
        CSharp: DataPlotter.MoveAxis(MoveArgs)
        VB: DataPlotter.MoveAxis(MoveArgs)
      qualifiedName:
        CSharp: Virgis.DataPlotter.MoveAxis(Virgis.MoveArgs)
        VB: Virgis.DataPlotter.MoveAxis(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveAxis
        path: ''
        startLine: 3292
      syntax:
        content:
          CSharp: public override void MoveAxis(MoveArgs args)
          VB: Public Overrides Sub MoveAxis(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.DataPlotter.MoveAxis*
      overridden: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.MoveAxis(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.DataPlotter.Translate(Virgis.MoveArgs)
      commentId: M:Virgis.DataPlotter.Translate(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: Translate(MoveArgs)
        VB: Translate(MoveArgs)
      nameWithType:
        CSharp: DataPlotter.Translate(MoveArgs)
        VB: DataPlotter.Translate(MoveArgs)
      qualifiedName:
        CSharp: Virgis.DataPlotter.Translate(Virgis.MoveArgs)
        VB: Virgis.DataPlotter.Translate(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Translate
        path: ''
        startLine: 3296
      syntax:
        content:
          CSharp: public override void Translate(MoveArgs args)
          VB: Public Overrides Sub Translate(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.DataPlotter.Translate*
      overridden: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.Translate(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.DataPlotter.GetFeatureShape
      commentId: M:Virgis.DataPlotter.GetFeatureShape
      language: CSharp
      name:
        CSharp: GetFeatureShape()
        VB: GetFeatureShape()
      nameWithType:
        CSharp: DataPlotter.GetFeatureShape()
        VB: DataPlotter.GetFeatureShape()
      qualifiedName:
        CSharp: Virgis.DataPlotter.GetFeatureShape()
        VB: Virgis.DataPlotter.GetFeatureShape()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetFeatureShape
        path: ''
        startLine: 3300
      syntax:
        content:
          CSharp: public override GameObject GetFeatureShape()
          VB: Public Overrides Function GetFeatureShape As GameObject
        return:
          type: GameObject
      overload: Virgis.DataPlotter.GetFeatureShape*
      overridden: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.GetFeatureShape
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Virgis.Datapolygon
    commentId: T:Virgis.Datapolygon
    language: CSharp
    name:
      CSharp: Datapolygon
      VB: Datapolygon
    nameWithType:
      CSharp: Datapolygon
      VB: Datapolygon
    qualifiedName:
      CSharp: Virgis.Datapolygon
      VB: Virgis.Datapolygon
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: Datapolygon
      path: ''
      startLine: 3363
    summary: "\nControls an instance of a Polygon ViRGIS component\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Datapolygon : VirgisFeature, IVirgisFeature, IVirgisEntity'
        VB: >-
          Public Class Datapolygon

              Inherits VirgisFeature

              Implements IVirgisFeature, IVirgisEntity
    inheritance:
    - System.Object
    - Virgis.VirgisFeature
    implements:
    - Virgis.IVirgisFeature
    - Virgis.IVirgisEntity
    inheritedMembers:
    - Virgis.VirgisFeature.mainMat
    - Virgis.VirgisFeature.selectedMat
    - Virgis.VirgisFeature.gisId
    - Virgis.VirgisFeature.gisProperties
    - Virgis.VirgisFeature.label
    - Virgis.VirgisFeature.SetMaterial(Material,Material)
    - Virgis.VirgisFeature.StartEditSession
    - Virgis.VirgisFeature.ExitEditSession(System.Boolean)
    - Virgis.VirgisFeature.GetClosest(Vector3,Guid[])
    - Virgis.VirgisFeature.GetGeometry``1
    - Virgis.VirgisFeature.GetId
    - Virgis.VirgisFeature.GetMetadata
    - Virgis.VirgisFeature.Equals(System.Object)
    - Virgis.VirgisFeature.GetHashCode
    - Virgis.VirgisFeature.Equals(Virgis.VirgisFeature)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.Datapolygon.VertexTable
      commentId: F:Virgis.Datapolygon.VertexTable
      language: CSharp
      name:
        CSharp: VertexTable
        VB: VertexTable
      nameWithType:
        CSharp: Datapolygon.VertexTable
        VB: Datapolygon.VertexTable
      qualifiedName:
        CSharp: Virgis.Datapolygon.VertexTable
        VB: Virgis.Datapolygon.VertexTable
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: VertexTable
        path: ''
        startLine: 3367
      syntax:
        content:
          CSharp: public List<VertexLookup> VertexTable
          VB: Public VertexTable As List(Of VertexLookup)
        return:
          type: List{Virgis.VertexLookup}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.Datapolygon.Polygon
      commentId: F:Virgis.Datapolygon.Polygon
      language: CSharp
      name:
        CSharp: Polygon
        VB: Polygon
      nameWithType:
        CSharp: Datapolygon.Polygon
        VB: Datapolygon.Polygon
      qualifiedName:
        CSharp: Virgis.Datapolygon.Polygon
        VB: Virgis.Datapolygon.Polygon
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Polygon
        path: ''
        startLine: 3368
      syntax:
        content:
          CSharp: public List<Dataline> Polygon
          VB: Public Polygon As List(Of Dataline)
        return:
          type: List{Virgis.Dataline}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.Datapolygon.Selected(Virgis.SelectionTypes)
      commentId: M:Virgis.Datapolygon.Selected(Virgis.SelectionTypes)
      language: CSharp
      name:
        CSharp: Selected(SelectionTypes)
        VB: Selected(SelectionTypes)
      nameWithType:
        CSharp: Datapolygon.Selected(SelectionTypes)
        VB: Datapolygon.Selected(SelectionTypes)
      qualifiedName:
        CSharp: Virgis.Datapolygon.Selected(Virgis.SelectionTypes)
        VB: Virgis.Datapolygon.Selected(Virgis.SelectionTypes)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Selected
        path: ''
        startLine: 3371
      syntax:
        content:
          CSharp: public override void Selected(SelectionTypes button)
          VB: Public Overrides Sub Selected(button As SelectionTypes)
        parameters:
        - id: button
          type: Virgis.SelectionTypes
      overload: Virgis.Datapolygon.Selected*
      overridden: Virgis.VirgisFeature.Selected(Virgis.SelectionTypes)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Datapolygon.UnSelected(Virgis.SelectionTypes)
      commentId: M:Virgis.Datapolygon.UnSelected(Virgis.SelectionTypes)
      language: CSharp
      name:
        CSharp: UnSelected(SelectionTypes)
        VB: UnSelected(SelectionTypes)
      nameWithType:
        CSharp: Datapolygon.UnSelected(SelectionTypes)
        VB: Datapolygon.UnSelected(SelectionTypes)
      qualifiedName:
        CSharp: Virgis.Datapolygon.UnSelected(Virgis.SelectionTypes)
        VB: Virgis.Datapolygon.UnSelected(Virgis.SelectionTypes)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: UnSelected
        path: ''
        startLine: 3379
      syntax:
        content:
          CSharp: public override void UnSelected(SelectionTypes button)
          VB: Public Overrides Sub UnSelected(button As SelectionTypes)
        parameters:
        - id: button
          type: Virgis.SelectionTypes
      overload: Virgis.Datapolygon.UnSelected*
      overridden: Virgis.VirgisFeature.UnSelected(Virgis.SelectionTypes)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Datapolygon.VertexMove(Virgis.MoveArgs)
      commentId: M:Virgis.Datapolygon.VertexMove(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: VertexMove(MoveArgs)
        VB: VertexMove(MoveArgs)
      nameWithType:
        CSharp: Datapolygon.VertexMove(MoveArgs)
        VB: Datapolygon.VertexMove(MoveArgs)
      qualifiedName:
        CSharp: Virgis.Datapolygon.VertexMove(Virgis.MoveArgs)
        VB: Virgis.Datapolygon.VertexMove(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: VertexMove
        path: ''
        startLine: 3386
      syntax:
        content:
          CSharp: public override void VertexMove(MoveArgs data)
          VB: Public Overrides Sub VertexMove(data As MoveArgs)
        parameters:
        - id: data
          type: Virgis.MoveArgs
      overload: Virgis.Datapolygon.VertexMove*
      overridden: Virgis.VirgisFeature.VertexMove(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Datapolygon.Translate(Virgis.MoveArgs)
      commentId: M:Virgis.Datapolygon.Translate(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: Translate(MoveArgs)
        VB: Translate(MoveArgs)
      nameWithType:
        CSharp: Datapolygon.Translate(MoveArgs)
        VB: Datapolygon.Translate(MoveArgs)
      qualifiedName:
        CSharp: Virgis.Datapolygon.Translate(Virgis.MoveArgs)
        VB: Virgis.Datapolygon.Translate(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Translate
        path: ''
        startLine: 3392
      syntax:
        content:
          CSharp: public override void Translate(MoveArgs args)
          VB: Public Overrides Sub Translate(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.Datapolygon.Translate*
      overridden: Virgis.VirgisFeature.Translate(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Datapolygon.MoveAxis(Virgis.MoveArgs)
      commentId: M:Virgis.Datapolygon.MoveAxis(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveAxis(MoveArgs)
        VB: MoveAxis(MoveArgs)
      nameWithType:
        CSharp: Datapolygon.MoveAxis(MoveArgs)
        VB: Datapolygon.MoveAxis(MoveArgs)
      qualifiedName:
        CSharp: Virgis.Datapolygon.MoveAxis(Virgis.MoveArgs)
        VB: Virgis.Datapolygon.MoveAxis(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveAxis
        path: ''
        startLine: 3400
      syntax:
        content:
          CSharp: public override void MoveAxis(MoveArgs args)
          VB: Public Overrides Sub MoveAxis(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.Datapolygon.MoveAxis*
      overridden: Virgis.VirgisFeature.MoveAxis(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Datapolygon.MoveTo(Virgis.MoveArgs)
      commentId: M:Virgis.Datapolygon.MoveTo(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveTo(MoveArgs)
        VB: MoveTo(MoveArgs)
      nameWithType:
        CSharp: Datapolygon.MoveTo(MoveArgs)
        VB: Datapolygon.MoveTo(MoveArgs)
      qualifiedName:
        CSharp: Virgis.Datapolygon.MoveTo(Virgis.MoveArgs)
        VB: Virgis.Datapolygon.MoveTo(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveTo
        path: ''
        startLine: 3417
      syntax:
        content:
          CSharp: public override void MoveTo(MoveArgs args)
          VB: Public Overrides Sub MoveTo(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.Datapolygon.MoveTo*
      overridden: Virgis.VirgisFeature.MoveTo(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Datapolygon.Draw(List{Virgis.Dataline},Material)
      commentId: M:Virgis.Datapolygon.Draw(List{Virgis.Dataline},Material)
      language: CSharp
      name:
        CSharp: Draw(List<Dataline>, Material)
        VB: Draw(List(Of Dataline), Material)
      nameWithType:
        CSharp: Datapolygon.Draw(List<Dataline>, Material)
        VB: Datapolygon.Draw(List(Of Dataline), Material)
      qualifiedName:
        CSharp: Virgis.Datapolygon.Draw(List<Virgis.Dataline>, Material)
        VB: Virgis.Datapolygon.Draw(List(Of Virgis.Dataline), Material)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Draw
        path: ''
        startLine: 3429
      summary: "\nCalled to draw the Polygon based upon the \n"
      example: []
      syntax:
        content:
          CSharp: public GameObject Draw(List<Dataline> polygon, Material mat = null)
          VB: Public Function Draw(polygon As List(Of Dataline), mat As Material = Nothing) As GameObject
        parameters:
        - id: polygon
          type: List{Virgis.Dataline}
        - id: mat
          type: Material
          description: Material to be used
        return:
          type: GameObject
          description: ''
      overload: Virgis.Datapolygon.Draw*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.Datapolygon.ShapeMoveVertex(Virgis.MoveArgs)
      commentId: M:Virgis.Datapolygon.ShapeMoveVertex(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: ShapeMoveVertex(MoveArgs)
        VB: ShapeMoveVertex(MoveArgs)
      nameWithType:
        CSharp: Datapolygon.ShapeMoveVertex(MoveArgs)
        VB: Datapolygon.ShapeMoveVertex(MoveArgs)
      qualifiedName:
        CSharp: Virgis.Datapolygon.ShapeMoveVertex(Virgis.MoveArgs)
        VB: Virgis.Datapolygon.ShapeMoveVertex(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: ShapeMoveVertex
        path: ''
        startLine: 3507
      summary: "\nMove a vertex of the polygon and recreate the mesh\n"
      example: []
      syntax:
        content:
          CSharp: public void ShapeMoveVertex(MoveArgs data)
          VB: Public Sub ShapeMoveVertex(data As MoveArgs)
        parameters:
        - id: data
          type: Virgis.MoveArgs
          description: MoveArgs
      overload: Virgis.Datapolygon.ShapeMoveVertex*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.Datapolygon.AddVertex(Vector3)
      commentId: M:Virgis.Datapolygon.AddVertex(Vector3)
      language: CSharp
      name:
        CSharp: AddVertex(Vector3)
        VB: AddVertex(Vector3)
      nameWithType:
        CSharp: Datapolygon.AddVertex(Vector3)
        VB: Datapolygon.AddVertex(Vector3)
      qualifiedName:
        CSharp: Virgis.Datapolygon.AddVertex(Vector3)
        VB: Virgis.Datapolygon.AddVertex(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: AddVertex
        path: ''
        startLine: 3517
      syntax:
        content:
          CSharp: public override VirgisFeature AddVertex(Vector3 position)
          VB: Public Overrides Function AddVertex(position As Vector3) As VirgisFeature
        parameters:
        - id: position
          type: Vector3
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.Datapolygon.AddVertex*
      overridden: Virgis.VirgisFeature.AddVertex(Vector3)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Datapolygon.RemoveVertex(Virgis.VirgisFeature)
      commentId: M:Virgis.Datapolygon.RemoveVertex(Virgis.VirgisFeature)
      language: CSharp
      name:
        CSharp: RemoveVertex(VirgisFeature)
        VB: RemoveVertex(VirgisFeature)
      nameWithType:
        CSharp: Datapolygon.RemoveVertex(VirgisFeature)
        VB: Datapolygon.RemoveVertex(VirgisFeature)
      qualifiedName:
        CSharp: Virgis.Datapolygon.RemoveVertex(Virgis.VirgisFeature)
        VB: Virgis.Datapolygon.RemoveVertex(Virgis.VirgisFeature)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: RemoveVertex
        path: ''
        startLine: 3522
      syntax:
        content:
          CSharp: public override void RemoveVertex(VirgisFeature vertex)
          VB: Public Overrides Sub RemoveVertex(vertex As VirgisFeature)
        parameters:
        - id: vertex
          type: Virgis.VirgisFeature
      overload: Virgis.Datapolygon.RemoveVertex*
      overridden: Virgis.VirgisFeature.RemoveVertex(Virgis.VirgisFeature)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Datapolygon.GetVertexes
      commentId: M:Virgis.Datapolygon.GetVertexes
      language: CSharp
      name:
        CSharp: GetVertexes()
        VB: GetVertexes()
      nameWithType:
        CSharp: Datapolygon.GetVertexes()
        VB: Datapolygon.GetVertexes()
      qualifiedName:
        CSharp: Virgis.Datapolygon.GetVertexes()
        VB: Virgis.Datapolygon.GetVertexes()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetVertexes
        path: ''
        startLine: 3607
      summary: "\nGet an array of the Datapoint components for the vertexes\n"
      example: []
      syntax:
        content:
          CSharp: public Datapoint[] GetVertexes()
          VB: Public Function GetVertexes As Datapoint()
        return:
          type: Virgis.Datapoint[]
          description: Datapoint[]
      overload: Virgis.Datapolygon.GetVertexes*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.Datapoint
    commentId: T:Virgis.Datapoint
    language: CSharp
    name:
      CSharp: Datapoint
      VB: Datapoint
    nameWithType:
      CSharp: Datapoint
      VB: Datapoint
    qualifiedName:
      CSharp: Virgis.Datapoint
      VB: Virgis.Datapoint
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: Datapoint
      path: ''
      startLine: 3631
    summary: "\nControls an instance of a data pointor handle\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Datapoint : VirgisFeature, IVirgisFeature, IVirgisEntity'
        VB: >-
          Public Class Datapoint

              Inherits VirgisFeature

              Implements IVirgisFeature, IVirgisEntity
    inheritance:
    - System.Object
    - Virgis.VirgisFeature
    implements:
    - Virgis.IVirgisFeature
    - Virgis.IVirgisEntity
    inheritedMembers:
    - Virgis.VirgisFeature.mainMat
    - Virgis.VirgisFeature.selectedMat
    - Virgis.VirgisFeature.gisId
    - Virgis.VirgisFeature.gisProperties
    - Virgis.VirgisFeature.label
    - Virgis.VirgisFeature.StartEditSession
    - Virgis.VirgisFeature.ExitEditSession(System.Boolean)
    - Virgis.VirgisFeature.Translate(Virgis.MoveArgs)
    - Virgis.VirgisFeature.VertexMove(Virgis.MoveArgs)
    - Virgis.VirgisFeature.AddVertex(Vector3)
    - Virgis.VirgisFeature.RemoveVertex(Virgis.VirgisFeature)
    - Virgis.VirgisFeature.GetId
    - Virgis.VirgisFeature.GetMetadata
    - Virgis.VirgisFeature.Equals(System.Object)
    - Virgis.VirgisFeature.GetHashCode
    - Virgis.VirgisFeature.Equals(Virgis.VirgisFeature)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.Datapoint.Selected(Virgis.SelectionTypes)
      commentId: M:Virgis.Datapoint.Selected(Virgis.SelectionTypes)
      language: CSharp
      name:
        CSharp: Selected(SelectionTypes)
        VB: Selected(SelectionTypes)
      nameWithType:
        CSharp: Datapoint.Selected(SelectionTypes)
        VB: Datapoint.Selected(SelectionTypes)
      qualifiedName:
        CSharp: Virgis.Datapoint.Selected(Virgis.SelectionTypes)
        VB: Virgis.Datapoint.Selected(Virgis.SelectionTypes)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Selected
        path: ''
        startLine: 3649
      syntax:
        content:
          CSharp: public override void Selected(SelectionTypes button)
          VB: Public Overrides Sub Selected(button As SelectionTypes)
        parameters:
        - id: button
          type: Virgis.SelectionTypes
      overload: Virgis.Datapoint.Selected*
      overridden: Virgis.VirgisFeature.Selected(Virgis.SelectionTypes)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Datapoint.UnSelected(Virgis.SelectionTypes)
      commentId: M:Virgis.Datapoint.UnSelected(Virgis.SelectionTypes)
      language: CSharp
      name:
        CSharp: UnSelected(SelectionTypes)
        VB: UnSelected(SelectionTypes)
      nameWithType:
        CSharp: Datapoint.UnSelected(SelectionTypes)
        VB: Datapoint.UnSelected(SelectionTypes)
      qualifiedName:
        CSharp: Virgis.Datapoint.UnSelected(Virgis.SelectionTypes)
        VB: Virgis.Datapoint.UnSelected(Virgis.SelectionTypes)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: UnSelected
        path: ''
        startLine: 3657
      syntax:
        content:
          CSharp: public override void UnSelected(SelectionTypes button)
          VB: Public Overrides Sub UnSelected(button As SelectionTypes)
        parameters:
        - id: button
          type: Virgis.SelectionTypes
      overload: Virgis.Datapoint.UnSelected*
      overridden: Virgis.VirgisFeature.UnSelected(Virgis.SelectionTypes)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Datapoint.SetMaterial(Material,Material)
      commentId: M:Virgis.Datapoint.SetMaterial(Material,Material)
      language: CSharp
      name:
        CSharp: SetMaterial(Material, Material)
        VB: SetMaterial(Material, Material)
      nameWithType:
        CSharp: Datapoint.SetMaterial(Material, Material)
        VB: Datapoint.SetMaterial(Material, Material)
      qualifiedName:
        CSharp: Virgis.Datapoint.SetMaterial(Material, Material)
        VB: Virgis.Datapoint.SetMaterial(Material, Material)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SetMaterial
        path: ''
        startLine: 3689
      syntax:
        content:
          CSharp: public override void SetMaterial(Material mainMat, Material selectedMat)
          VB: Public Overrides Sub SetMaterial(mainMat As Material, selectedMat As Material)
        parameters:
        - id: mainMat
          type: Material
        - id: selectedMat
          type: Material
      overload: Virgis.Datapoint.SetMaterial*
      overridden: Virgis.VirgisFeature.SetMaterial(Material,Material)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Datapoint.MoveTo(Virgis.MoveArgs)
      commentId: M:Virgis.Datapoint.MoveTo(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveTo(MoveArgs)
        VB: MoveTo(MoveArgs)
      nameWithType:
        CSharp: Datapoint.MoveTo(MoveArgs)
        VB: Datapoint.MoveTo(MoveArgs)
      qualifiedName:
        CSharp: Virgis.Datapoint.MoveTo(Virgis.MoveArgs)
        VB: Virgis.Datapoint.MoveTo(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveTo
        path: ''
        startLine: 3701
      syntax:
        content:
          CSharp: public override void MoveTo(MoveArgs args)
          VB: Public Overrides Sub MoveTo(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.Datapoint.MoveTo*
      overridden: Virgis.VirgisFeature.MoveTo(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Datapoint.MoveAxis(Virgis.MoveArgs)
      commentId: M:Virgis.Datapoint.MoveAxis(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveAxis(MoveArgs)
        VB: MoveAxis(MoveArgs)
      nameWithType:
        CSharp: Datapoint.MoveAxis(MoveArgs)
        VB: Datapoint.MoveAxis(MoveArgs)
      qualifiedName:
        CSharp: Virgis.Datapoint.MoveAxis(Virgis.MoveArgs)
        VB: Virgis.Datapoint.MoveAxis(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveAxis
        path: ''
        startLine: 3729
      syntax:
        content:
          CSharp: public override void MoveAxis(MoveArgs args)
          VB: Public Overrides Sub MoveAxis(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.Datapoint.MoveAxis*
      overridden: Virgis.VirgisFeature.MoveAxis(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Datapoint.GetClosest(Vector3,Guid[])
      commentId: M:Virgis.Datapoint.GetClosest(Vector3,Guid[])
      language: CSharp
      name:
        CSharp: GetClosest(Vector3, Guid[])
        VB: GetClosest(Vector3, Guid())
      nameWithType:
        CSharp: Datapoint.GetClosest(Vector3, Guid[])
        VB: Datapoint.GetClosest(Vector3, Guid())
      qualifiedName:
        CSharp: Virgis.Datapoint.GetClosest(Vector3, Guid[])
        VB: Virgis.Datapoint.GetClosest(Vector3, Guid())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetClosest
        path: ''
        startLine: 3736
      syntax:
        content:
          CSharp: public override VirgisFeature GetClosest(Vector3 coords, Guid[] excludes)
          VB: Public Overrides Function GetClosest(coords As Vector3, excludes As Guid()) As VirgisFeature
        parameters:
        - id: coords
          type: Vector3
        - id: excludes
          type: Guid[]
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.Datapoint.GetClosest*
      overridden: Virgis.VirgisFeature.GetClosest(Vector3,Guid[])
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Datapoint.Delete
      commentId: M:Virgis.Datapoint.Delete
      language: CSharp
      name:
        CSharp: Delete()
        VB: Delete()
      nameWithType:
        CSharp: Datapoint.Delete()
        VB: Datapoint.Delete()
      qualifiedName:
        CSharp: Virgis.Datapoint.Delete()
        VB: Virgis.Datapoint.Delete()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Delete
        path: ''
        startLine: 3740
      syntax:
        content:
          CSharp: public void Delete()
          VB: Public Sub Delete
      overload: Virgis.Datapoint.Delete*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.Datapoint.GetGeometry``1
      commentId: M:Virgis.Datapoint.GetGeometry``1
      language: CSharp
      name:
        CSharp: GetGeometry<T>()
        VB: GetGeometry(Of T)()
      nameWithType:
        CSharp: Datapoint.GetGeometry<T>()
        VB: Datapoint.GetGeometry(Of T)()
      qualifiedName:
        CSharp: Virgis.Datapoint.GetGeometry<T>()
        VB: Virgis.Datapoint.GetGeometry(Of T)()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetGeometry
        path: ''
        startLine: 3744
      syntax:
        content:
          CSharp: public override T GetGeometry<T>()
          VB: Public Overrides Function GetGeometry(Of T) As T
        typeParameters:
        - id: T
        return:
          type: '{T}'
      overload: Virgis.Datapoint.GetGeometry*
      overridden: Virgis.VirgisFeature.GetGeometry``1
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Virgis.LineSegment
    commentId: T:Virgis.LineSegment
    language: CSharp
    name:
      CSharp: LineSegment
      VB: LineSegment
    nameWithType:
      CSharp: LineSegment
      VB: LineSegment
    qualifiedName:
      CSharp: Virgis.LineSegment
      VB: Virgis.LineSegment
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: LineSegment
      path: ''
      startLine: 3770
    summary: "\nControls an instance of a line segment\n"
    example: []
    syntax:
      content:
        CSharp: 'public class LineSegment : VirgisFeature, IVirgisFeature, IVirgisEntity'
        VB: >-
          Public Class LineSegment

              Inherits VirgisFeature

              Implements IVirgisFeature, IVirgisEntity
    inheritance:
    - System.Object
    - Virgis.VirgisFeature
    implements:
    - Virgis.IVirgisFeature
    - Virgis.IVirgisEntity
    inheritedMembers:
    - Virgis.VirgisFeature.mainMat
    - Virgis.VirgisFeature.selectedMat
    - Virgis.VirgisFeature.gisId
    - Virgis.VirgisFeature.gisProperties
    - Virgis.VirgisFeature.label
    - Virgis.VirgisFeature.StartEditSession
    - Virgis.VirgisFeature.ExitEditSession(System.Boolean)
    - Virgis.VirgisFeature.Translate(Virgis.MoveArgs)
    - Virgis.VirgisFeature.VertexMove(Virgis.MoveArgs)
    - Virgis.VirgisFeature.GetClosest(Vector3,Guid[])
    - Virgis.VirgisFeature.RemoveVertex(Virgis.VirgisFeature)
    - Virgis.VirgisFeature.GetGeometry``1
    - Virgis.VirgisFeature.GetId
    - Virgis.VirgisFeature.GetMetadata
    - Virgis.VirgisFeature.Equals(System.Object)
    - Virgis.VirgisFeature.GetHashCode
    - Virgis.VirgisFeature.Equals(Virgis.VirgisFeature)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.LineSegment.vStart
      commentId: F:Virgis.LineSegment.vStart
      language: CSharp
      name:
        CSharp: vStart
        VB: vStart
      nameWithType:
        CSharp: LineSegment.vStart
        VB: LineSegment.vStart
      qualifiedName:
        CSharp: Virgis.LineSegment.vStart
        VB: Virgis.LineSegment.vStart
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: vStart
        path: ''
        startLine: 3777
      syntax:
        content:
          CSharp: public int vStart
          VB: Public vStart As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LineSegment.vEnd
      commentId: F:Virgis.LineSegment.vEnd
      language: CSharp
      name:
        CSharp: vEnd
        VB: vEnd
      nameWithType:
        CSharp: LineSegment.vEnd
        VB: LineSegment.vEnd
      qualifiedName:
        CSharp: Virgis.LineSegment.vEnd
        VB: Virgis.LineSegment.vEnd
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: vEnd
        path: ''
        startLine: 3778
      syntax:
        content:
          CSharp: public int vEnd
          VB: Public vEnd As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LineSegment.Draw(Vector3,Vector3,System.Int32,System.Int32,System.Single)
      commentId: M:Virgis.LineSegment.Draw(Vector3,Vector3,System.Int32,System.Int32,System.Single)
      language: CSharp
      name:
        CSharp: Draw(Vector3, Vector3, Int32, Int32, Single)
        VB: Draw(Vector3, Vector3, Int32, Int32, Single)
      nameWithType:
        CSharp: LineSegment.Draw(Vector3, Vector3, Int32, Int32, Single)
        VB: LineSegment.Draw(Vector3, Vector3, Int32, Int32, Single)
      qualifiedName:
        CSharp: Virgis.LineSegment.Draw(Vector3, Vector3, System.Int32, System.Int32, System.Single)
        VB: Virgis.LineSegment.Draw(Vector3, Vector3, System.Int32, System.Int32, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Draw
        path: ''
        startLine: 3791
      summary: "\nCalled to draw the line Segment \n"
      example: []
      syntax:
        content:
          CSharp: public void Draw(Vector3 from, Vector3 to, int vertStart, int vertEnd, float dia)
          VB: Public Sub Draw(from As Vector3, to As Vector3, vertStart As Integer, vertEnd As Integer, dia As Single)
        parameters:
        - id: from
          type: Vector3
          description: starting point of the line segment in worldspace coords
        - id: to
          type: Vector3
          description: end point for the line segment in worldspace coordinates
        - id: vertStart
          type: System.Int32
          description: vertex ID for the vertex at the start of the line segment
        - id: vertEnd
          type: System.Int32
          description: 'vertex ID for the vertex at the end of the line segment '
        - id: dia
          type: System.Single
          description: Diamtere of the line segement in Map.local units
      overload: Virgis.LineSegment.Draw*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LineSegment.Selected(Virgis.SelectionTypes)
      commentId: M:Virgis.LineSegment.Selected(Virgis.SelectionTypes)
      language: CSharp
      name:
        CSharp: Selected(SelectionTypes)
        VB: Selected(SelectionTypes)
      nameWithType:
        CSharp: LineSegment.Selected(SelectionTypes)
        VB: LineSegment.Selected(SelectionTypes)
      qualifiedName:
        CSharp: Virgis.LineSegment.Selected(Virgis.SelectionTypes)
        VB: Virgis.LineSegment.Selected(Virgis.SelectionTypes)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Selected
        path: ''
        startLine: 3801
      syntax:
        content:
          CSharp: public override void Selected(SelectionTypes button)
          VB: Public Overrides Sub Selected(button As SelectionTypes)
        parameters:
        - id: button
          type: Virgis.SelectionTypes
      overload: Virgis.LineSegment.Selected*
      overridden: Virgis.VirgisFeature.Selected(Virgis.SelectionTypes)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.LineSegment.UnSelected(Virgis.SelectionTypes)
      commentId: M:Virgis.LineSegment.UnSelected(Virgis.SelectionTypes)
      language: CSharp
      name:
        CSharp: UnSelected(SelectionTypes)
        VB: UnSelected(SelectionTypes)
      nameWithType:
        CSharp: LineSegment.UnSelected(SelectionTypes)
        VB: LineSegment.UnSelected(SelectionTypes)
      qualifiedName:
        CSharp: Virgis.LineSegment.UnSelected(Virgis.SelectionTypes)
        VB: Virgis.LineSegment.UnSelected(Virgis.SelectionTypes)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: UnSelected
        path: ''
        startLine: 3809
      syntax:
        content:
          CSharp: public override void UnSelected(SelectionTypes button)
          VB: Public Overrides Sub UnSelected(button As SelectionTypes)
        parameters:
        - id: button
          type: Virgis.SelectionTypes
      overload: Virgis.LineSegment.UnSelected*
      overridden: Virgis.VirgisFeature.UnSelected(Virgis.SelectionTypes)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.LineSegment.SetMaterial(Material,Material)
      commentId: M:Virgis.LineSegment.SetMaterial(Material,Material)
      language: CSharp
      name:
        CSharp: SetMaterial(Material, Material)
        VB: SetMaterial(Material, Material)
      nameWithType:
        CSharp: LineSegment.SetMaterial(Material, Material)
        VB: LineSegment.SetMaterial(Material, Material)
      qualifiedName:
        CSharp: Virgis.LineSegment.SetMaterial(Material, Material)
        VB: Virgis.LineSegment.SetMaterial(Material, Material)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SetMaterial
        path: ''
        startLine: 3819
      syntax:
        content:
          CSharp: public override void SetMaterial(Material mainMat, Material selectedMat)
          VB: Public Overrides Sub SetMaterial(mainMat As Material, selectedMat As Material)
        parameters:
        - id: mainMat
          type: Material
        - id: selectedMat
          type: Material
      overload: Virgis.LineSegment.SetMaterial*
      overridden: Virgis.VirgisFeature.SetMaterial(Material,Material)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.LineSegment.MoveStart(Vector3)
      commentId: M:Virgis.LineSegment.MoveStart(Vector3)
      language: CSharp
      name:
        CSharp: MoveStart(Vector3)
        VB: MoveStart(Vector3)
      nameWithType:
        CSharp: LineSegment.MoveStart(Vector3)
        VB: LineSegment.MoveStart(Vector3)
      qualifiedName:
        CSharp: Virgis.LineSegment.MoveStart(Vector3)
        VB: Virgis.LineSegment.MoveStart(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveStart
        path: ''
        startLine: 3829
      syntax:
        content:
          CSharp: public void MoveStart(Vector3 newStart)
          VB: Public Sub MoveStart(newStart As Vector3)
        parameters:
        - id: newStart
          type: Vector3
      overload: Virgis.LineSegment.MoveStart*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LineSegment.MoveEnd(Vector3)
      commentId: M:Virgis.LineSegment.MoveEnd(Vector3)
      language: CSharp
      name:
        CSharp: MoveEnd(Vector3)
        VB: MoveEnd(Vector3)
      nameWithType:
        CSharp: LineSegment.MoveEnd(Vector3)
        VB: LineSegment.MoveEnd(Vector3)
      qualifiedName:
        CSharp: Virgis.LineSegment.MoveEnd(Vector3)
        VB: Virgis.LineSegment.MoveEnd(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveEnd
        path: ''
        startLine: 3836
      syntax:
        content:
          CSharp: public void MoveEnd(Vector3 newEnd)
          VB: Public Sub MoveEnd(newEnd As Vector3)
        parameters:
        - id: newEnd
          type: Vector3
      overload: Virgis.LineSegment.MoveEnd*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LineSegment.MoveAxis(Virgis.MoveArgs)
      commentId: M:Virgis.LineSegment.MoveAxis(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveAxis(MoveArgs)
        VB: MoveAxis(MoveArgs)
      nameWithType:
        CSharp: LineSegment.MoveAxis(MoveArgs)
        VB: LineSegment.MoveAxis(MoveArgs)
      qualifiedName:
        CSharp: Virgis.LineSegment.MoveAxis(Virgis.MoveArgs)
        VB: Virgis.LineSegment.MoveAxis(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveAxis
        path: ''
        startLine: 3852
      syntax:
        content:
          CSharp: public override void MoveAxis(MoveArgs args)
          VB: Public Overrides Sub MoveAxis(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.LineSegment.MoveAxis*
      overridden: Virgis.VirgisFeature.MoveAxis(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.LineSegment.MoveTo(Virgis.MoveArgs)
      commentId: M:Virgis.LineSegment.MoveTo(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveTo(MoveArgs)
        VB: MoveTo(MoveArgs)
      nameWithType:
        CSharp: LineSegment.MoveTo(MoveArgs)
        VB: LineSegment.MoveTo(MoveArgs)
      qualifiedName:
        CSharp: Virgis.LineSegment.MoveTo(Virgis.MoveArgs)
        VB: Virgis.LineSegment.MoveTo(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveTo
        path: ''
        startLine: 3857
      syntax:
        content:
          CSharp: public override void MoveTo(MoveArgs args)
          VB: Public Overrides Sub MoveTo(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.LineSegment.MoveTo*
      overridden: Virgis.VirgisFeature.MoveTo(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.LineSegment.AddVertex(Vector3)
      commentId: M:Virgis.LineSegment.AddVertex(Vector3)
      language: CSharp
      name:
        CSharp: AddVertex(Vector3)
        VB: AddVertex(Vector3)
      nameWithType:
        CSharp: LineSegment.AddVertex(Vector3)
        VB: LineSegment.AddVertex(Vector3)
      qualifiedName:
        CSharp: Virgis.LineSegment.AddVertex(Vector3)
        VB: Virgis.LineSegment.AddVertex(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: AddVertex
        path: ''
        startLine: 3862
      syntax:
        content:
          CSharp: public override VirgisFeature AddVertex(Vector3 position)
          VB: Public Overrides Function AddVertex(position As Vector3) As VirgisFeature
        parameters:
        - id: position
          type: Vector3
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.LineSegment.AddVertex*
      overridden: Virgis.VirgisFeature.AddVertex(Vector3)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.LineSegment.Delete
      commentId: M:Virgis.LineSegment.Delete
      language: CSharp
      name:
        CSharp: Delete()
        VB: Delete()
      nameWithType:
        CSharp: LineSegment.Delete()
        VB: LineSegment.Delete()
      qualifiedName:
        CSharp: Virgis.LineSegment.Delete()
        VB: Virgis.LineSegment.Delete()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Delete
        path: ''
        startLine: 3867
      syntax:
        content:
          CSharp: public void Delete()
          VB: Public Sub Delete
      overload: Virgis.LineSegment.Delete*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.Dataline
    commentId: T:Virgis.Dataline
    language: CSharp
    name:
      CSharp: Dataline
      VB: Dataline
    nameWithType:
      CSharp: Dataline
      VB: Dataline
    qualifiedName:
      CSharp: Virgis.Dataline
      VB: Virgis.Dataline
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: Dataline
      path: ''
      startLine: 3891
    summary: "\nControls and Instance of a Line Component\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Dataline : VirgisFeature, IVirgisFeature, IVirgisEntity'
        VB: >-
          Public Class Dataline

              Inherits VirgisFeature

              Implements IVirgisFeature, IVirgisEntity
    inheritance:
    - System.Object
    - Virgis.VirgisFeature
    implements:
    - Virgis.IVirgisFeature
    - Virgis.IVirgisEntity
    inheritedMembers:
    - Virgis.VirgisFeature.mainMat
    - Virgis.VirgisFeature.selectedMat
    - Virgis.VirgisFeature.gisId
    - Virgis.VirgisFeature.gisProperties
    - Virgis.VirgisFeature.label
    - Virgis.VirgisFeature.SetMaterial(Material,Material)
    - Virgis.VirgisFeature.StartEditSession
    - Virgis.VirgisFeature.ExitEditSession(System.Boolean)
    - Virgis.VirgisFeature.GetClosest(Vector3,Guid[])
    - Virgis.VirgisFeature.GetGeometry``1
    - Virgis.VirgisFeature.GetId
    - Virgis.VirgisFeature.GetMetadata
    - Virgis.VirgisFeature.Equals(System.Object)
    - Virgis.VirgisFeature.GetHashCode
    - Virgis.VirgisFeature.Equals(Virgis.VirgisFeature)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.Dataline.CylinderObject
      commentId: F:Virgis.Dataline.CylinderObject
      language: CSharp
      name:
        CSharp: CylinderObject
        VB: CylinderObject
      nameWithType:
        CSharp: Dataline.CylinderObject
        VB: Dataline.CylinderObject
      qualifiedName:
        CSharp: Virgis.Dataline.CylinderObject
        VB: Virgis.Dataline.CylinderObject
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CylinderObject
        path: ''
        startLine: 3893
      syntax:
        content:
          CSharp: public GameObject CylinderObject
          VB: Public CylinderObject As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.Dataline.VertexTable
      commentId: F:Virgis.Dataline.VertexTable
      language: CSharp
      name:
        CSharp: VertexTable
        VB: VertexTable
      nameWithType:
        CSharp: Dataline.VertexTable
        VB: Dataline.VertexTable
      qualifiedName:
        CSharp: Virgis.Dataline.VertexTable
        VB: Virgis.Dataline.VertexTable
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: VertexTable
        path: ''
        startLine: 3898
      syntax:
        content:
          CSharp: public List<VertexLookup> VertexTable
          VB: Public VertexTable As List(Of VertexLookup)
        return:
          type: List{Virgis.VertexLookup}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.Dataline.VertexMove(Virgis.MoveArgs)
      commentId: M:Virgis.Dataline.VertexMove(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: VertexMove(MoveArgs)
        VB: VertexMove(MoveArgs)
      nameWithType:
        CSharp: Dataline.VertexMove(MoveArgs)
        VB: Dataline.VertexMove(MoveArgs)
      qualifiedName:
        CSharp: Virgis.Dataline.VertexMove(Virgis.MoveArgs)
        VB: Virgis.Dataline.VertexMove(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: VertexMove
        path: ''
        startLine: 3919
      syntax:
        content:
          CSharp: public override void VertexMove(MoveArgs data)
          VB: Public Overrides Sub VertexMove(data As MoveArgs)
        parameters:
        - id: data
          type: Virgis.MoveArgs
      overload: Virgis.Dataline.VertexMove*
      overridden: Virgis.VirgisFeature.VertexMove(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Dataline.MoveAxis(Virgis.MoveArgs)
      commentId: M:Virgis.Dataline.MoveAxis(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveAxis(MoveArgs)
        VB: MoveAxis(MoveArgs)
      nameWithType:
        CSharp: Dataline.MoveAxis(MoveArgs)
        VB: Dataline.MoveAxis(MoveArgs)
      qualifiedName:
        CSharp: Virgis.Dataline.MoveAxis(Virgis.MoveArgs)
        VB: Virgis.Dataline.MoveAxis(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveAxis
        path: ''
        startLine: 3935
      syntax:
        content:
          CSharp: public override void MoveAxis(MoveArgs args)
          VB: Public Overrides Sub MoveAxis(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.Dataline.MoveAxis*
      overridden: Virgis.VirgisFeature.MoveAxis(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Dataline.Draw(Vector3[],System.Boolean,Dictionary{System.String,Unit},GameObject,GameObject,GameObject,Material,Material,Material,Material)
      commentId: M:Virgis.Dataline.Draw(Vector3[],System.Boolean,Dictionary{System.String,Unit},GameObject,GameObject,GameObject,Material,Material,Material,Material)
      language: CSharp
      name:
        CSharp: Draw(Vector3[], Boolean, Dictionary<String, Unit>, GameObject, GameObject, GameObject, Material, Material, Material, Material)
        VB: Draw(Vector3(), Boolean, Dictionary(Of String, Unit), GameObject, GameObject, GameObject, Material, Material, Material, Material)
      nameWithType:
        CSharp: Dataline.Draw(Vector3[], Boolean, Dictionary<String, Unit>, GameObject, GameObject, GameObject, Material, Material, Material, Material)
        VB: Dataline.Draw(Vector3(), Boolean, Dictionary(Of String, Unit), GameObject, GameObject, GameObject, Material, Material, Material, Material)
      qualifiedName:
        CSharp: Virgis.Dataline.Draw(Vector3[], System.Boolean, Dictionary<System.String, Unit>, GameObject, GameObject, GameObject, Material, Material, Material, Material)
        VB: Virgis.Dataline.Draw(Vector3(), System.Boolean, Dictionary(Of System.String, Unit), GameObject, GameObject, GameObject, Material, Material, Material, Material)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Draw
        path: ''
        startLine: 3975
      summary: "\nCalled to draw the line\n"
      example: []
      syntax:
        content:
          CSharp: public void Draw(Vector3[] line, bool Lr, Dictionary<string, Unit> symbology, GameObject LinePrefab, GameObject HandlePrefab, GameObject LabelPrefab, Material mainMat, Material selectedMat, Material lineMain, Material lineSelected)
          VB: Public Sub Draw(line As Vector3(), Lr As Boolean, symbology As Dictionary(Of String, Unit), LinePrefab As GameObject, HandlePrefab As GameObject, LabelPrefab As GameObject, mainMat As Material, selectedMat As Material, lineMain As Material, lineSelected As Material)
        parameters:
        - id: line
          type: Vector3[]
        - id: Lr
          type: System.Boolean
        - id: symbology
          type: Dictionary{System.String,Unit}
          description: The symbo,logy to be applied to the loine
        - id: LinePrefab
          type: GameObject
          description: The prefab to be used for the line
        - id: HandlePrefab
          type: GameObject
          description: The prefab to be used for the handle
        - id: LabelPrefab
          type: GameObject
          description: the prefab to used for the label
        - id: mainMat
          type: Material
        - id: selectedMat
          type: Material
        - id: lineMain
          type: Material
        - id: lineSelected
          type: Material
      overload: Virgis.Dataline.Draw*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.Dataline.MakeLinearRing
      commentId: M:Virgis.Dataline.MakeLinearRing
      language: CSharp
      name:
        CSharp: MakeLinearRing()
        VB: MakeLinearRing()
      nameWithType:
        CSharp: Dataline.MakeLinearRing()
        VB: Dataline.MakeLinearRing()
      qualifiedName:
        CSharp: Virgis.Dataline.MakeLinearRing()
        VB: Virgis.Dataline.MakeLinearRing()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MakeLinearRing
        path: ''
        startLine: 4020
      summary: "\nMake the Line into a Linear Ring by setting the Lr flag and creating a LineSegment form the last vertex to the first.\nIf the last vertex is in the same (exact) position as the first vertex, the last vertex is deleted.\n"
      example: []
      syntax:
        content:
          CSharp: public void MakeLinearRing()
          VB: Public Sub MakeLinearRing
      overload: Virgis.Dataline.MakeLinearRing*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.Dataline.GetVertexPositions
      commentId: M:Virgis.Dataline.GetVertexPositions
      language: CSharp
      name:
        CSharp: GetVertexPositions()
        VB: GetVertexPositions()
      nameWithType:
        CSharp: Dataline.GetVertexPositions()
        VB: Dataline.GetVertexPositions()
      qualifiedName:
        CSharp: Virgis.Dataline.GetVertexPositions()
        VB: Virgis.Dataline.GetVertexPositions()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetVertexPositions
        path: ''
        startLine: 4043
      summary: "\ncalled to get the verteces of the LineString\n"
      example: []
      syntax:
        content:
          CSharp: public Vector3[] GetVertexPositions()
          VB: Public Function GetVertexPositions As Vector3()
        return:
          type: Vector3[]
          description: Vector3[] of verteces
      overload: Virgis.Dataline.GetVertexPositions*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.Dataline.GetVertexes
      commentId: M:Virgis.Dataline.GetVertexes
      language: CSharp
      name:
        CSharp: GetVertexes()
        VB: GetVertexes()
      nameWithType:
        CSharp: Dataline.GetVertexes()
        VB: Dataline.GetVertexes()
      qualifiedName:
        CSharp: Virgis.Dataline.GetVertexes()
        VB: Virgis.Dataline.GetVertexes()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetVertexes
        path: ''
        startLine: 4054
      syntax:
        content:
          CSharp: public Datapoint[] GetVertexes()
          VB: Public Function GetVertexes As Datapoint()
        return:
          type: Virgis.Datapoint[]
      overload: Virgis.Dataline.GetVertexes*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.Dataline.Selected(Virgis.SelectionTypes)
      commentId: M:Virgis.Dataline.Selected(Virgis.SelectionTypes)
      language: CSharp
      name:
        CSharp: Selected(SelectionTypes)
        VB: Selected(SelectionTypes)
      nameWithType:
        CSharp: Dataline.Selected(SelectionTypes)
        VB: Dataline.Selected(SelectionTypes)
      qualifiedName:
        CSharp: Virgis.Dataline.Selected(Virgis.SelectionTypes)
        VB: Virgis.Dataline.Selected(Virgis.SelectionTypes)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Selected
        path: ''
        startLine: 4063
      syntax:
        content:
          CSharp: public override void Selected(SelectionTypes button)
          VB: Public Overrides Sub Selected(button As SelectionTypes)
        parameters:
        - id: button
          type: Virgis.SelectionTypes
      overload: Virgis.Dataline.Selected*
      overridden: Virgis.VirgisFeature.Selected(Virgis.SelectionTypes)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Dataline.UnSelected(Virgis.SelectionTypes)
      commentId: M:Virgis.Dataline.UnSelected(Virgis.SelectionTypes)
      language: CSharp
      name:
        CSharp: UnSelected(SelectionTypes)
        VB: UnSelected(SelectionTypes)
      nameWithType:
        CSharp: Dataline.UnSelected(SelectionTypes)
        VB: Dataline.UnSelected(SelectionTypes)
      qualifiedName:
        CSharp: Virgis.Dataline.UnSelected(Virgis.SelectionTypes)
        VB: Virgis.Dataline.UnSelected(Virgis.SelectionTypes)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: UnSelected
        path: ''
        startLine: 4072
      syntax:
        content:
          CSharp: public override void UnSelected(SelectionTypes button)
          VB: Public Overrides Sub UnSelected(button As SelectionTypes)
        parameters:
        - id: button
          type: Virgis.SelectionTypes
      overload: Virgis.Dataline.UnSelected*
      overridden: Virgis.VirgisFeature.UnSelected(Virgis.SelectionTypes)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Dataline.Translate(Virgis.MoveArgs)
      commentId: M:Virgis.Dataline.Translate(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: Translate(MoveArgs)
        VB: Translate(MoveArgs)
      nameWithType:
        CSharp: Dataline.Translate(MoveArgs)
        VB: Dataline.Translate(MoveArgs)
      qualifiedName:
        CSharp: Virgis.Dataline.Translate(Virgis.MoveArgs)
        VB: Virgis.Dataline.Translate(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Translate
        path: ''
        startLine: 4081
      syntax:
        content:
          CSharp: public override void Translate(MoveArgs args)
          VB: Public Overrides Sub Translate(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.Dataline.Translate*
      overridden: Virgis.VirgisFeature.Translate(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Dataline.GetWkt
      commentId: M:Virgis.Dataline.GetWkt
      language: CSharp
      name:
        CSharp: GetWkt()
        VB: GetWkt()
      nameWithType:
        CSharp: Dataline.GetWkt()
        VB: Dataline.GetWkt()
      qualifiedName:
        CSharp: Virgis.Dataline.GetWkt()
        VB: Virgis.Dataline.GetWkt()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetWkt
        path: ''
        startLine: 4094
      syntax:
        content:
          CSharp: public string GetWkt()
          VB: Public Function GetWkt As String
        return:
          type: System.String
      overload: Virgis.Dataline.GetWkt*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.Dataline.GetWktCoords
      commentId: M:Virgis.Dataline.GetWktCoords
      language: CSharp
      name:
        CSharp: GetWktCoords()
        VB: GetWktCoords()
      nameWithType:
        CSharp: Dataline.GetWktCoords()
        VB: Dataline.GetWktCoords()
      qualifiedName:
        CSharp: Virgis.Dataline.GetWktCoords()
        VB: Virgis.Dataline.GetWktCoords()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetWktCoords
        path: ''
        startLine: 4101
      syntax:
        content:
          CSharp: public string GetWktCoords()
          VB: Public Function GetWktCoords As String
        return:
          type: System.String
      overload: Virgis.Dataline.GetWktCoords*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.Dataline.MoveTo(Virgis.MoveArgs)
      commentId: M:Virgis.Dataline.MoveTo(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveTo(MoveArgs)
        VB: MoveTo(MoveArgs)
      nameWithType:
        CSharp: Dataline.MoveTo(MoveArgs)
        VB: Dataline.MoveTo(MoveArgs)
      qualifiedName:
        CSharp: Virgis.Dataline.MoveTo(Virgis.MoveArgs)
        VB: Virgis.Dataline.MoveTo(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveTo
        path: ''
        startLine: 4115
      syntax:
        content:
          CSharp: public override void MoveTo(MoveArgs args)
          VB: Public Overrides Sub MoveTo(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.Dataline.MoveTo*
      overridden: Virgis.VirgisFeature.MoveTo(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Dataline.AddVertex(Vector3)
      commentId: M:Virgis.Dataline.AddVertex(Vector3)
      language: CSharp
      name:
        CSharp: AddVertex(Vector3)
        VB: AddVertex(Vector3)
      nameWithType:
        CSharp: Dataline.AddVertex(Vector3)
        VB: Dataline.AddVertex(Vector3)
      qualifiedName:
        CSharp: Virgis.Dataline.AddVertex(Vector3)
        VB: Virgis.Dataline.AddVertex(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: AddVertex
        path: ''
        startLine: 4120
      syntax:
        content:
          CSharp: public override VirgisFeature AddVertex(Vector3 position)
          VB: Public Overrides Function AddVertex(position As Vector3) As VirgisFeature
        parameters:
        - id: position
          type: Vector3
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.Dataline.AddVertex*
      overridden: Virgis.VirgisFeature.AddVertex(Vector3)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Dataline.AddVertex(Virgis.LineSegment,Vector3)
      commentId: M:Virgis.Dataline.AddVertex(Virgis.LineSegment,Vector3)
      language: CSharp
      name:
        CSharp: AddVertex(LineSegment, Vector3)
        VB: AddVertex(LineSegment, Vector3)
      nameWithType:
        CSharp: Dataline.AddVertex(LineSegment, Vector3)
        VB: Dataline.AddVertex(LineSegment, Vector3)
      qualifiedName:
        CSharp: Virgis.Dataline.AddVertex(Virgis.LineSegment, Vector3)
        VB: Virgis.Dataline.AddVertex(Virgis.LineSegment, Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: AddVertex
        path: ''
        startLine: 4132
      summary: "\nAdd a vertx to the Line when you know the segment to add the vertex to\n"
      example: []
      syntax:
        content:
          CSharp: public VirgisFeature AddVertex(LineSegment segment, Vector3 position)
          VB: Public Function AddVertex(segment As LineSegment, position As Vector3) As VirgisFeature
        parameters:
        - id: segment
          type: Virgis.LineSegment
          description: 'Linesegement to add the vertex to '
        - id: position
          type: Vector3
          description: Vertex Position in Wordl Space coordinates
        return:
          type: Virgis.VirgisFeature
          description: ''
      overload: Virgis.Dataline.AddVertex*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.Dataline.RemoveVertex(Virgis.VirgisFeature)
      commentId: M:Virgis.Dataline.RemoveVertex(Virgis.VirgisFeature)
      language: CSharp
      name:
        CSharp: RemoveVertex(VirgisFeature)
        VB: RemoveVertex(VirgisFeature)
      nameWithType:
        CSharp: Dataline.RemoveVertex(VirgisFeature)
        VB: Dataline.RemoveVertex(VirgisFeature)
      qualifiedName:
        CSharp: Virgis.Dataline.RemoveVertex(Virgis.VirgisFeature)
        VB: Virgis.Dataline.RemoveVertex(Virgis.VirgisFeature)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: RemoveVertex
        path: ''
        startLine: 4164
      syntax:
        content:
          CSharp: public override void RemoveVertex(VirgisFeature vertex)
          VB: Public Overrides Sub RemoveVertex(vertex As VirgisFeature)
        parameters:
        - id: vertex
          type: Virgis.VirgisFeature
      overload: Virgis.Dataline.RemoveVertex*
      overridden: Virgis.VirgisFeature.RemoveVertex(Virgis.VirgisFeature)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Virgis.MoveArgs
    commentId: T:Virgis.MoveArgs
    language: CSharp
    name:
      CSharp: MoveArgs
      VB: MoveArgs
    nameWithType:
      CSharp: MoveArgs
      VB: MoveArgs
    qualifiedName:
      CSharp: Virgis.MoveArgs
      VB: Virgis.MoveArgs
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: MoveArgs
      path: ''
      startLine: 4259
    summary: "\nStructure used to hold the details of a generic move request sent to a target enitity\n"
    example: []
    syntax:
      content:
        CSharp: public struct MoveArgs
        VB: Public Structure MoveArgs
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Virgis.MoveArgs.id
      commentId: F:Virgis.MoveArgs.id
      language: CSharp
      name:
        CSharp: id
        VB: id
      nameWithType:
        CSharp: MoveArgs.id
        VB: MoveArgs.id
      qualifiedName:
        CSharp: Virgis.MoveArgs.id
        VB: Virgis.MoveArgs.id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: id
        path: ''
        startLine: 4261
      syntax:
        content:
          CSharp: public Guid id
          VB: Public id As Guid
        return:
          type: Guid
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MoveArgs.pos
      commentId: F:Virgis.MoveArgs.pos
      language: CSharp
      name:
        CSharp: pos
        VB: pos
      nameWithType:
        CSharp: MoveArgs.pos
        VB: MoveArgs.pos
      qualifiedName:
        CSharp: Virgis.MoveArgs.pos
        VB: Virgis.MoveArgs.pos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: pos
        path: ''
        startLine: 4262
      syntax:
        content:
          CSharp: public Vector3 pos
          VB: Public pos As Vector3
        return:
          type: Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MoveArgs.translate
      commentId: F:Virgis.MoveArgs.translate
      language: CSharp
      name:
        CSharp: translate
        VB: translate
      nameWithType:
        CSharp: MoveArgs.translate
        VB: MoveArgs.translate
      qualifiedName:
        CSharp: Virgis.MoveArgs.translate
        VB: Virgis.MoveArgs.translate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: translate
        path: ''
        startLine: 4263
      syntax:
        content:
          CSharp: public Vector3 translate
          VB: Public translate As Vector3
        return:
          type: Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MoveArgs.rotate
      commentId: F:Virgis.MoveArgs.rotate
      language: CSharp
      name:
        CSharp: rotate
        VB: rotate
      nameWithType:
        CSharp: MoveArgs.rotate
        VB: MoveArgs.rotate
      qualifiedName:
        CSharp: Virgis.MoveArgs.rotate
        VB: Virgis.MoveArgs.rotate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: rotate
        path: ''
        startLine: 4264
      syntax:
        content:
          CSharp: public Quaternion rotate
          VB: Public rotate As Quaternion
        return:
          type: Quaternion
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MoveArgs.oldPos
      commentId: F:Virgis.MoveArgs.oldPos
      language: CSharp
      name:
        CSharp: oldPos
        VB: oldPos
      nameWithType:
        CSharp: MoveArgs.oldPos
        VB: MoveArgs.oldPos
      qualifiedName:
        CSharp: Virgis.MoveArgs.oldPos
        VB: Virgis.MoveArgs.oldPos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: oldPos
        path: ''
        startLine: 4265
      syntax:
        content:
          CSharp: public Vector3 oldPos
          VB: Public oldPos As Vector3
        return:
          type: Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MoveArgs.scale
      commentId: F:Virgis.MoveArgs.scale
      language: CSharp
      name:
        CSharp: scale
        VB: scale
      nameWithType:
        CSharp: MoveArgs.scale
        VB: MoveArgs.scale
      qualifiedName:
        CSharp: Virgis.MoveArgs.scale
        VB: Virgis.MoveArgs.scale
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: scale
        path: ''
        startLine: 4266
      syntax:
        content:
          CSharp: public float scale
          VB: Public scale As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.SelectionTypes
    commentId: T:Virgis.SelectionTypes
    language: CSharp
    name:
      CSharp: SelectionTypes
      VB: SelectionTypes
    nameWithType:
      CSharp: SelectionTypes
      VB: SelectionTypes
    qualifiedName:
      CSharp: Virgis.SelectionTypes
      VB: Virgis.SelectionTypes
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: SelectionTypes
      path: ''
      startLine: 4272
    summary: "\nEnum holding the types of &quot;selection&quot;tha the user can make\n"
    example: []
    syntax:
      content:
        CSharp: public enum SelectionTypes
        VB: Public Enum SelectionTypes
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Virgis.SelectionTypes.SELECT
      commentId: F:Virgis.SelectionTypes.SELECT
      language: CSharp
      name:
        CSharp: SELECT
        VB: SELECT
      nameWithType:
        CSharp: SelectionTypes.SELECT
        VB: SelectionTypes.SELECT
      qualifiedName:
        CSharp: Virgis.SelectionTypes.SELECT
        VB: Virgis.SelectionTypes.SELECT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SELECT
        path: ''
        startLine: 4274
      syntax:
        content:
          CSharp: SELECT = 0
          VB: SELECT = 0
        return:
          type: Virgis.SelectionTypes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Virgis.SelectionTypes.SELECTALL
      commentId: F:Virgis.SelectionTypes.SELECTALL
      language: CSharp
      name:
        CSharp: SELECTALL
        VB: SELECTALL
      nameWithType:
        CSharp: SelectionTypes.SELECTALL
        VB: SelectionTypes.SELECTALL
      qualifiedName:
        CSharp: Virgis.SelectionTypes.SELECTALL
        VB: Virgis.SelectionTypes.SELECTALL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SELECTALL
        path: ''
        startLine: 4275
      syntax:
        content:
          CSharp: SELECTALL = 1
          VB: SELECTALL = 1
        return:
          type: Virgis.SelectionTypes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Virgis.SelectionTypes.BROADCAST
      commentId: F:Virgis.SelectionTypes.BROADCAST
      language: CSharp
      name:
        CSharp: BROADCAST
        VB: BROADCAST
      nameWithType:
        CSharp: SelectionTypes.BROADCAST
        VB: SelectionTypes.BROADCAST
      qualifiedName:
        CSharp: Virgis.SelectionTypes.BROADCAST
        VB: Virgis.SelectionTypes.BROADCAST
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: BROADCAST
        path: ''
        startLine: 4276
      syntax:
        content:
          CSharp: BROADCAST = 2
          VB: BROADCAST = 2
        return:
          type: Virgis.SelectionTypes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Virgis.UnityLayers
    commentId: T:Virgis.UnityLayers
    language: CSharp
    name:
      CSharp: UnityLayers
      VB: UnityLayers
    nameWithType:
      CSharp: UnityLayers
      VB: UnityLayers
    qualifiedName:
      CSharp: Virgis.UnityLayers
      VB: Virgis.UnityLayers
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: UnityLayers
      path: ''
      startLine: 4279
    syntax:
      content:
        CSharp: public static class UnityLayers
        VB: Public Module UnityLayers
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Virgis.UnityLayers.POINT
      commentId: P:Virgis.UnityLayers.POINT
      language: CSharp
      name:
        CSharp: POINT
        VB: POINT
      nameWithType:
        CSharp: UnityLayers.POINT
        VB: UnityLayers.POINT
      qualifiedName:
        CSharp: Virgis.UnityLayers.POINT
        VB: Virgis.UnityLayers.POINT
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: POINT
        path: ''
        startLine: 4280
      syntax:
        content:
          CSharp: public static LayerMask POINT { get; }
          VB: Public Shared ReadOnly Property POINT As LayerMask
        parameters: []
        return:
          type: LayerMask
      overload: Virgis.UnityLayers.POINT*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Virgis.UnityLayers.LINE
      commentId: P:Virgis.UnityLayers.LINE
      language: CSharp
      name:
        CSharp: LINE
        VB: LINE
      nameWithType:
        CSharp: UnityLayers.LINE
        VB: UnityLayers.LINE
      qualifiedName:
        CSharp: Virgis.UnityLayers.LINE
        VB: Virgis.UnityLayers.LINE
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: LINE
        path: ''
        startLine: 4285
      syntax:
        content:
          CSharp: public static LayerMask LINE { get; }
          VB: Public Shared ReadOnly Property LINE As LayerMask
        parameters: []
        return:
          type: LayerMask
      overload: Virgis.UnityLayers.LINE*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Virgis.UnityLayers.SHAPE
      commentId: P:Virgis.UnityLayers.SHAPE
      language: CSharp
      name:
        CSharp: SHAPE
        VB: SHAPE
      nameWithType:
        CSharp: UnityLayers.SHAPE
        VB: UnityLayers.SHAPE
      qualifiedName:
        CSharp: Virgis.UnityLayers.SHAPE
        VB: Virgis.UnityLayers.SHAPE
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SHAPE
        path: ''
        startLine: 4290
      syntax:
        content:
          CSharp: public static LayerMask SHAPE { get; }
          VB: Public Shared ReadOnly Property SHAPE As LayerMask
        parameters: []
        return:
          type: LayerMask
      overload: Virgis.UnityLayers.SHAPE*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Virgis.UnityLayers.MESH
      commentId: P:Virgis.UnityLayers.MESH
      language: CSharp
      name:
        CSharp: MESH
        VB: MESH
      nameWithType:
        CSharp: UnityLayers.MESH
        VB: UnityLayers.MESH
      qualifiedName:
        CSharp: Virgis.UnityLayers.MESH
        VB: Virgis.UnityLayers.MESH
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MESH
        path: ''
        startLine: 4295
      syntax:
        content:
          CSharp: public static LayerMask MESH { get; }
          VB: Public Shared ReadOnly Property MESH As LayerMask
        parameters: []
        return:
          type: LayerMask
      overload: Virgis.UnityLayers.MESH*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
  - id: Virgis.Vector3ExtensionMethods
    commentId: T:Virgis.Vector3ExtensionMethods
    language: CSharp
    name:
      CSharp: Vector3ExtensionMethods
      VB: Vector3ExtensionMethods
    nameWithType:
      CSharp: Vector3ExtensionMethods
      VB: Vector3ExtensionMethods
    qualifiedName:
      CSharp: Virgis.Vector3ExtensionMethods
      VB: Virgis.Vector3ExtensionMethods
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: Vector3ExtensionMethods
      path: ''
      startLine: 4302
    syntax:
      content:
        CSharp: public static class Vector3ExtensionMethods
        VB: Public Module Vector3ExtensionMethods
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: Virgis.Vector3ExtensionMethods.ToPosition(Vector3)
      commentId: M:Virgis.Vector3ExtensionMethods.ToPosition(Vector3)
      language: CSharp
      name:
        CSharp: ToPosition(Vector3)
        VB: ToPosition(Vector3)
      nameWithType:
        CSharp: Vector3ExtensionMethods.ToPosition(Vector3)
        VB: Vector3ExtensionMethods.ToPosition(Vector3)
      qualifiedName:
        CSharp: Virgis.Vector3ExtensionMethods.ToPosition(Vector3)
        VB: Virgis.Vector3ExtensionMethods.ToPosition(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: ToPosition
        path: ''
        startLine: 4308
      summary: "\nConvert Vector3 World Space location to Position taking account of zoom, scale and mapscale\n"
      example: []
      syntax:
        content:
          CSharp: public static IPosition ToPosition(this Vector3 position)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ToPosition(position As Vector3) As IPosition
        parameters:
        - id: position
          type: Vector3
          description: Vector3 World Space coordinates
        return:
          type: IPosition
          description: Position
      overload: Virgis.Vector3ExtensionMethods.ToPosition*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.Vector3ExtensionMethods.ToPoint(Vector3)
      commentId: M:Virgis.Vector3ExtensionMethods.ToPoint(Vector3)
      language: CSharp
      name:
        CSharp: ToPoint(Vector3)
        VB: ToPoint(Vector3)
      nameWithType:
        CSharp: Vector3ExtensionMethods.ToPoint(Vector3)
        VB: Vector3ExtensionMethods.ToPoint(Vector3)
      qualifiedName:
        CSharp: Virgis.Vector3ExtensionMethods.ToPoint(Vector3)
        VB: Virgis.Vector3ExtensionMethods.ToPoint(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: ToPoint
        path: ''
        startLine: 4319
      summary: "\nConverts Vector3 World Space Location to Point taking accoun t of zoom, scale and mapscale\n"
      example: []
      syntax:
        content:
          CSharp: public static Point ToPoint(this Vector3 position)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ToPoint(position As Vector3) As Point
        parameters:
        - id: position
          type: Vector3
          description: ''
        return:
          type: Point
          description: ''
      overload: Virgis.Vector3ExtensionMethods.ToPoint*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Virgis.PositionExtensionMethods
    commentId: T:Virgis.PositionExtensionMethods
    language: CSharp
    name:
      CSharp: PositionExtensionMethods
      VB: PositionExtensionMethods
    nameWithType:
      CSharp: PositionExtensionMethods
      VB: PositionExtensionMethods
    qualifiedName:
      CSharp: Virgis.PositionExtensionMethods
      VB: Virgis.PositionExtensionMethods
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: PositionExtensionMethods
      path: ''
      startLine: 4324
    syntax:
      content:
        CSharp: public static class PositionExtensionMethods
        VB: Public Module PositionExtensionMethods
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: Virgis.PositionExtensionMethods.Vector2d(IPosition)
      commentId: M:Virgis.PositionExtensionMethods.Vector2d(IPosition)
      language: CSharp
      name:
        CSharp: Vector2d(IPosition)
        VB: Vector2d(IPosition)
      nameWithType:
        CSharp: PositionExtensionMethods.Vector2d(IPosition)
        VB: PositionExtensionMethods.Vector2d(IPosition)
      qualifiedName:
        CSharp: Virgis.PositionExtensionMethods.Vector2d(IPosition)
        VB: Virgis.PositionExtensionMethods.Vector2d(IPosition)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Vector2d
        path: ''
        startLine: 4331
      summary: "\nConverts Iposition to Vector2D\n"
      example: []
      syntax:
        content:
          CSharp: public static Mapbox.Utils.Vector2d Vector2d(this IPosition position)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Vector2d(position As IPosition) As Mapbox.Utils.Vector2d
        parameters:
        - id: position
          type: IPosition
          description: IPosition
        return:
          type: Mapbox.Utils.Vector2d
          description: Mapbox.Utils.Vector2d
      overload: Virgis.PositionExtensionMethods.Vector2d*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.PositionExtensionMethods.Vector2(IPosition)
      commentId: M:Virgis.PositionExtensionMethods.Vector2(IPosition)
      language: CSharp
      name:
        CSharp: Vector2(IPosition)
        VB: Vector2(IPosition)
      nameWithType:
        CSharp: PositionExtensionMethods.Vector2(IPosition)
        VB: PositionExtensionMethods.Vector2(IPosition)
      qualifiedName:
        CSharp: Virgis.PositionExtensionMethods.Vector2(IPosition)
        VB: Virgis.PositionExtensionMethods.Vector2(IPosition)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Vector2
        path: ''
        startLine: 4341
      summary: "\nConverts IPosition to UnityEngine.vector2\n"
      example: []
      syntax:
        content:
          CSharp: public static Vector2 Vector2(this IPosition position)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Vector2(position As IPosition) As Vector2
        parameters:
        - id: position
          type: IPosition
          description: IPosition
        return:
          type: Vector2
          description: UnityEngine.Vector2
      overload: Virgis.PositionExtensionMethods.Vector2*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.PositionExtensionMethods.Point(IPosition)
      commentId: M:Virgis.PositionExtensionMethods.Point(IPosition)
      language: CSharp
      name:
        CSharp: Point(IPosition)
        VB: Point(IPosition)
      nameWithType:
        CSharp: PositionExtensionMethods.Point(IPosition)
        VB: PositionExtensionMethods.Point(IPosition)
      qualifiedName:
        CSharp: Virgis.PositionExtensionMethods.Point(IPosition)
        VB: Virgis.PositionExtensionMethods.Point(IPosition)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Point
        path: ''
        startLine: 4351
      summary: "\nConverts IPositon to Position\n"
      example: []
      syntax:
        content:
          CSharp: public static Position Point(this IPosition position)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Point(position As IPosition) As Position
        parameters:
        - id: position
          type: IPosition
          description: ''
        return:
          type: Position
          description: ''
      overload: Virgis.PositionExtensionMethods.Point*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.PositionExtensionMethods.Vector3(IPosition)
      commentId: M:Virgis.PositionExtensionMethods.Vector3(IPosition)
      language: CSharp
      name:
        CSharp: Vector3(IPosition)
        VB: Vector3(IPosition)
      nameWithType:
        CSharp: PositionExtensionMethods.Vector3(IPosition)
        VB: PositionExtensionMethods.Vector3(IPosition)
      qualifiedName:
        CSharp: Virgis.PositionExtensionMethods.Vector3(IPosition)
        VB: Virgis.PositionExtensionMethods.Vector3(IPosition)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Vector3
        path: ''
        startLine: 4361
      summary: "\nConverts Iposition to Vector3 World Space coordinates takling account of zoom, scale and mapscale\n"
      example: []
      syntax:
        content:
          CSharp: public static Vector3 Vector3(this IPosition position)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Vector3(position As IPosition) As Vector3
        parameters:
        - id: position
          type: IPosition
          description: IPosition
        return:
          type: Vector3
          description: Vector3
      overload: Virgis.PositionExtensionMethods.Vector3*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Virgis.LineExtensionMethods
    commentId: T:Virgis.LineExtensionMethods
    language: CSharp
    name:
      CSharp: LineExtensionMethods
      VB: LineExtensionMethods
    nameWithType:
      CSharp: LineExtensionMethods
      VB: LineExtensionMethods
    qualifiedName:
      CSharp: Virgis.LineExtensionMethods
      VB: Virgis.LineExtensionMethods
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: LineExtensionMethods
      path: ''
      startLine: 4375
    syntax:
      content:
        CSharp: public static class LineExtensionMethods
        VB: Public Module LineExtensionMethods
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: Virgis.LineExtensionMethods.Point(LineString,System.Int32)
      commentId: M:Virgis.LineExtensionMethods.Point(LineString,System.Int32)
      language: CSharp
      name:
        CSharp: Point(LineString, Int32)
        VB: Point(LineString, Int32)
      nameWithType:
        CSharp: LineExtensionMethods.Point(LineString, Int32)
        VB: LineExtensionMethods.Point(LineString, Int32)
      qualifiedName:
        CSharp: Virgis.LineExtensionMethods.Point(LineString, System.Int32)
        VB: Virgis.LineExtensionMethods.Point(LineString, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Point
        path: ''
        startLine: 4383
      summary: "\nConverts LineString Vertex i to a Position\n"
      example: []
      syntax:
        content:
          CSharp: public static Position Point(this LineString line, int i)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Point(line As LineString, i As Integer) As Position
        parameters:
        - id: line
          type: LineString
          description: LineString
        - id: i
          type: System.Int32
          description: vertex index
        return:
          type: Position
          description: Position
      overload: Virgis.LineExtensionMethods.Point*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.LineExtensionMethods.Points(LineString)
      commentId: M:Virgis.LineExtensionMethods.Points(LineString)
      language: CSharp
      name:
        CSharp: Points(LineString)
        VB: Points(LineString)
      nameWithType:
        CSharp: LineExtensionMethods.Points(LineString)
        VB: LineExtensionMethods.Points(LineString)
      qualifiedName:
        CSharp: Virgis.LineExtensionMethods.Points(LineString)
        VB: Virgis.LineExtensionMethods.Points(LineString)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Points
        path: ''
        startLine: 4393
      summary: "\nConverts LineString to Position[]\n"
      example: []
      syntax:
        content:
          CSharp: public static Position[] Points(this LineString line)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Points(line As LineString) As Position()
        parameters:
        - id: line
          type: LineString
          description: LineString
        return:
          type: Position[]
          description: Position[]
      overload: Virgis.LineExtensionMethods.Points*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.LineExtensionMethods.Vector3(LineString)
      commentId: M:Virgis.LineExtensionMethods.Vector3(LineString)
      language: CSharp
      name:
        CSharp: Vector3(LineString)
        VB: Vector3(LineString)
      nameWithType:
        CSharp: LineExtensionMethods.Vector3(LineString)
        VB: LineExtensionMethods.Vector3(LineString)
      qualifiedName:
        CSharp: Virgis.LineExtensionMethods.Vector3(LineString)
        VB: Virgis.LineExtensionMethods.Vector3(LineString)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Vector3
        path: ''
        startLine: 4409
      summary: "\nConverts LineString to Vector3[] in world space taking account of zoom, scale and map scale\n"
      example: []
      syntax:
        content:
          CSharp: public static Vector3[] Vector3(this LineString line)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Vector3(line As LineString) As Vector3()
        parameters:
        - id: line
          type: LineString
          description: LineString
        return:
          type: Vector3[]
          description: Vector3[] World Space Locations
      overload: Virgis.LineExtensionMethods.Vector3*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Virgis.DcurveExtensions
    commentId: T:Virgis.DcurveExtensions
    language: CSharp
    name:
      CSharp: DcurveExtensions
      VB: DcurveExtensions
    nameWithType:
      CSharp: DcurveExtensions
      VB: DcurveExtensions
    qualifiedName:
      CSharp: Virgis.DcurveExtensions
      VB: Virgis.DcurveExtensions
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: DcurveExtensions
      path: ''
      startLine: 4418
    syntax:
      content:
        CSharp: public static class DcurveExtensions
        VB: Public Module DcurveExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: Virgis.DcurveExtensions.Vector3(g3.DCurve3,Vector3[],System.Boolean)
      commentId: M:Virgis.DcurveExtensions.Vector3(g3.DCurve3,Vector3[],System.Boolean)
      language: CSharp
      name:
        CSharp: Vector3(g3.DCurve3, Vector3[], Boolean)
        VB: Vector3(g3.DCurve3, Vector3(), Boolean)
      nameWithType:
        CSharp: DcurveExtensions.Vector3(g3.DCurve3, Vector3[], Boolean)
        VB: DcurveExtensions.Vector3(g3.DCurve3, Vector3(), Boolean)
      qualifiedName:
        CSharp: Virgis.DcurveExtensions.Vector3(g3.DCurve3, Vector3[], System.Boolean)
        VB: Virgis.DcurveExtensions.Vector3(g3.DCurve3, Vector3(), System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Vector3
        path: ''
        startLine: 4426
      summary: "\nCreates g3.DCurve from Vector3[]\n"
      example: []
      syntax:
        content:
          CSharp: public static void Vector3(this g3.DCurve3 curve, Vector3[] verteces, bool bClosed)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub Vector3(curve As g3.DCurve3, verteces As Vector3(), bClosed As Boolean)
        parameters:
        - id: curve
          type: g3.DCurve3
          description: DCurve
        - id: verteces
          type: Vector3[]
          description: Vextor3[]
        - id: bClosed
          type: System.Boolean
          description: whether the line is closed
      overload: Virgis.DcurveExtensions.Vector3*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.DcurveExtensions.Center(DCurve3)
      commentId: M:Virgis.DcurveExtensions.Center(DCurve3)
      language: CSharp
      name:
        CSharp: Center(DCurve3)
        VB: Center(DCurve3)
      nameWithType:
        CSharp: DcurveExtensions.Center(DCurve3)
        VB: DcurveExtensions.Center(DCurve3)
      qualifiedName:
        CSharp: Virgis.DcurveExtensions.Center(DCurve3)
        VB: Virgis.DcurveExtensions.Center(DCurve3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Center
        path: ''
        startLine: 4441
      summary: "\nEstimates the 3D centroid of a DCurve \n"
      example: []
      syntax:
        content:
          CSharp: public static Vector3d Center(this DCurve3 curve)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Center(curve As DCurve3) As Vector3d
        parameters:
        - id: curve
          type: DCurve3
          description: DCurve
        return:
          type: Vector3d
          description: Vector3[]
      overload: Virgis.DcurveExtensions.Center*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.DcurveExtensions.CenterMark(DCurve3)
      commentId: M:Virgis.DcurveExtensions.CenterMark(DCurve3)
      language: CSharp
      name:
        CSharp: CenterMark(DCurve3)
        VB: CenterMark(DCurve3)
      nameWithType:
        CSharp: DcurveExtensions.CenterMark(DCurve3)
        VB: DcurveExtensions.CenterMark(DCurve3)
      qualifiedName:
        CSharp: Virgis.DcurveExtensions.CenterMark(DCurve3)
        VB: Virgis.DcurveExtensions.CenterMark(DCurve3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CenterMark
        path: ''
        startLine: 4459
      summary: "\nEstimates the nearest point on a DCurve to the centroid of that DCurve\n"
      example: []
      syntax:
        content:
          CSharp: public static Vector3d CenterMark(this DCurve3 curve)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function CenterMark(curve As DCurve3) As Vector3d
        parameters:
        - id: curve
          type: DCurve3
          description: g3.DCurve
        return:
          type: Vector3d
          description: g3.Vector3d Centroid
      overload: Virgis.DcurveExtensions.CenterMark*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.DcurveExtensions.NearestSegment(DCurve3,Vector3d)
      commentId: M:Virgis.DcurveExtensions.NearestSegment(DCurve3,Vector3d)
      language: CSharp
      name:
        CSharp: NearestSegment(DCurve3, Vector3d)
        VB: NearestSegment(DCurve3, Vector3d)
      nameWithType:
        CSharp: DcurveExtensions.NearestSegment(DCurve3, Vector3d)
        VB: DcurveExtensions.NearestSegment(DCurve3, Vector3d)
      qualifiedName:
        CSharp: Virgis.DcurveExtensions.NearestSegment(DCurve3, Vector3d)
        VB: Virgis.DcurveExtensions.NearestSegment(DCurve3, Vector3d)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: NearestSegment
        path: ''
        startLine: 4471
      summary: "\nFinds the Segment from the DCurve3 closes to the position\n"
      example: []
      syntax:
        content:
          CSharp: public static int NearestSegment(this DCurve3 curve, Vector3d position)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function NearestSegment(curve As DCurve3, position As Vector3d) As Integer
        parameters:
        - id: curve
          type: DCurve3
          description: DCurve3
        - id: position
          type: Vector3d
          description: Vector3d
        return:
          type: System.Int32
          description: Integer Sgement index
      overload: Virgis.DcurveExtensions.NearestSegment*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Virgis.PolygonExtensions
    commentId: T:Virgis.PolygonExtensions
    language: CSharp
    name:
      CSharp: PolygonExtensions
      VB: PolygonExtensions
    nameWithType:
      CSharp: PolygonExtensions
      VB: PolygonExtensions
    qualifiedName:
      CSharp: Virgis.PolygonExtensions
      VB: Virgis.PolygonExtensions
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: PolygonExtensions
      path: ''
      startLine: 4478
    syntax:
      content:
        CSharp: public static class PolygonExtensions
        VB: Public Module PolygonExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: Virgis.PolygonExtensions.ToPolygon(List{Virgis.Dataline},Frame3f@)
      commentId: M:Virgis.PolygonExtensions.ToPolygon(List{Virgis.Dataline},Frame3f@)
      language: CSharp
      name:
        CSharp: ToPolygon(List<Dataline>, ref Frame3f)
        VB: ToPolygon(List(Of Dataline), ByRef Frame3f)
      nameWithType:
        CSharp: PolygonExtensions.ToPolygon(List<Dataline>, ref Frame3f)
        VB: PolygonExtensions.ToPolygon(List(Of Dataline), ByRef Frame3f)
      qualifiedName:
        CSharp: Virgis.PolygonExtensions.ToPolygon(List<Virgis.Dataline>, ref Frame3f)
        VB: Virgis.PolygonExtensions.ToPolygon(List(Of Virgis.Dataline), ByRef Frame3f)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: ToPolygon
        path: ''
        startLine: 4480
      syntax:
        content:
          CSharp: public static GeneralPolygon2d ToPolygon(this List<Dataline> list, ref Frame3f frame)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ToPolygon(list As List(Of Dataline), ByRef frame As Frame3f) As GeneralPolygon2d
        parameters:
        - id: list
          type: List{Virgis.Dataline}
        - id: frame
          type: Frame3f
        return:
          type: GeneralPolygon2d
      overload: Virgis.PolygonExtensions.ToPolygon*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Virgis.SimpleMeshExtensions
    commentId: T:Virgis.SimpleMeshExtensions
    language: CSharp
    name:
      CSharp: SimpleMeshExtensions
      VB: SimpleMeshExtensions
    nameWithType:
      CSharp: SimpleMeshExtensions
      VB: SimpleMeshExtensions
    qualifiedName:
      CSharp: Virgis.SimpleMeshExtensions
      VB: Virgis.SimpleMeshExtensions
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: SimpleMeshExtensions
      path: ''
      startLine: 4522
    syntax:
      content:
        CSharp: public static class SimpleMeshExtensions
        VB: Public Module SimpleMeshExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: Virgis.SimpleMeshExtensions.ToMesh(SimpleMesh)
      commentId: M:Virgis.SimpleMeshExtensions.ToMesh(SimpleMesh)
      language: CSharp
      name:
        CSharp: ToMesh(SimpleMesh)
        VB: ToMesh(SimpleMesh)
      nameWithType:
        CSharp: SimpleMeshExtensions.ToMesh(SimpleMesh)
        VB: SimpleMeshExtensions.ToMesh(SimpleMesh)
      qualifiedName:
        CSharp: Virgis.SimpleMeshExtensions.ToMesh(SimpleMesh)
        VB: Virgis.SimpleMeshExtensions.ToMesh(SimpleMesh)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: ToMesh
        path: ''
        startLine: 4529
      summary: "\nConverts g3.SimpleMesh to UnityEngine.Mesh\n"
      example: []
      syntax:
        content:
          CSharp: public static Mesh ToMesh(this SimpleMesh simpleMesh)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ToMesh(simpleMesh As SimpleMesh) As Mesh
        parameters:
        - id: simpleMesh
          type: SimpleMesh
          description: SimpleMesh
        return:
          type: Mesh
          description: UnityEngine.Mesh
      overload: Virgis.SimpleMeshExtensions.ToMesh*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Virgis.VirgisVectorExtensions
    commentId: T:Virgis.VirgisVectorExtensions
    language: CSharp
    name:
      CSharp: VirgisVectorExtensions
      VB: VirgisVectorExtensions
    nameWithType:
      CSharp: VirgisVectorExtensions
      VB: VirgisVectorExtensions
    qualifiedName:
      CSharp: Virgis.VirgisVectorExtensions
      VB: Virgis.VirgisVectorExtensions
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: VirgisVectorExtensions
      path: ''
      startLine: 4564
    syntax:
      content:
        CSharp: public static class VirgisVectorExtensions
        VB: Public Module VirgisVectorExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: Virgis.VirgisVectorExtensions.Round(Vector3,System.Single)
      commentId: M:Virgis.VirgisVectorExtensions.Round(Vector3,System.Single)
      language: CSharp
      name:
        CSharp: Round(Vector3, Single)
        VB: Round(Vector3, Single)
      nameWithType:
        CSharp: VirgisVectorExtensions.Round(Vector3, Single)
        VB: VirgisVectorExtensions.Round(Vector3, Single)
      qualifiedName:
        CSharp: Virgis.VirgisVectorExtensions.Round(Vector3, System.Single)
        VB: Virgis.VirgisVectorExtensions.Round(Vector3, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Round
        path: ''
        startLine: 4572
      summary: "\nRounds a Vector3 in 3d to the nearest value divisible by roundTo\n"
      example: []
      syntax:
        content:
          CSharp: public static Vector3 Round(this Vector3 vector3, float roundTo = 0.1F)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Round(vector3 As Vector3, roundTo As Single = 0.1F) As Vector3
        parameters:
        - id: vector3
          type: Vector3
          description: Vector 3 value
        - id: roundTo
          type: System.Single
          description: rounding size
        return:
          type: Vector3
          description: Vector3 rounded value
      overload: Virgis.VirgisVectorExtensions.Round*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Virgis.VertexLookup
    commentId: T:Virgis.VertexLookup
    language: CSharp
    name:
      CSharp: VertexLookup
      VB: VertexLookup
    nameWithType:
      CSharp: VertexLookup
      VB: VertexLookup
    qualifiedName:
      CSharp: Virgis.VertexLookup
      VB: Virgis.VertexLookup
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: VertexLookup
      path: ''
      startLine: 4585
    summary: "\nStructure used to hold avertex for an arbitrary shape and to calculate equality\n"
    example: []
    syntax:
      content:
        CSharp: public class VertexLookup
        VB: Public Class VertexLookup
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.VertexLookup.Id
      commentId: F:Virgis.VertexLookup.Id
      language: CSharp
      name:
        CSharp: Id
        VB: Id
      nameWithType:
        CSharp: VertexLookup.Id
        VB: VertexLookup.Id
      qualifiedName:
        CSharp: Virgis.VertexLookup.Id
        VB: Virgis.VertexLookup.Id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Id
        path: ''
        startLine: 4587
      syntax:
        content:
          CSharp: public Guid Id
          VB: Public Id As Guid
        return:
          type: Guid
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VertexLookup.Vertex
      commentId: F:Virgis.VertexLookup.Vertex
      language: CSharp
      name:
        CSharp: Vertex
        VB: Vertex
      nameWithType:
        CSharp: VertexLookup.Vertex
        VB: VertexLookup.Vertex
      qualifiedName:
        CSharp: Virgis.VertexLookup.Vertex
        VB: Virgis.VertexLookup.Vertex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Vertex
        path: ''
        startLine: 4588
      syntax:
        content:
          CSharp: public int Vertex
          VB: Public Vertex As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VertexLookup.isVertex
      commentId: F:Virgis.VertexLookup.isVertex
      language: CSharp
      name:
        CSharp: isVertex
        VB: isVertex
      nameWithType:
        CSharp: VertexLookup.isVertex
        VB: VertexLookup.isVertex
      qualifiedName:
        CSharp: Virgis.VertexLookup.isVertex
        VB: Virgis.VertexLookup.isVertex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: isVertex
        path: ''
        startLine: 4589
      syntax:
        content:
          CSharp: public bool isVertex
          VB: Public isVertex As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VertexLookup.Com
      commentId: F:Virgis.VertexLookup.Com
      language: CSharp
      name:
        CSharp: Com
        VB: Com
      nameWithType:
        CSharp: VertexLookup.Com
        VB: VertexLookup.Com
      qualifiedName:
        CSharp: Virgis.VertexLookup.Com
        VB: Virgis.VertexLookup.Com
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Com
        path: ''
        startLine: 4590
      syntax:
        content:
          CSharp: public VirgisFeature Com
          VB: Public Com As VirgisFeature
        return:
          type: Virgis.VirgisFeature
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VertexLookup.Line
      commentId: F:Virgis.VertexLookup.Line
      language: CSharp
      name:
        CSharp: Line
        VB: Line
      nameWithType:
        CSharp: VertexLookup.Line
        VB: VertexLookup.Line
      qualifiedName:
        CSharp: Virgis.VertexLookup.Line
        VB: Virgis.VertexLookup.Line
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Line
        path: ''
        startLine: 4591
      syntax:
        content:
          CSharp: public LineSegment Line
          VB: Public Line As LineSegment
        return:
          type: Virgis.LineSegment
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VertexLookup.pVertex
      commentId: F:Virgis.VertexLookup.pVertex
      language: CSharp
      name:
        CSharp: pVertex
        VB: pVertex
      nameWithType:
        CSharp: VertexLookup.pVertex
        VB: VertexLookup.pVertex
      qualifiedName:
        CSharp: Virgis.VertexLookup.pVertex
        VB: Virgis.VertexLookup.pVertex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: pVertex
        path: ''
        startLine: 4592
      syntax:
        content:
          CSharp: public int pVertex
          VB: Public pVertex As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VertexLookup.Equals(System.Object)
      commentId: M:Virgis.VertexLookup.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: VertexLookup.Equals(Object)
        VB: VertexLookup.Equals(Object)
      qualifiedName:
        CSharp: Virgis.VertexLookup.Equals(System.Object)
        VB: Virgis.VertexLookup.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Equals
        path: ''
        startLine: 4594
      syntax:
        content:
          CSharp: public override bool Equals(object obj)
          VB: Public Overrides Function Equals(obj As Object) As Boolean
        parameters:
        - id: obj
          type: System.Object
        return:
          type: System.Boolean
      overload: Virgis.VertexLookup.Equals*
      overridden: System.Object.Equals(System.Object)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.VertexLookup.GetHashCode
      commentId: M:Virgis.VertexLookup.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: VertexLookup.GetHashCode()
        VB: VertexLookup.GetHashCode()
      qualifiedName:
        CSharp: Virgis.VertexLookup.GetHashCode()
        VB: Virgis.VertexLookup.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetHashCode
        path: ''
        startLine: 4601
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Virgis.VertexLookup.GetHashCode*
      overridden: System.Object.GetHashCode
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.VertexLookup.Equals(Virgis.VertexLookup)
      commentId: M:Virgis.VertexLookup.Equals(Virgis.VertexLookup)
      language: CSharp
      name:
        CSharp: Equals(VertexLookup)
        VB: Equals(VertexLookup)
      nameWithType:
        CSharp: VertexLookup.Equals(VertexLookup)
        VB: VertexLookup.Equals(VertexLookup)
      qualifiedName:
        CSharp: Virgis.VertexLookup.Equals(Virgis.VertexLookup)
        VB: Virgis.VertexLookup.Equals(Virgis.VertexLookup)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Equals
        path: ''
        startLine: 4605
      syntax:
        content:
          CSharp: public bool Equals(VertexLookup other)
          VB: Public Function Equals(other As VertexLookup) As Boolean
        parameters:
        - id: other
          type: Virgis.VertexLookup
        return:
          type: System.Boolean
      overload: Virgis.VertexLookup.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VertexLookup.CompareTo(Virgis.VertexLookup)
      commentId: M:Virgis.VertexLookup.CompareTo(Virgis.VertexLookup)
      language: CSharp
      name:
        CSharp: CompareTo(VertexLookup)
        VB: CompareTo(VertexLookup)
      nameWithType:
        CSharp: VertexLookup.CompareTo(VertexLookup)
        VB: VertexLookup.CompareTo(VertexLookup)
      qualifiedName:
        CSharp: Virgis.VertexLookup.CompareTo(Virgis.VertexLookup)
        VB: Virgis.VertexLookup.CompareTo(Virgis.VertexLookup)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CompareTo
        path: ''
        startLine: 4611
      syntax:
        content:
          CSharp: public int CompareTo(VertexLookup other)
          VB: Public Function CompareTo(other As VertexLookup) As Integer
        parameters:
        - id: other
          type: Virgis.VertexLookup
        return:
          type: System.Int32
      overload: Virgis.VertexLookup.CompareTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.IVirgisEntity
    commentId: T:Virgis.IVirgisEntity
    language: CSharp
    name:
      CSharp: IVirgisEntity
      VB: IVirgisEntity
    nameWithType:
      CSharp: IVirgisEntity
      VB: IVirgisEntity
    qualifiedName:
      CSharp: Virgis.IVirgisEntity
      VB: Virgis.IVirgisEntity
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: IVirgisEntity
      path: ''
      startLine: 4635
    summary: "\nAbstract parent for all in game entities\n"
    example: []
    syntax:
      content:
        CSharp: public interface IVirgisEntity
        VB: Public Interface IVirgisEntity
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Virgis.IVirgisEntity.Selected(Virgis.SelectionTypes)
      commentId: M:Virgis.IVirgisEntity.Selected(Virgis.SelectionTypes)
      language: CSharp
      name:
        CSharp: Selected(SelectionTypes)
        VB: Selected(SelectionTypes)
      nameWithType:
        CSharp: IVirgisEntity.Selected(SelectionTypes)
        VB: IVirgisEntity.Selected(SelectionTypes)
      qualifiedName:
        CSharp: Virgis.IVirgisEntity.Selected(Virgis.SelectionTypes)
        VB: Virgis.IVirgisEntity.Selected(Virgis.SelectionTypes)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Selected
        path: ''
        startLine: 4637
      syntax:
        content:
          CSharp: void Selected(SelectionTypes button)
          VB: Sub Selected(button As SelectionTypes)
        parameters:
        - id: button
          type: Virgis.SelectionTypes
      overload: Virgis.IVirgisEntity.Selected*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisEntity.UnSelected(Virgis.SelectionTypes)
      commentId: M:Virgis.IVirgisEntity.UnSelected(Virgis.SelectionTypes)
      language: CSharp
      name:
        CSharp: UnSelected(SelectionTypes)
        VB: UnSelected(SelectionTypes)
      nameWithType:
        CSharp: IVirgisEntity.UnSelected(SelectionTypes)
        VB: IVirgisEntity.UnSelected(SelectionTypes)
      qualifiedName:
        CSharp: Virgis.IVirgisEntity.UnSelected(Virgis.SelectionTypes)
        VB: Virgis.IVirgisEntity.UnSelected(Virgis.SelectionTypes)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: UnSelected
        path: ''
        startLine: 4638
      syntax:
        content:
          CSharp: void UnSelected(SelectionTypes button)
          VB: Sub UnSelected(button As SelectionTypes)
        parameters:
        - id: button
          type: Virgis.SelectionTypes
      overload: Virgis.IVirgisEntity.UnSelected*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisEntity.StartEditSession
      commentId: M:Virgis.IVirgisEntity.StartEditSession
      language: CSharp
      name:
        CSharp: StartEditSession()
        VB: StartEditSession()
      nameWithType:
        CSharp: IVirgisEntity.StartEditSession()
        VB: IVirgisEntity.StartEditSession()
      qualifiedName:
        CSharp: Virgis.IVirgisEntity.StartEditSession()
        VB: Virgis.IVirgisEntity.StartEditSession()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: StartEditSession
        path: ''
        startLine: 4639
      syntax:
        content:
          CSharp: void StartEditSession()
          VB: Sub StartEditSession
      overload: Virgis.IVirgisEntity.StartEditSession*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisEntity.ExitEditSession(System.Boolean)
      commentId: M:Virgis.IVirgisEntity.ExitEditSession(System.Boolean)
      language: CSharp
      name:
        CSharp: ExitEditSession(Boolean)
        VB: ExitEditSession(Boolean)
      nameWithType:
        CSharp: IVirgisEntity.ExitEditSession(Boolean)
        VB: IVirgisEntity.ExitEditSession(Boolean)
      qualifiedName:
        CSharp: Virgis.IVirgisEntity.ExitEditSession(System.Boolean)
        VB: Virgis.IVirgisEntity.ExitEditSession(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: ExitEditSession
        path: ''
        startLine: 4640
      syntax:
        content:
          CSharp: void ExitEditSession(bool saved)
          VB: Sub ExitEditSession(saved As Boolean)
        parameters:
        - id: saved
          type: System.Boolean
      overload: Virgis.IVirgisEntity.ExitEditSession*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisEntity.GetId
      commentId: M:Virgis.IVirgisEntity.GetId
      language: CSharp
      name:
        CSharp: GetId()
        VB: GetId()
      nameWithType:
        CSharp: IVirgisEntity.GetId()
        VB: IVirgisEntity.GetId()
      qualifiedName:
        CSharp: Virgis.IVirgisEntity.GetId()
        VB: Virgis.IVirgisEntity.GetId()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetId
        path: ''
        startLine: 4641
      syntax:
        content:
          CSharp: Guid GetId()
          VB: Function GetId As Guid
        return:
          type: Guid
      overload: Virgis.IVirgisEntity.GetId*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisEntity.GetMetadata
      commentId: M:Virgis.IVirgisEntity.GetMetadata
      language: CSharp
      name:
        CSharp: GetMetadata()
        VB: GetMetadata()
      nameWithType:
        CSharp: IVirgisEntity.GetMetadata()
        VB: IVirgisEntity.GetMetadata()
      qualifiedName:
        CSharp: Virgis.IVirgisEntity.GetMetadata()
        VB: Virgis.IVirgisEntity.GetMetadata()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetMetadata
        path: ''
        startLine: 4642
      syntax:
        content:
          CSharp: RecordSet GetMetadata()
          VB: Function GetMetadata As RecordSet
        return:
          type: RecordSet
      overload: Virgis.IVirgisEntity.GetMetadata*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisEntity.GetClosest(Vector3,Guid[])
      commentId: M:Virgis.IVirgisEntity.GetClosest(Vector3,Guid[])
      language: CSharp
      name:
        CSharp: GetClosest(Vector3, Guid[])
        VB: GetClosest(Vector3, Guid())
      nameWithType:
        CSharp: IVirgisEntity.GetClosest(Vector3, Guid[])
        VB: IVirgisEntity.GetClosest(Vector3, Guid())
      qualifiedName:
        CSharp: Virgis.IVirgisEntity.GetClosest(Vector3, Guid[])
        VB: Virgis.IVirgisEntity.GetClosest(Vector3, Guid())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetClosest
        path: ''
        startLine: 4643
      syntax:
        content:
          CSharp: VirgisFeature GetClosest(Vector3 coords, Guid[] exclude)
          VB: Function GetClosest(coords As Vector3, exclude As Guid()) As VirgisFeature
        parameters:
        - id: coords
          type: Vector3
        - id: exclude
          type: Guid[]
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.IVirgisEntity.GetClosest*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisEntity.MoveAxis(Virgis.MoveArgs)
      commentId: M:Virgis.IVirgisEntity.MoveAxis(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveAxis(MoveArgs)
        VB: MoveAxis(MoveArgs)
      nameWithType:
        CSharp: IVirgisEntity.MoveAxis(MoveArgs)
        VB: IVirgisEntity.MoveAxis(MoveArgs)
      qualifiedName:
        CSharp: Virgis.IVirgisEntity.MoveAxis(Virgis.MoveArgs)
        VB: Virgis.IVirgisEntity.MoveAxis(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveAxis
        path: ''
        startLine: 4644
      syntax:
        content:
          CSharp: void MoveAxis(MoveArgs args)
          VB: Sub MoveAxis(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.IVirgisEntity.MoveAxis*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisEntity.Translate(Virgis.MoveArgs)
      commentId: M:Virgis.IVirgisEntity.Translate(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: Translate(MoveArgs)
        VB: Translate(MoveArgs)
      nameWithType:
        CSharp: IVirgisEntity.Translate(MoveArgs)
        VB: IVirgisEntity.Translate(MoveArgs)
      qualifiedName:
        CSharp: Virgis.IVirgisEntity.Translate(Virgis.MoveArgs)
        VB: Virgis.IVirgisEntity.Translate(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Translate
        path: ''
        startLine: 4645
      syntax:
        content:
          CSharp: void Translate(MoveArgs args)
          VB: Sub Translate(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.IVirgisEntity.Translate*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisEntity.MoveTo(Virgis.MoveArgs)
      commentId: M:Virgis.IVirgisEntity.MoveTo(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveTo(MoveArgs)
        VB: MoveTo(MoveArgs)
      nameWithType:
        CSharp: IVirgisEntity.MoveTo(MoveArgs)
        VB: IVirgisEntity.MoveTo(MoveArgs)
      qualifiedName:
        CSharp: Virgis.IVirgisEntity.MoveTo(Virgis.MoveArgs)
        VB: Virgis.IVirgisEntity.MoveTo(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveTo
        path: ''
        startLine: 4646
      syntax:
        content:
          CSharp: void MoveTo(MoveArgs args)
          VB: Sub MoveTo(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.IVirgisEntity.MoveTo*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisEntity.VertexMove(Virgis.MoveArgs)
      commentId: M:Virgis.IVirgisEntity.VertexMove(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: VertexMove(MoveArgs)
        VB: VertexMove(MoveArgs)
      nameWithType:
        CSharp: IVirgisEntity.VertexMove(MoveArgs)
        VB: IVirgisEntity.VertexMove(MoveArgs)
      qualifiedName:
        CSharp: Virgis.IVirgisEntity.VertexMove(Virgis.MoveArgs)
        VB: Virgis.IVirgisEntity.VertexMove(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: VertexMove
        path: ''
        startLine: 4647
      syntax:
        content:
          CSharp: void VertexMove(MoveArgs args)
          VB: Sub VertexMove(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.IVirgisEntity.VertexMove*
      modifiers:
        CSharp: []
        VB: []
  - id: Virgis.IVirgisFeature
    commentId: T:Virgis.IVirgisFeature
    language: CSharp
    name:
      CSharp: IVirgisFeature
      VB: IVirgisFeature
    nameWithType:
      CSharp: IVirgisFeature
      VB: IVirgisFeature
    qualifiedName:
      CSharp: Virgis.IVirgisFeature
      VB: Virgis.IVirgisFeature
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: IVirgisFeature
      path: ''
      startLine: 4653
    summary: "\nAbstract Parent for all symbology relevant in game entities\n"
    example: []
    syntax:
      content:
        CSharp: 'public interface IVirgisFeature : IVirgisEntity'
        VB: >-
          Public Interface IVirgisFeature

              Inherits IVirgisEntity
    inheritedMembers:
    - Virgis.IVirgisEntity.Selected(Virgis.SelectionTypes)
    - Virgis.IVirgisEntity.UnSelected(Virgis.SelectionTypes)
    - Virgis.IVirgisEntity.StartEditSession
    - Virgis.IVirgisEntity.ExitEditSession(System.Boolean)
    - Virgis.IVirgisEntity.GetId
    - Virgis.IVirgisEntity.GetMetadata
    - Virgis.IVirgisEntity.GetClosest(Vector3,Guid[])
    - Virgis.IVirgisEntity.MoveAxis(Virgis.MoveArgs)
    - Virgis.IVirgisEntity.Translate(Virgis.MoveArgs)
    - Virgis.IVirgisEntity.MoveTo(Virgis.MoveArgs)
    - Virgis.IVirgisEntity.VertexMove(Virgis.MoveArgs)
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Virgis.IVirgisFeature.SetMaterial(Material,Material)
      commentId: M:Virgis.IVirgisFeature.SetMaterial(Material,Material)
      language: CSharp
      name:
        CSharp: SetMaterial(Material, Material)
        VB: SetMaterial(Material, Material)
      nameWithType:
        CSharp: IVirgisFeature.SetMaterial(Material, Material)
        VB: IVirgisFeature.SetMaterial(Material, Material)
      qualifiedName:
        CSharp: Virgis.IVirgisFeature.SetMaterial(Material, Material)
        VB: Virgis.IVirgisFeature.SetMaterial(Material, Material)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SetMaterial
        path: ''
        startLine: 4655
      syntax:
        content:
          CSharp: void SetMaterial(Material mainMat, Material selectedMat)
          VB: Sub SetMaterial(mainMat As Material, selectedMat As Material)
        parameters:
        - id: mainMat
          type: Material
        - id: selectedMat
          type: Material
      overload: Virgis.IVirgisFeature.SetMaterial*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisFeature.AddVertex(Vector3)
      commentId: M:Virgis.IVirgisFeature.AddVertex(Vector3)
      language: CSharp
      name:
        CSharp: AddVertex(Vector3)
        VB: AddVertex(Vector3)
      nameWithType:
        CSharp: IVirgisFeature.AddVertex(Vector3)
        VB: IVirgisFeature.AddVertex(Vector3)
      qualifiedName:
        CSharp: Virgis.IVirgisFeature.AddVertex(Vector3)
        VB: Virgis.IVirgisFeature.AddVertex(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: AddVertex
        path: ''
        startLine: 4657
      syntax:
        content:
          CSharp: VirgisFeature AddVertex(Vector3 position)
          VB: Function AddVertex(position As Vector3) As VirgisFeature
        parameters:
        - id: position
          type: Vector3
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.IVirgisFeature.AddVertex*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisFeature.RemoveVertex(Virgis.VirgisFeature)
      commentId: M:Virgis.IVirgisFeature.RemoveVertex(Virgis.VirgisFeature)
      language: CSharp
      name:
        CSharp: RemoveVertex(VirgisFeature)
        VB: RemoveVertex(VirgisFeature)
      nameWithType:
        CSharp: IVirgisFeature.RemoveVertex(VirgisFeature)
        VB: IVirgisFeature.RemoveVertex(VirgisFeature)
      qualifiedName:
        CSharp: Virgis.IVirgisFeature.RemoveVertex(Virgis.VirgisFeature)
        VB: Virgis.IVirgisFeature.RemoveVertex(Virgis.VirgisFeature)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: RemoveVertex
        path: ''
        startLine: 4658
      syntax:
        content:
          CSharp: void RemoveVertex(VirgisFeature vertex)
          VB: Sub RemoveVertex(vertex As VirgisFeature)
        parameters:
        - id: vertex
          type: Virgis.VirgisFeature
      overload: Virgis.IVirgisFeature.RemoveVertex*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisFeature.GetGeometry``1
      commentId: M:Virgis.IVirgisFeature.GetGeometry``1
      language: CSharp
      name:
        CSharp: GetGeometry<T>()
        VB: GetGeometry(Of T)()
      nameWithType:
        CSharp: IVirgisFeature.GetGeometry<T>()
        VB: IVirgisFeature.GetGeometry(Of T)()
      qualifiedName:
        CSharp: Virgis.IVirgisFeature.GetGeometry<T>()
        VB: Virgis.IVirgisFeature.GetGeometry(Of T)()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetGeometry
        path: ''
        startLine: 4659
      syntax:
        content:
          CSharp: T GetGeometry<T>()
          VB: Function GetGeometry(Of T) As T
        typeParameters:
        - id: T
        return:
          type: '{T}'
      overload: Virgis.IVirgisFeature.GetGeometry*
      modifiers:
        CSharp: []
        VB: []
  - id: Virgis.VirgisFeature
    commentId: T:Virgis.VirgisFeature
    language: CSharp
    name:
      CSharp: VirgisFeature
      VB: VirgisFeature
    nameWithType:
      CSharp: VirgisFeature
      VB: VirgisFeature
    qualifiedName:
      CSharp: Virgis.VirgisFeature
      VB: Virgis.VirgisFeature
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: VirgisFeature
      path: ''
      startLine: 4663
    syntax:
      content:
        CSharp: 'public abstract class VirgisFeature : MonoBehaviour, IVirgisFeature, IVirgisEntity'
        VB: >-
          Public MustInherit Class VirgisFeature

              Inherits MonoBehaviour

              Implements IVirgisFeature, IVirgisEntity
    inheritance:
    - System.Object
    implements:
    - Virgis.IVirgisFeature
    - Virgis.IVirgisEntity
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: Virgis.VirgisFeature.mainMat
      commentId: F:Virgis.VirgisFeature.mainMat
      language: CSharp
      name:
        CSharp: mainMat
        VB: mainMat
      nameWithType:
        CSharp: VirgisFeature.mainMat
        VB: VirgisFeature.mainMat
      qualifiedName:
        CSharp: Virgis.VirgisFeature.mainMat
        VB: Virgis.VirgisFeature.mainMat
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: mainMat
        path: ''
        startLine: 4665
      syntax:
        content:
          CSharp: protected Material mainMat
          VB: Protected mainMat As Material
        return:
          type: Material
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.VirgisFeature.selectedMat
      commentId: F:Virgis.VirgisFeature.selectedMat
      language: CSharp
      name:
        CSharp: selectedMat
        VB: selectedMat
      nameWithType:
        CSharp: VirgisFeature.selectedMat
        VB: VirgisFeature.selectedMat
      qualifiedName:
        CSharp: Virgis.VirgisFeature.selectedMat
        VB: Virgis.VirgisFeature.selectedMat
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: selectedMat
        path: ''
        startLine: 4666
      syntax:
        content:
          CSharp: protected Material selectedMat
          VB: Protected selectedMat As Material
        return:
          type: Material
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.VirgisFeature.gisId
      commentId: F:Virgis.VirgisFeature.gisId
      language: CSharp
      name:
        CSharp: gisId
        VB: gisId
      nameWithType:
        CSharp: VirgisFeature.gisId
        VB: VirgisFeature.gisId
      qualifiedName:
        CSharp: Virgis.VirgisFeature.gisId
        VB: Virgis.VirgisFeature.gisId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: gisId
        path: ''
        startLine: 4667
      syntax:
        content:
          CSharp: public string gisId
          VB: Public gisId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisFeature.gisProperties
      commentId: F:Virgis.VirgisFeature.gisProperties
      language: CSharp
      name:
        CSharp: gisProperties
        VB: gisProperties
      nameWithType:
        CSharp: VirgisFeature.gisProperties
        VB: VirgisFeature.gisProperties
      qualifiedName:
        CSharp: Virgis.VirgisFeature.gisProperties
        VB: Virgis.VirgisFeature.gisProperties
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: gisProperties
        path: ''
        startLine: 4668
      syntax:
        content:
          CSharp: public Dictionary<string, object> gisProperties
          VB: Public gisProperties As Dictionary(Of String, Object)
        return:
          type: Dictionary{System.String,System.Object}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisFeature.label
      commentId: F:Virgis.VirgisFeature.label
      language: CSharp
      name:
        CSharp: label
        VB: label
      nameWithType:
        CSharp: VirgisFeature.label
        VB: VirgisFeature.label
      qualifiedName:
        CSharp: Virgis.VirgisFeature.label
        VB: Virgis.VirgisFeature.label
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: label
        path: ''
        startLine: 4671
      syntax:
        content:
          CSharp: public Transform label
          VB: Public label As Transform
        return:
          type: Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisFeature.SetMaterial(Material,Material)
      commentId: M:Virgis.VirgisFeature.SetMaterial(Material,Material)
      language: CSharp
      name:
        CSharp: SetMaterial(Material, Material)
        VB: SetMaterial(Material, Material)
      nameWithType:
        CSharp: VirgisFeature.SetMaterial(Material, Material)
        VB: VirgisFeature.SetMaterial(Material, Material)
      qualifiedName:
        CSharp: Virgis.VirgisFeature.SetMaterial(Material, Material)
        VB: Virgis.VirgisFeature.SetMaterial(Material, Material)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SetMaterial
        path: ''
        startLine: 4685
      summary: "\nUse to set the material of the feature\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void SetMaterial(Material mainMat, Material selectedMat)
          VB: Public Overridable Sub SetMaterial(mainMat As Material, selectedMat As Material)
        parameters:
        - id: mainMat
          type: Material
          description: Usual material
        - id: selectedMat
          type: Material
          description: Material to be used when feature is selected
      overload: Virgis.VirgisFeature.SetMaterial*
      implements:
      - Virgis.IVirgisFeature.SetMaterial(Material,Material)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisFeature.Selected(Virgis.SelectionTypes)
      commentId: M:Virgis.VirgisFeature.Selected(Virgis.SelectionTypes)
      language: CSharp
      name:
        CSharp: Selected(SelectionTypes)
        VB: Selected(SelectionTypes)
      nameWithType:
        CSharp: VirgisFeature.Selected(SelectionTypes)
        VB: VirgisFeature.Selected(SelectionTypes)
      qualifiedName:
        CSharp: Virgis.VirgisFeature.Selected(Virgis.SelectionTypes)
        VB: Virgis.VirgisFeature.Selected(Virgis.SelectionTypes)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Selected
        path: ''
        startLine: 4694
      summary: "\nUse to tell the Component that it is selected\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Selected(SelectionTypes button)
          VB: Public Overridable Sub Selected(button As SelectionTypes)
        parameters:
        - id: button
          type: Virgis.SelectionTypes
          description: SelectionType
      overload: Virgis.VirgisFeature.Selected*
      implements:
      - Virgis.IVirgisEntity.Selected(Virgis.SelectionTypes)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisFeature.UnSelected(Virgis.SelectionTypes)
      commentId: M:Virgis.VirgisFeature.UnSelected(Virgis.SelectionTypes)
      language: CSharp
      name:
        CSharp: UnSelected(SelectionTypes)
        VB: UnSelected(SelectionTypes)
      nameWithType:
        CSharp: VirgisFeature.UnSelected(SelectionTypes)
        VB: VirgisFeature.UnSelected(SelectionTypes)
      qualifiedName:
        CSharp: Virgis.VirgisFeature.UnSelected(Virgis.SelectionTypes)
        VB: Virgis.VirgisFeature.UnSelected(Virgis.SelectionTypes)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: UnSelected
        path: ''
        startLine: 4702
      summary: "\nUse to tell the Component that it is un selected\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void UnSelected(SelectionTypes button)
          VB: Public Overridable Sub UnSelected(button As SelectionTypes)
        parameters:
        - id: button
          type: Virgis.SelectionTypes
          description: SelectionType
      overload: Virgis.VirgisFeature.UnSelected*
      implements:
      - Virgis.IVirgisEntity.UnSelected(Virgis.SelectionTypes)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisFeature.StartEditSession
      commentId: M:Virgis.VirgisFeature.StartEditSession
      language: CSharp
      name:
        CSharp: StartEditSession()
        VB: StartEditSession()
      nameWithType:
        CSharp: VirgisFeature.StartEditSession()
        VB: VirgisFeature.StartEditSession()
      qualifiedName:
        CSharp: Virgis.VirgisFeature.StartEditSession()
        VB: Virgis.VirgisFeature.StartEditSession()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: StartEditSession
        path: ''
        startLine: 4709
      summary: "\nCalled when an edit session starts\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void StartEditSession()
          VB: Public Overridable Sub StartEditSession
      overload: Virgis.VirgisFeature.StartEditSession*
      implements:
      - Virgis.IVirgisEntity.StartEditSession
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisFeature.ExitEditSession(System.Boolean)
      commentId: M:Virgis.VirgisFeature.ExitEditSession(System.Boolean)
      language: CSharp
      name:
        CSharp: ExitEditSession(Boolean)
        VB: ExitEditSession(Boolean)
      nameWithType:
        CSharp: VirgisFeature.ExitEditSession(Boolean)
        VB: VirgisFeature.ExitEditSession(Boolean)
      qualifiedName:
        CSharp: Virgis.VirgisFeature.ExitEditSession(System.Boolean)
        VB: Virgis.VirgisFeature.ExitEditSession(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: ExitEditSession
        path: ''
        startLine: 4716
      summary: "\nCalled when an edit session ends\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void ExitEditSession(bool saved)
          VB: Public Overridable Sub ExitEditSession(saved As Boolean)
        parameters:
        - id: saved
          type: System.Boolean
      overload: Virgis.VirgisFeature.ExitEditSession*
      implements:
      - Virgis.IVirgisEntity.ExitEditSession(System.Boolean)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisFeature.MoveTo(Virgis.MoveArgs)
      commentId: M:Virgis.VirgisFeature.MoveTo(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveTo(MoveArgs)
        VB: MoveTo(MoveArgs)
      nameWithType:
        CSharp: VirgisFeature.MoveTo(MoveArgs)
        VB: VirgisFeature.MoveTo(MoveArgs)
      qualifiedName:
        CSharp: Virgis.VirgisFeature.MoveTo(Virgis.MoveArgs)
        VB: Virgis.VirgisFeature.MoveTo(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveTo
        path: ''
        startLine: 4724
      summary: "\nSent by the UI to request this component to move.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void MoveTo(MoveArgs args)
          VB: Public Overridable Sub MoveTo(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
          description: 'MoveArgs : Either a trabslate vectir OR a Vector position to move to, both in World space coordinates'
      overload: Virgis.VirgisFeature.MoveTo*
      implements:
      - Virgis.IVirgisEntity.MoveTo(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisFeature.MoveAxis(Virgis.MoveArgs)
      commentId: M:Virgis.VirgisFeature.MoveAxis(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveAxis(MoveArgs)
        VB: MoveAxis(MoveArgs)
      nameWithType:
        CSharp: VirgisFeature.MoveAxis(MoveArgs)
        VB: VirgisFeature.MoveAxis(MoveArgs)
      qualifiedName:
        CSharp: Virgis.VirgisFeature.MoveAxis(Virgis.MoveArgs)
        VB: Virgis.VirgisFeature.MoveAxis(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveAxis
        path: ''
        startLine: 4732
      summary: "\nreceived when a Move Axis request is made by the user\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void MoveAxis(MoveArgs args)
          VB: Public Overridable Sub MoveAxis(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.VirgisFeature.MoveAxis*
      implements:
      - Virgis.IVirgisEntity.MoveAxis(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisFeature.Translate(Virgis.MoveArgs)
      commentId: M:Virgis.VirgisFeature.Translate(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: Translate(MoveArgs)
        VB: Translate(MoveArgs)
      nameWithType:
        CSharp: VirgisFeature.Translate(MoveArgs)
        VB: VirgisFeature.Translate(MoveArgs)
      qualifiedName:
        CSharp: Virgis.VirgisFeature.Translate(Virgis.MoveArgs)
        VB: Virgis.VirgisFeature.Translate(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Translate
        path: ''
        startLine: 4740
      summary: "\nCalled when a child component is translated by User action\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Translate(MoveArgs args)
          VB: Public Overridable Sub Translate(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
          description: MoveArgs
      overload: Virgis.VirgisFeature.Translate*
      implements:
      - Virgis.IVirgisEntity.Translate(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisFeature.VertexMove(Virgis.MoveArgs)
      commentId: M:Virgis.VirgisFeature.VertexMove(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: VertexMove(MoveArgs)
        VB: VertexMove(MoveArgs)
      nameWithType:
        CSharp: VirgisFeature.VertexMove(MoveArgs)
        VB: VirgisFeature.VertexMove(MoveArgs)
      qualifiedName:
        CSharp: Virgis.VirgisFeature.VertexMove(Virgis.MoveArgs)
        VB: Virgis.VirgisFeature.VertexMove(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: VertexMove
        path: ''
        startLine: 4748
      summary: "\nCalled when a child Vertex moves to the point in the MoveArgs - which is in World Coordinates\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void VertexMove(MoveArgs args)
          VB: Public Overridable Sub VertexMove(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.VirgisFeature.VertexMove*
      implements:
      - Virgis.IVirgisEntity.VertexMove(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisFeature.GetClosest(Vector3,Guid[])
      commentId: M:Virgis.VirgisFeature.GetClosest(Vector3,Guid[])
      language: CSharp
      name:
        CSharp: GetClosest(Vector3, Guid[])
        VB: GetClosest(Vector3, Guid())
      nameWithType:
        CSharp: VirgisFeature.GetClosest(Vector3, Guid[])
        VB: VirgisFeature.GetClosest(Vector3, Guid())
      qualifiedName:
        CSharp: Virgis.VirgisFeature.GetClosest(Vector3, Guid[])
        VB: Virgis.VirgisFeature.GetClosest(Vector3, Guid())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetClosest
        path: ''
        startLine: 4757
      summary: "\nGets the closest point of the faeture geometry to the coordinates\n"
      example: []
      syntax:
        content:
          CSharp: public virtual VirgisFeature GetClosest(Vector3 coords, Guid[] exclude)
          VB: Public Overridable Function GetClosest(coords As Vector3, exclude As Guid()) As VirgisFeature
        parameters:
        - id: coords
          type: Vector3
          description: 'Vector3 Target Coordinates '
        - id: exclude
          type: Guid[]
        return:
          type: Virgis.VirgisFeature
          description: 'Vector3 in world space coordinates '
      overload: Virgis.VirgisFeature.GetClosest*
      implements:
      - Virgis.IVirgisEntity.GetClosest(Vector3,Guid[])
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisFeature.AddVertex(Vector3)
      commentId: M:Virgis.VirgisFeature.AddVertex(Vector3)
      language: CSharp
      name:
        CSharp: AddVertex(Vector3)
        VB: AddVertex(Vector3)
      nameWithType:
        CSharp: VirgisFeature.AddVertex(Vector3)
        VB: VirgisFeature.AddVertex(Vector3)
      qualifiedName:
        CSharp: Virgis.VirgisFeature.AddVertex(Vector3)
        VB: Virgis.VirgisFeature.AddVertex(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: AddVertex
        path: ''
        startLine: 4766
      summary: "\ncall this to add a vertex to a feature.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual VirgisFeature AddVertex(Vector3 position)
          VB: Public Overridable Function AddVertex(position As Vector3) As VirgisFeature
        parameters:
        - id: position
          type: Vector3
          description: Vector3
        return:
          type: Virgis.VirgisFeature
          description: VirgisComponent The new vertex
      overload: Virgis.VirgisFeature.AddVertex*
      implements:
      - Virgis.IVirgisFeature.AddVertex(Vector3)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisFeature.RemoveVertex(Virgis.VirgisFeature)
      commentId: M:Virgis.VirgisFeature.RemoveVertex(Virgis.VirgisFeature)
      language: CSharp
      name:
        CSharp: RemoveVertex(VirgisFeature)
        VB: RemoveVertex(VirgisFeature)
      nameWithType:
        CSharp: VirgisFeature.RemoveVertex(VirgisFeature)
        VB: VirgisFeature.RemoveVertex(VirgisFeature)
      qualifiedName:
        CSharp: Virgis.VirgisFeature.RemoveVertex(Virgis.VirgisFeature)
        VB: Virgis.VirgisFeature.RemoveVertex(Virgis.VirgisFeature)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: RemoveVertex
        path: ''
        startLine: 4775
      summary: "\ncall this to remove a vertxe from a feature\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void RemoveVertex(VirgisFeature vertex)
          VB: Public Overridable Sub RemoveVertex(vertex As VirgisFeature)
        parameters:
        - id: vertex
          type: Virgis.VirgisFeature
          description: Vertex to remove
      overload: Virgis.VirgisFeature.RemoveVertex*
      implements:
      - Virgis.IVirgisFeature.RemoveVertex(Virgis.VirgisFeature)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisFeature.GetGeometry``1
      commentId: M:Virgis.VirgisFeature.GetGeometry``1
      language: CSharp
      name:
        CSharp: GetGeometry<T>()
        VB: GetGeometry(Of T)()
      nameWithType:
        CSharp: VirgisFeature.GetGeometry<T>()
        VB: VirgisFeature.GetGeometry(Of T)()
      qualifiedName:
        CSharp: Virgis.VirgisFeature.GetGeometry<T>()
        VB: Virgis.VirgisFeature.GetGeometry(Of T)()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetGeometry
        path: ''
        startLine: 4786
      summary: "\nGet Geometry from the Feature\n"
      example: []
      syntax:
        content:
          CSharp: public virtual T GetGeometry<T>()
          VB: Public Overridable Function GetGeometry(Of T) As T
        typeParameters:
        - id: T
          description: The Type of the geometry
        return:
          type: '{T}'
          description: 'Gemoetry of type T '
      overload: Virgis.VirgisFeature.GetGeometry*
      implements:
      - Virgis.IVirgisFeature.GetGeometry``1
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisFeature.GetId
      commentId: M:Virgis.VirgisFeature.GetId
      language: CSharp
      name:
        CSharp: GetId()
        VB: GetId()
      nameWithType:
        CSharp: VirgisFeature.GetId()
        VB: VirgisFeature.GetId()
      qualifiedName:
        CSharp: Virgis.VirgisFeature.GetId()
        VB: Virgis.VirgisFeature.GetId()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetId
        path: ''
        startLine: 4790
      syntax:
        content:
          CSharp: public Guid GetId()
          VB: Public Function GetId As Guid
        return:
          type: Guid
      overload: Virgis.VirgisFeature.GetId*
      implements:
      - Virgis.IVirgisEntity.GetId
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisFeature.GetMetadata
      commentId: M:Virgis.VirgisFeature.GetMetadata
      language: CSharp
      name:
        CSharp: GetMetadata()
        VB: GetMetadata()
      nameWithType:
        CSharp: VirgisFeature.GetMetadata()
        VB: VirgisFeature.GetMetadata()
      qualifiedName:
        CSharp: Virgis.VirgisFeature.GetMetadata()
        VB: Virgis.VirgisFeature.GetMetadata()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetMetadata
        path: ''
        startLine: 4794
      syntax:
        content:
          CSharp: public RecordSet GetMetadata()
          VB: Public Function GetMetadata As RecordSet
        return:
          type: RecordSet
      overload: Virgis.VirgisFeature.GetMetadata*
      implements:
      - Virgis.IVirgisEntity.GetMetadata
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisFeature.Equals(System.Object)
      commentId: M:Virgis.VirgisFeature.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: VirgisFeature.Equals(Object)
        VB: VirgisFeature.Equals(Object)
      qualifiedName:
        CSharp: Virgis.VirgisFeature.Equals(System.Object)
        VB: Virgis.VirgisFeature.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Equals
        path: ''
        startLine: 4798
      syntax:
        content:
          CSharp: public override bool Equals(object obj)
          VB: Public Overrides Function Equals(obj As Object) As Boolean
        parameters:
        - id: obj
          type: System.Object
        return:
          type: System.Boolean
      overload: Virgis.VirgisFeature.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.VirgisFeature.GetHashCode
      commentId: M:Virgis.VirgisFeature.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: VirgisFeature.GetHashCode()
        VB: VirgisFeature.GetHashCode()
      qualifiedName:
        CSharp: Virgis.VirgisFeature.GetHashCode()
        VB: Virgis.VirgisFeature.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetHashCode
        path: ''
        startLine: 4807
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Virgis.VirgisFeature.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.VirgisFeature.Equals(Virgis.VirgisFeature)
      commentId: M:Virgis.VirgisFeature.Equals(Virgis.VirgisFeature)
      language: CSharp
      name:
        CSharp: Equals(VirgisFeature)
        VB: Equals(VirgisFeature)
      nameWithType:
        CSharp: VirgisFeature.Equals(VirgisFeature)
        VB: VirgisFeature.Equals(VirgisFeature)
      qualifiedName:
        CSharp: Virgis.VirgisFeature.Equals(Virgis.VirgisFeature)
        VB: Virgis.VirgisFeature.Equals(Virgis.VirgisFeature)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Equals
        path: ''
        startLine: 4810
      syntax:
        content:
          CSharp: public bool Equals(VirgisFeature other)
          VB: Public Function Equals(other As VirgisFeature) As Boolean
        parameters:
        - id: other
          type: Virgis.VirgisFeature
        return:
          type: System.Boolean
      overload: Virgis.VirgisFeature.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.ParticleData
    commentId: T:Virgis.ParticleData
    language: CSharp
    name:
      CSharp: ParticleData
      VB: ParticleData
    nameWithType:
      CSharp: ParticleData
      VB: ParticleData
    qualifiedName:
      CSharp: Virgis.ParticleData
      VB: Virgis.ParticleData
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: ParticleData
      path: ''
      startLine: 4830
    summary: "\nClass for holding PointCloud data as a Particle cloud\n\nNote - this extends FeatureCollection. This is a hack to allow typing. this type WILL NOT SAVE succesfully to GeoJSON as a FeatureCollection \n"
    example: []
    syntax:
      content:
        CSharp: public class ParticleData
        VB: Public Class ParticleData
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.ParticleData.vertices
      commentId: F:Virgis.ParticleData.vertices
      language: CSharp
      name:
        CSharp: vertices
        VB: vertices
      nameWithType:
        CSharp: ParticleData.vertices
        VB: ParticleData.vertices
      qualifiedName:
        CSharp: Virgis.ParticleData.vertices
        VB: Virgis.ParticleData.vertices
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: vertices
        path: ''
        startLine: 4832
      syntax:
        content:
          CSharp: public List<Vector3> vertices
          VB: Public vertices As List(Of Vector3)
        return:
          type: List{Vector3}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.ParticleData.normals
      commentId: F:Virgis.ParticleData.normals
      language: CSharp
      name:
        CSharp: normals
        VB: normals
      nameWithType:
        CSharp: ParticleData.normals
        VB: ParticleData.normals
      qualifiedName:
        CSharp: Virgis.ParticleData.normals
        VB: Virgis.ParticleData.normals
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: normals
        path: ''
        startLine: 4833
      syntax:
        content:
          CSharp: public List<Vector3> normals
          VB: Public normals As List(Of Vector3)
        return:
          type: List{Vector3}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.ParticleData.colors
      commentId: F:Virgis.ParticleData.colors
      language: CSharp
      name:
        CSharp: colors
        VB: colors
      nameWithType:
        CSharp: ParticleData.colors
        VB: ParticleData.colors
      qualifiedName:
        CSharp: Virgis.ParticleData.colors
        VB: Virgis.ParticleData.colors
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: colors
        path: ''
        startLine: 4834
      syntax:
        content:
          CSharp: public List<Color32> colors
          VB: Public colors As List(Of Color32)
        return:
          type: List{Color32}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.ParticleData.vertexCount
      commentId: F:Virgis.ParticleData.vertexCount
      language: CSharp
      name:
        CSharp: vertexCount
        VB: vertexCount
      nameWithType:
        CSharp: ParticleData.vertexCount
        VB: ParticleData.vertexCount
      qualifiedName:
        CSharp: Virgis.ParticleData.vertexCount
        VB: Virgis.ParticleData.vertexCount
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: vertexCount
        path: ''
        startLine: 4835
      syntax:
        content:
          CSharp: public int vertexCount
          VB: Public vertexCount As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.ParticleData.bounds
      commentId: F:Virgis.ParticleData.bounds
      language: CSharp
      name:
        CSharp: bounds
        VB: bounds
      nameWithType:
        CSharp: ParticleData.bounds
        VB: ParticleData.bounds
      qualifiedName:
        CSharp: Virgis.ParticleData.bounds
        VB: Virgis.ParticleData.bounds
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: bounds
        path: ''
        startLine: 4836
      syntax:
        content:
          CSharp: public Bounds bounds
          VB: Public bounds As Bounds
        return:
          type: Bounds
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.IVirgisLayer
    commentId: T:Virgis.IVirgisLayer
    language: CSharp
    name:
      CSharp: IVirgisLayer
      VB: IVirgisLayer
    nameWithType:
      CSharp: IVirgisLayer
      VB: IVirgisLayer
    qualifiedName:
      CSharp: Virgis.IVirgisLayer
      VB: Virgis.IVirgisLayer
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: IVirgisLayer
      path: ''
      startLine: 4851
    syntax:
      content:
        CSharp: 'public interface IVirgisLayer : IVirgisEntity'
        VB: >-
          Public Interface IVirgisLayer

              Inherits IVirgisEntity
    inheritedMembers:
    - Virgis.IVirgisEntity.Selected(Virgis.SelectionTypes)
    - Virgis.IVirgisEntity.UnSelected(Virgis.SelectionTypes)
    - Virgis.IVirgisEntity.StartEditSession
    - Virgis.IVirgisEntity.ExitEditSession(System.Boolean)
    - Virgis.IVirgisEntity.GetId
    - Virgis.IVirgisEntity.GetMetadata
    - Virgis.IVirgisEntity.GetClosest(Vector3,Guid[])
    - Virgis.IVirgisEntity.MoveAxis(Virgis.MoveArgs)
    - Virgis.IVirgisEntity.Translate(Virgis.MoveArgs)
    - Virgis.IVirgisEntity.MoveTo(Virgis.MoveArgs)
    - Virgis.IVirgisEntity.VertexMove(Virgis.MoveArgs)
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Virgis.IVirgisLayer.AddFeature(Vector3[])
      commentId: M:Virgis.IVirgisLayer.AddFeature(Vector3[])
      language: CSharp
      name:
        CSharp: AddFeature(Vector3[])
        VB: AddFeature(Vector3())
      nameWithType:
        CSharp: IVirgisLayer.AddFeature(Vector3[])
        VB: IVirgisLayer.AddFeature(Vector3())
      qualifiedName:
        CSharp: Virgis.IVirgisLayer.AddFeature(Vector3[])
        VB: Virgis.IVirgisLayer.AddFeature(Vector3())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: AddFeature
        path: ''
        startLine: 4853
      syntax:
        content:
          CSharp: VirgisFeature AddFeature(Vector3[] geometry)
          VB: Function AddFeature(geometry As Vector3()) As VirgisFeature
        parameters:
        - id: geometry
          type: Vector3[]
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.IVirgisLayer.AddFeature*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisLayer.Draw
      commentId: M:Virgis.IVirgisLayer.Draw
      language: CSharp
      name:
        CSharp: Draw()
        VB: Draw()
      nameWithType:
        CSharp: IVirgisLayer.Draw()
        VB: IVirgisLayer.Draw()
      qualifiedName:
        CSharp: Virgis.IVirgisLayer.Draw()
        VB: Virgis.IVirgisLayer.Draw()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Draw
        path: ''
        startLine: 4854
      syntax:
        content:
          CSharp: void Draw()
          VB: Sub Draw
      overload: Virgis.IVirgisLayer.Draw*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisLayer.CheckPoint
      commentId: M:Virgis.IVirgisLayer.CheckPoint
      language: CSharp
      name:
        CSharp: CheckPoint()
        VB: CheckPoint()
      nameWithType:
        CSharp: IVirgisLayer.CheckPoint()
        VB: IVirgisLayer.CheckPoint()
      qualifiedName:
        CSharp: Virgis.IVirgisLayer.CheckPoint()
        VB: Virgis.IVirgisLayer.CheckPoint()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CheckPoint
        path: ''
        startLine: 4855
      syntax:
        content:
          CSharp: void CheckPoint()
          VB: Sub CheckPoint
      overload: Virgis.IVirgisLayer.CheckPoint*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisLayer.Save
      commentId: M:Virgis.IVirgisLayer.Save
      language: CSharp
      name:
        CSharp: Save()
        VB: Save()
      nameWithType:
        CSharp: IVirgisLayer.Save()
        VB: IVirgisLayer.Save()
      qualifiedName:
        CSharp: Virgis.IVirgisLayer.Save()
        VB: Virgis.IVirgisLayer.Save()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Save
        path: ''
        startLine: 4856
      syntax:
        content:
          CSharp: Task<RecordSet> Save()
          VB: Function Save As Task(Of RecordSet)
        return:
          type: Task{RecordSet}
      overload: Virgis.IVirgisLayer.Save*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisLayer.GetFeature(Guid)
      commentId: M:Virgis.IVirgisLayer.GetFeature(Guid)
      language: CSharp
      name:
        CSharp: GetFeature(Guid)
        VB: GetFeature(Guid)
      nameWithType:
        CSharp: IVirgisLayer.GetFeature(Guid)
        VB: IVirgisLayer.GetFeature(Guid)
      qualifiedName:
        CSharp: Virgis.IVirgisLayer.GetFeature(Guid)
        VB: Virgis.IVirgisLayer.GetFeature(Guid)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetFeature
        path: ''
        startLine: 4857
      syntax:
        content:
          CSharp: VirgisFeature GetFeature(Guid id)
          VB: Function GetFeature(id As Guid) As VirgisFeature
        parameters:
        - id: id
          type: Guid
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.IVirgisLayer.GetFeature*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisLayer.GetFeatureShape
      commentId: M:Virgis.IVirgisLayer.GetFeatureShape
      language: CSharp
      name:
        CSharp: GetFeatureShape()
        VB: GetFeatureShape()
      nameWithType:
        CSharp: IVirgisLayer.GetFeatureShape()
        VB: IVirgisLayer.GetFeatureShape()
      qualifiedName:
        CSharp: Virgis.IVirgisLayer.GetFeatureShape()
        VB: Virgis.IVirgisLayer.GetFeatureShape()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetFeatureShape
        path: ''
        startLine: 4858
      syntax:
        content:
          CSharp: GameObject GetFeatureShape()
          VB: Function GetFeatureShape As GameObject
        return:
          type: GameObject
      overload: Virgis.IVirgisLayer.GetFeatureShape*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisLayer.SetVisible(System.Boolean)
      commentId: M:Virgis.IVirgisLayer.SetVisible(System.Boolean)
      language: CSharp
      name:
        CSharp: SetVisible(Boolean)
        VB: SetVisible(Boolean)
      nameWithType:
        CSharp: IVirgisLayer.SetVisible(Boolean)
        VB: IVirgisLayer.SetVisible(Boolean)
      qualifiedName:
        CSharp: Virgis.IVirgisLayer.SetVisible(System.Boolean)
        VB: Virgis.IVirgisLayer.SetVisible(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SetVisible
        path: ''
        startLine: 4859
      syntax:
        content:
          CSharp: void SetVisible(bool visible)
          VB: Sub SetVisible(visible As Boolean)
        parameters:
        - id: visible
          type: System.Boolean
      overload: Virgis.IVirgisLayer.SetVisible*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisLayer.IsVisible
      commentId: M:Virgis.IVirgisLayer.IsVisible
      language: CSharp
      name:
        CSharp: IsVisible()
        VB: IsVisible()
      nameWithType:
        CSharp: IVirgisLayer.IsVisible()
        VB: IVirgisLayer.IsVisible()
      qualifiedName:
        CSharp: Virgis.IVirgisLayer.IsVisible()
        VB: Virgis.IVirgisLayer.IsVisible()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: IsVisible
        path: ''
        startLine: 4860
      syntax:
        content:
          CSharp: bool IsVisible()
          VB: Function IsVisible As Boolean
        return:
          type: System.Boolean
      overload: Virgis.IVirgisLayer.IsVisible*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisLayer.SetEditable(System.Boolean)
      commentId: M:Virgis.IVirgisLayer.SetEditable(System.Boolean)
      language: CSharp
      name:
        CSharp: SetEditable(Boolean)
        VB: SetEditable(Boolean)
      nameWithType:
        CSharp: IVirgisLayer.SetEditable(Boolean)
        VB: IVirgisLayer.SetEditable(Boolean)
      qualifiedName:
        CSharp: Virgis.IVirgisLayer.SetEditable(System.Boolean)
        VB: Virgis.IVirgisLayer.SetEditable(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SetEditable
        path: ''
        startLine: 4861
      syntax:
        content:
          CSharp: void SetEditable(bool inSession)
          VB: Sub SetEditable(inSession As Boolean)
        parameters:
        - id: inSession
          type: System.Boolean
      overload: Virgis.IVirgisLayer.SetEditable*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisLayer.IsEditable
      commentId: M:Virgis.IVirgisLayer.IsEditable
      language: CSharp
      name:
        CSharp: IsEditable()
        VB: IsEditable()
      nameWithType:
        CSharp: IVirgisLayer.IsEditable()
        VB: IVirgisLayer.IsEditable()
      qualifiedName:
        CSharp: Virgis.IVirgisLayer.IsEditable()
        VB: Virgis.IVirgisLayer.IsEditable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: IsEditable
        path: ''
        startLine: 4862
      syntax:
        content:
          CSharp: bool IsEditable()
          VB: Function IsEditable As Boolean
        return:
          type: System.Boolean
      overload: Virgis.IVirgisLayer.IsEditable*
      modifiers:
        CSharp: []
        VB: []
  - id: Virgis.VirgisLayer`2
    commentId: T:Virgis.VirgisLayer`2
    language: CSharp
    name:
      CSharp: VirgisLayer<T, S>
      VB: VirgisLayer(Of T, S)
    nameWithType:
      CSharp: VirgisLayer<T, S>
      VB: VirgisLayer(Of T, S)
    qualifiedName:
      CSharp: Virgis.VirgisLayer<T, S>
      VB: Virgis.VirgisLayer(Of T, S)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: VirgisLayer
      path: ''
      startLine: 4868
    summary: "\nAbstract parent for all Layer entities\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class VirgisLayer<T, S> : MonoBehaviour, IVirgisLayer, IVirgisEntity where T : RecordSet'
        VB: >-
          Public MustInherit Class VirgisLayer(Of T As RecordSet, S)

              Inherits MonoBehaviour

              Implements IVirgisLayer, IVirgisEntity
      typeParameters:
      - id: T
      - id: S
    inheritance:
    - System.Object
    implements:
    - Virgis.IVirgisLayer
    - Virgis.IVirgisEntity
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: Virgis.VirgisLayer`2.layer
      commentId: F:Virgis.VirgisLayer`2.layer
      language: CSharp
      name:
        CSharp: layer
        VB: layer
      nameWithType:
        CSharp: VirgisLayer<T, S>.layer
        VB: VirgisLayer(Of T, S).layer
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>.layer
        VB: Virgis.VirgisLayer(Of T, S).layer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: layer
        path: ''
        startLine: 4874
      syntax:
        content:
          CSharp: public T layer
          VB: Public layer As T
        return:
          type: '{T}'
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisLayer`2.features
      commentId: F:Virgis.VirgisLayer`2.features
      language: CSharp
      name:
        CSharp: features
        VB: features
      nameWithType:
        CSharp: VirgisLayer<T, S>.features
        VB: VirgisLayer(Of T, S).features
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>.features
        VB: Virgis.VirgisLayer(Of T, S).features
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: features
        path: ''
        startLine: 4875
      syntax:
        content:
          CSharp: public S features
          VB: Public features As S
        return:
          type: '{S}'
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisLayer`2.changed
      commentId: F:Virgis.VirgisLayer`2.changed
      language: CSharp
      name:
        CSharp: changed
        VB: changed
      nameWithType:
        CSharp: VirgisLayer<T, S>.changed
        VB: VirgisLayer(Of T, S).changed
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>.changed
        VB: Virgis.VirgisLayer(Of T, S).changed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: changed
        path: ''
        startLine: 4876
      syntax:
        content:
          CSharp: public bool changed
          VB: Public changed As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisLayer`2._id
      commentId: F:Virgis.VirgisLayer`2._id
      language: CSharp
      name:
        CSharp: _id
        VB: _id
      nameWithType:
        CSharp: VirgisLayer<T, S>._id
        VB: VirgisLayer(Of T, S)._id
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>._id
        VB: Virgis.VirgisLayer(Of T, S)._id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _id
        path: ''
        startLine: 4878
      syntax:
        content:
          CSharp: protected Guid _id
          VB: Protected _id As Guid
        return:
          type: Guid
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.VirgisLayer`2._editable
      commentId: F:Virgis.VirgisLayer`2._editable
      language: CSharp
      name:
        CSharp: _editable
        VB: _editable
      nameWithType:
        CSharp: VirgisLayer<T, S>._editable
        VB: VirgisLayer(Of T, S)._editable
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>._editable
        VB: Virgis.VirgisLayer(Of T, S)._editable
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _editable
        path: ''
        startLine: 4879
      syntax:
        content:
          CSharp: protected bool _editable
          VB: Protected _editable As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.VirgisLayer`2.Init(`0)
      commentId: M:Virgis.VirgisLayer`2.Init(`0)
      language: CSharp
      name:
        CSharp: Init(T)
        VB: Init(T)
      nameWithType:
        CSharp: VirgisLayer<T, S>.Init(T)
        VB: VirgisLayer(Of T, S).Init(T)
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>.Init(T)
        VB: Virgis.VirgisLayer(Of T, S).Init(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Init
        path: ''
        startLine: 4902
      summary: "\nCalled to initialise this layer\n\nIf the data cannot be read, fails quitely and creates an empty layer\n"
      example: []
      syntax:
        content:
          CSharp: public Task<VirgisLayer<T, S>> Init(T layer)
          VB: Public Function Init(layer As T) As Task(Of VirgisLayer(Of T, S))
        parameters:
        - id: layer
          type: '{T}'
          description: The GeographyCollection object that defines this layer
        return:
          type: Task{Virgis.VirgisLayer`2}
          description: refernce to this GameObject for chaining
      overload: Virgis.VirgisLayer`2.Init*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisLayer`2._init(`0)
      commentId: M:Virgis.VirgisLayer`2._init(`0)
      language: CSharp
      name:
        CSharp: _init(T)
        VB: _init(T)
      nameWithType:
        CSharp: VirgisLayer<T, S>._init(T)
        VB: VirgisLayer(Of T, S)._init(T)
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>._init(T)
        VB: Virgis.VirgisLayer(Of T, S)._init(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _init
        path: ''
        startLine: 4914
      summary: "\nImplement the layer specific init code in this method\n"
      example: []
      syntax:
        content:
          CSharp: protected abstract Task _init(T layer)
          VB: Protected MustOverride Function _init(layer As T) As Task
        parameters:
        - id: layer
          type: '{T}'
          description: ''
        return:
          type: Task
          description: ''
      overload: Virgis.VirgisLayer`2._init*
      modifiers:
        CSharp:
        - protected
        - abstract
        VB:
        - Protected
        - MustOverride
    - id: Virgis.VirgisLayer`2.AddFeature(Vector3[])
      commentId: M:Virgis.VirgisLayer`2.AddFeature(Vector3[])
      language: CSharp
      name:
        CSharp: AddFeature(Vector3[])
        VB: AddFeature(Vector3())
      nameWithType:
        CSharp: VirgisLayer<T, S>.AddFeature(Vector3[])
        VB: VirgisLayer(Of T, S).AddFeature(Vector3())
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>.AddFeature(Vector3[])
        VB: Virgis.VirgisLayer(Of T, S).AddFeature(Vector3())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: AddFeature
        path: ''
        startLine: 4920
      summary: "\nCall this to create a new feature\n"
      example: []
      syntax:
        content:
          CSharp: public VirgisFeature AddFeature(Vector3[] geometry)
          VB: Public Function AddFeature(geometry As Vector3()) As VirgisFeature
        parameters:
        - id: geometry
          type: Vector3[]
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.VirgisLayer`2.AddFeature*
      implements:
      - Virgis.IVirgisLayer.AddFeature(Vector3[])
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisLayer`2._addFeature(Vector3[])
      commentId: M:Virgis.VirgisLayer`2._addFeature(Vector3[])
      language: CSharp
      name:
        CSharp: _addFeature(Vector3[])
        VB: _addFeature(Vector3())
      nameWithType:
        CSharp: VirgisLayer<T, S>._addFeature(Vector3[])
        VB: VirgisLayer(Of T, S)._addFeature(Vector3())
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>._addFeature(Vector3[])
        VB: Virgis.VirgisLayer(Of T, S)._addFeature(Vector3())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _addFeature
        path: ''
        startLine: 4931
      syntax:
        content:
          CSharp: protected abstract VirgisFeature _addFeature(Vector3[] geometry)
          VB: Protected MustOverride Function _addFeature(geometry As Vector3()) As VirgisFeature
        parameters:
        - id: geometry
          type: Vector3[]
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.VirgisLayer`2._addFeature*
      modifiers:
        CSharp:
        - protected
        - abstract
        VB:
        - Protected
        - MustOverride
    - id: Virgis.VirgisLayer`2.Draw
      commentId: M:Virgis.VirgisLayer`2.Draw
      language: CSharp
      name:
        CSharp: Draw()
        VB: Draw()
      nameWithType:
        CSharp: VirgisLayer<T, S>.Draw()
        VB: VirgisLayer(Of T, S).Draw()
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>.Draw()
        VB: Virgis.VirgisLayer(Of T, S).Draw()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Draw
        path: ''
        startLine: 4936
      summary: "\nDraw the layer based upon the features in the features GeographyCollection\n"
      example: []
      syntax:
        content:
          CSharp: public void Draw()
          VB: Public Sub Draw
      overload: Virgis.VirgisLayer`2.Draw*
      implements:
      - Virgis.IVirgisLayer.Draw
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisLayer`2._draw
      commentId: M:Virgis.VirgisLayer`2._draw
      language: CSharp
      name:
        CSharp: _draw()
        VB: _draw()
      nameWithType:
        CSharp: VirgisLayer<T, S>._draw()
        VB: VirgisLayer(Of T, S)._draw()
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>._draw()
        VB: Virgis.VirgisLayer(Of T, S)._draw()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _draw
        path: ''
        startLine: 4959
      summary: "\nImplment the layer specific draw code in this method\n"
      example: []
      syntax:
        content:
          CSharp: protected abstract void _draw()
          VB: Protected MustOverride Sub _draw
      overload: Virgis.VirgisLayer`2._draw*
      modifiers:
        CSharp:
        - protected
        - abstract
        VB:
        - Protected
        - MustOverride
    - id: Virgis.VirgisLayer`2.CheckPoint
      commentId: M:Virgis.VirgisLayer`2.CheckPoint
      language: CSharp
      name:
        CSharp: CheckPoint()
        VB: CheckPoint()
      nameWithType:
        CSharp: VirgisLayer<T, S>.CheckPoint()
        VB: VirgisLayer(Of T, S).CheckPoint()
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>.CheckPoint()
        VB: Virgis.VirgisLayer(Of T, S).CheckPoint()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CheckPoint
        path: ''
        startLine: 4966
      summary: "\nCall this to tell the layers to create a checkpoint. \n\nOnly valid outside of an Edit Session. Inside an Edit Session use Save() as CheckPoint() will do nothing\n"
      example: []
      syntax:
        content:
          CSharp: public void CheckPoint()
          VB: Public Sub CheckPoint
      overload: Virgis.VirgisLayer`2.CheckPoint*
      implements:
      - Virgis.IVirgisLayer.CheckPoint
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisLayer`2._checkpoint
      commentId: M:Virgis.VirgisLayer`2._checkpoint
      language: CSharp
      name:
        CSharp: _checkpoint()
        VB: _checkpoint()
      nameWithType:
        CSharp: VirgisLayer<T, S>._checkpoint()
        VB: VirgisLayer(Of T, S)._checkpoint()
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>._checkpoint()
        VB: Virgis.VirgisLayer(Of T, S)._checkpoint()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _checkpoint
        path: ''
        startLine: 4976
      summary: "\nImplement the layer specific checkpoint code here\n"
      example: []
      syntax:
        content:
          CSharp: protected abstract void _checkpoint()
          VB: Protected MustOverride Sub _checkpoint
      overload: Virgis.VirgisLayer`2._checkpoint*
      modifiers:
        CSharp:
        - protected
        - abstract
        VB:
        - Protected
        - MustOverride
    - id: Virgis.VirgisLayer`2.Save
      commentId: M:Virgis.VirgisLayer`2.Save
      language: CSharp
      name:
        CSharp: Save()
        VB: Save()
      nameWithType:
        CSharp: VirgisLayer<T, S>.Save()
        VB: VirgisLayer(Of T, S).Save()
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>.Save()
        VB: Virgis.VirgisLayer(Of T, S).Save()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Save
        path: ''
        startLine: 4982
      summary: "\nCalled to save the current layer data to source\n"
      example: []
      syntax:
        content:
          CSharp: public virtual Task<RecordSet> Save()
          VB: Public Overridable Function Save As Task(Of RecordSet)
        return:
          type: Task{RecordSet}
          description: A copy of the data save dot the source
      overload: Virgis.VirgisLayer`2.Save*
      implements:
      - Virgis.IVirgisLayer.Save
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisLayer`2._save
      commentId: M:Virgis.VirgisLayer`2._save
      language: CSharp
      name:
        CSharp: _save()
        VB: _save()
      nameWithType:
        CSharp: VirgisLayer<T, S>._save()
        VB: VirgisLayer(Of T, S)._save()
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>._save()
        VB: Virgis.VirgisLayer(Of T, S)._save()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _save
        path: ''
        startLine: 4993
      summary: "\nImplment the layer specific draw code in this method\n"
      example: []
      syntax:
        content:
          CSharp: protected abstract Task _save()
          VB: Protected MustOverride Function _save As Task
        return:
          type: Task
          description: ''
      overload: Virgis.VirgisLayer`2._save*
      modifiers:
        CSharp:
        - protected
        - abstract
        VB:
        - Protected
        - MustOverride
    - id: Virgis.VirgisLayer`2.Translate(Virgis.MoveArgs)
      commentId: M:Virgis.VirgisLayer`2.Translate(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: Translate(MoveArgs)
        VB: Translate(MoveArgs)
      nameWithType:
        CSharp: VirgisLayer<T, S>.Translate(MoveArgs)
        VB: VirgisLayer(Of T, S).Translate(MoveArgs)
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>.Translate(Virgis.MoveArgs)
        VB: Virgis.VirgisLayer(Of T, S).Translate(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Translate
        path: ''
        startLine: 4999
      summary: "\nCalled Whenever a member entity is asked to Translate\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Translate(MoveArgs args)
          VB: Public Overridable Sub Translate(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
          description: MoveArge Object
      overload: Virgis.VirgisLayer`2.Translate*
      implements:
      - Virgis.IVirgisEntity.Translate(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisLayer`2.MoveAxis(Virgis.MoveArgs)
      commentId: M:Virgis.VirgisLayer`2.MoveAxis(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveAxis(MoveArgs)
        VB: MoveAxis(MoveArgs)
      nameWithType:
        CSharp: VirgisLayer<T, S>.MoveAxis(MoveArgs)
        VB: VirgisLayer(Of T, S).MoveAxis(MoveArgs)
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>.MoveAxis(Virgis.MoveArgs)
        VB: Virgis.VirgisLayer(Of T, S).MoveAxis(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveAxis
        path: ''
        startLine: 5007
      summary: "\nCalled whenevr a member entity is asked to Change Axis\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void MoveAxis(MoveArgs args)
          VB: Public Overridable Sub MoveAxis(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
          description: MoveArgs Object
      overload: Virgis.VirgisLayer`2.MoveAxis*
      implements:
      - Virgis.IVirgisEntity.MoveAxis(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisLayer`2.MoveTo(Virgis.MoveArgs)
      commentId: M:Virgis.VirgisLayer`2.MoveTo(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveTo(MoveArgs)
        VB: MoveTo(MoveArgs)
      nameWithType:
        CSharp: VirgisLayer<T, S>.MoveTo(MoveArgs)
        VB: VirgisLayer(Of T, S).MoveTo(MoveArgs)
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>.MoveTo(Virgis.MoveArgs)
        VB: Virgis.VirgisLayer(Of T, S).MoveTo(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveTo
        path: ''
        startLine: 5011
      syntax:
        content:
          CSharp: public virtual void MoveTo(MoveArgs args)
          VB: Public Overridable Sub MoveTo(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.VirgisLayer`2.MoveTo*
      implements:
      - Virgis.IVirgisEntity.MoveTo(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisLayer`2.VertexMove(Virgis.MoveArgs)
      commentId: M:Virgis.VirgisLayer`2.VertexMove(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: VertexMove(MoveArgs)
        VB: VertexMove(MoveArgs)
      nameWithType:
        CSharp: VirgisLayer<T, S>.VertexMove(MoveArgs)
        VB: VirgisLayer(Of T, S).VertexMove(MoveArgs)
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>.VertexMove(Virgis.MoveArgs)
        VB: Virgis.VirgisLayer(Of T, S).VertexMove(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: VertexMove
        path: ''
        startLine: 5015
      syntax:
        content:
          CSharp: public virtual void VertexMove(MoveArgs args)
          VB: Public Overridable Sub VertexMove(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.VirgisLayer`2.VertexMove*
      implements:
      - Virgis.IVirgisEntity.VertexMove(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisLayer`2.StartEditSession
      commentId: M:Virgis.VirgisLayer`2.StartEditSession
      language: CSharp
      name:
        CSharp: StartEditSession()
        VB: StartEditSession()
      nameWithType:
        CSharp: VirgisLayer<T, S>.StartEditSession()
        VB: VirgisLayer(Of T, S).StartEditSession()
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>.StartEditSession()
        VB: Virgis.VirgisLayer(Of T, S).StartEditSession()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: StartEditSession
        path: ''
        startLine: 5022
      summary: "\nCalled when an edit session starts\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void StartEditSession()
          VB: Public Overridable Sub StartEditSession
      overload: Virgis.VirgisLayer`2.StartEditSession*
      implements:
      - Virgis.IVirgisEntity.StartEditSession
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisLayer`2.ExitEditSession(System.Boolean)
      commentId: M:Virgis.VirgisLayer`2.ExitEditSession(System.Boolean)
      language: CSharp
      name:
        CSharp: ExitEditSession(Boolean)
        VB: ExitEditSession(Boolean)
      nameWithType:
        CSharp: VirgisLayer<T, S>.ExitEditSession(Boolean)
        VB: VirgisLayer(Of T, S).ExitEditSession(Boolean)
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>.ExitEditSession(System.Boolean)
        VB: Virgis.VirgisLayer(Of T, S).ExitEditSession(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: ExitEditSession
        path: ''
        startLine: 5030
      summary: "\nCalled when an edit session ends\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void ExitEditSession(bool saved)
          VB: Public Overridable Sub ExitEditSession(saved As Boolean)
        parameters:
        - id: saved
          type: System.Boolean
          description: true if stop and save, false if stop and discard
      overload: Virgis.VirgisLayer`2.ExitEditSession*
      implements:
      - Virgis.IVirgisEntity.ExitEditSession(System.Boolean)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisLayer`2.Selected(Virgis.SelectionTypes)
      commentId: M:Virgis.VirgisLayer`2.Selected(Virgis.SelectionTypes)
      language: CSharp
      name:
        CSharp: Selected(SelectionTypes)
        VB: Selected(SelectionTypes)
      nameWithType:
        CSharp: VirgisLayer<T, S>.Selected(SelectionTypes)
        VB: VirgisLayer(Of T, S).Selected(SelectionTypes)
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>.Selected(Virgis.SelectionTypes)
        VB: Virgis.VirgisLayer(Of T, S).Selected(Virgis.SelectionTypes)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Selected
        path: ''
        startLine: 5038
      summary: "\ncalled when a daughter IVirgisEntity is selected\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Selected(SelectionTypes button)
          VB: Public Overridable Sub Selected(button As SelectionTypes)
        parameters:
        - id: button
          type: Virgis.SelectionTypes
          description: SelectionType
      overload: Virgis.VirgisLayer`2.Selected*
      implements:
      - Virgis.IVirgisEntity.Selected(Virgis.SelectionTypes)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisLayer`2.UnSelected(Virgis.SelectionTypes)
      commentId: M:Virgis.VirgisLayer`2.UnSelected(Virgis.SelectionTypes)
      language: CSharp
      name:
        CSharp: UnSelected(SelectionTypes)
        VB: UnSelected(SelectionTypes)
      nameWithType:
        CSharp: VirgisLayer<T, S>.UnSelected(SelectionTypes)
        VB: VirgisLayer(Of T, S).UnSelected(SelectionTypes)
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>.UnSelected(Virgis.SelectionTypes)
        VB: Virgis.VirgisLayer(Of T, S).UnSelected(Virgis.SelectionTypes)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: UnSelected
        path: ''
        startLine: 5046
      summary: "\nCalled when a daughter IVirgisEntity is UnSelected\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void UnSelected(SelectionTypes button)
          VB: Public Overridable Sub UnSelected(button As SelectionTypes)
        parameters:
        - id: button
          type: Virgis.SelectionTypes
          description: SelectionType
      overload: Virgis.VirgisLayer`2.UnSelected*
      implements:
      - Virgis.IVirgisEntity.UnSelected(Virgis.SelectionTypes)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisLayer`2.GetClosest(Vector3,Guid[])
      commentId: M:Virgis.VirgisLayer`2.GetClosest(Vector3,Guid[])
      language: CSharp
      name:
        CSharp: GetClosest(Vector3, Guid[])
        VB: GetClosest(Vector3, Guid())
      nameWithType:
        CSharp: VirgisLayer<T, S>.GetClosest(Vector3, Guid[])
        VB: VirgisLayer(Of T, S).GetClosest(Vector3, Guid())
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>.GetClosest(Vector3, Guid[])
        VB: Virgis.VirgisLayer(Of T, S).GetClosest(Vector3, Guid())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetClosest
        path: ''
        startLine: 5055
      summary: "\nGet the Closest Feature to the coordinates. Exclude any Component Ids in the Exclude Array. The exclude lis  is primarily used to avoid a GetClosest to a Faeture picking up the feature itself\n"
      example: []
      syntax:
        content:
          CSharp: public VirgisFeature GetClosest(Vector3 coords, Guid[] exclude)
          VB: Public Function GetClosest(coords As Vector3, exclude As Guid()) As VirgisFeature
        parameters:
        - id: coords
          type: Vector3
          description: 'coordinates '
        - id: exclude
          type: Guid[]
        return:
          type: Virgis.VirgisFeature
          description: returns the featue contained in an enitity of type S
      overload: Virgis.VirgisLayer`2.GetClosest*
      implements:
      - Virgis.IVirgisEntity.GetClosest(Vector3,Guid[])
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisLayer`2.GetFeature(Guid)
      commentId: M:Virgis.VirgisLayer`2.GetFeature(Guid)
      language: CSharp
      name:
        CSharp: GetFeature(Guid)
        VB: GetFeature(Guid)
      nameWithType:
        CSharp: VirgisLayer<T, S>.GetFeature(Guid)
        VB: VirgisLayer(Of T, S).GetFeature(Guid)
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>.GetFeature(Guid)
        VB: Virgis.VirgisLayer(Of T, S).GetFeature(Guid)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetFeature
        path: ''
        startLine: 5068
      summary: "\nGet the feature that matches the ID provided \n"
      example: []
      syntax:
        content:
          CSharp: public VirgisFeature GetFeature(Guid id)
          VB: Public Function GetFeature(id As Guid) As VirgisFeature
        parameters:
        - id: id
          type: Guid
          description: ID
        return:
          type: Virgis.VirgisFeature
          description: returns the featue contained in an enitity of type S
      overload: Virgis.VirgisLayer`2.GetFeature*
      implements:
      - Virgis.IVirgisLayer.GetFeature(Guid)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisLayer`2.GetId
      commentId: M:Virgis.VirgisLayer`2.GetId
      language: CSharp
      name:
        CSharp: GetId()
        VB: GetId()
      nameWithType:
        CSharp: VirgisLayer<T, S>.GetId()
        VB: VirgisLayer(Of T, S).GetId()
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>.GetId()
        VB: Virgis.VirgisLayer(Of T, S).GetId()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetId
        path: ''
        startLine: 5076
      summary: "\nFecth the layer GUID\n"
      example: []
      syntax:
        content:
          CSharp: public Guid GetId()
          VB: Public Function GetId As Guid
        return:
          type: Guid
          description: GUID
      overload: Virgis.VirgisLayer`2.GetId*
      implements:
      - Virgis.IVirgisEntity.GetId
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisLayer`2.GetMetadata
      commentId: M:Virgis.VirgisLayer`2.GetMetadata
      language: CSharp
      name:
        CSharp: GetMetadata()
        VB: GetMetadata()
      nameWithType:
        CSharp: VirgisLayer<T, S>.GetMetadata()
        VB: VirgisLayer(Of T, S).GetMetadata()
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>.GetMetadata()
        VB: Virgis.VirgisLayer(Of T, S).GetMetadata()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetMetadata
        path: ''
        startLine: 5084
      summary: "\nFetch the metadata for this Layer\n"
      example: []
      syntax:
        content:
          CSharp: public RecordSet GetMetadata()
          VB: Public Function GetMetadata As RecordSet
        return:
          type: RecordSet
          description: ''
      overload: Virgis.VirgisLayer`2.GetMetadata*
      implements:
      - Virgis.IVirgisEntity.GetMetadata
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisLayer`2.GetFeatureShape
      commentId: M:Virgis.VirgisLayer`2.GetFeatureShape
      language: CSharp
      name:
        CSharp: GetFeatureShape()
        VB: GetFeatureShape()
      nameWithType:
        CSharp: VirgisLayer<T, S>.GetFeatureShape()
        VB: VirgisLayer(Of T, S).GetFeatureShape()
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>.GetFeatureShape()
        VB: Virgis.VirgisLayer(Of T, S).GetFeatureShape()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetFeatureShape
        path: ''
        startLine: 5089
      syntax:
        content:
          CSharp: public virtual GameObject GetFeatureShape()
          VB: Public Overridable Function GetFeatureShape As GameObject
        return:
          type: GameObject
      overload: Virgis.VirgisLayer`2.GetFeatureShape*
      implements:
      - Virgis.IVirgisLayer.GetFeatureShape
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisLayer`2.SetVisible(System.Boolean)
      commentId: M:Virgis.VirgisLayer`2.SetVisible(System.Boolean)
      language: CSharp
      name:
        CSharp: SetVisible(Boolean)
        VB: SetVisible(Boolean)
      nameWithType:
        CSharp: VirgisLayer<T, S>.SetVisible(Boolean)
        VB: VirgisLayer(Of T, S).SetVisible(Boolean)
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>.SetVisible(System.Boolean)
        VB: Virgis.VirgisLayer(Of T, S).SetVisible(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SetVisible
        path: ''
        startLine: 5093
      syntax:
        content:
          CSharp: public void SetVisible(bool visible)
          VB: Public Sub SetVisible(visible As Boolean)
        parameters:
        - id: visible
          type: System.Boolean
      overload: Virgis.VirgisLayer`2.SetVisible*
      implements:
      - Virgis.IVirgisLayer.SetVisible(System.Boolean)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisLayer`2.IsVisible
      commentId: M:Virgis.VirgisLayer`2.IsVisible
      language: CSharp
      name:
        CSharp: IsVisible()
        VB: IsVisible()
      nameWithType:
        CSharp: VirgisLayer<T, S>.IsVisible()
        VB: VirgisLayer(Of T, S).IsVisible()
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>.IsVisible()
        VB: Virgis.VirgisLayer(Of T, S).IsVisible()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: IsVisible
        path: ''
        startLine: 5104
      summary: "\nTest if this layer is currently visible\n"
      example: []
      syntax:
        content:
          CSharp: public bool IsVisible()
          VB: Public Function IsVisible As Boolean
        return:
          type: System.Boolean
          description: Boolean
      overload: Virgis.VirgisLayer`2.IsVisible*
      implements:
      - Virgis.IVirgisLayer.IsVisible
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisLayer`2.SetEditable(System.Boolean)
      commentId: M:Virgis.VirgisLayer`2.SetEditable(System.Boolean)
      language: CSharp
      name:
        CSharp: SetEditable(Boolean)
        VB: SetEditable(Boolean)
      nameWithType:
        CSharp: VirgisLayer<T, S>.SetEditable(Boolean)
        VB: VirgisLayer(Of T, S).SetEditable(Boolean)
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>.SetEditable(System.Boolean)
        VB: Virgis.VirgisLayer(Of T, S).SetEditable(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SetEditable
        path: ''
        startLine: 5116
      summary: "\nSets a marker that this particular layer is being edited.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetEditable(bool inSession)
          VB: Public Sub SetEditable(inSession As Boolean)
        parameters:
        - id: inSession
          type: System.Boolean
          description: ''
      overload: Virgis.VirgisLayer`2.SetEditable*
      implements:
      - Virgis.IVirgisLayer.SetEditable(System.Boolean)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisLayer`2.IsEditable
      commentId: M:Virgis.VirgisLayer`2.IsEditable
      language: CSharp
      name:
        CSharp: IsEditable()
        VB: IsEditable()
      nameWithType:
        CSharp: VirgisLayer<T, S>.IsEditable()
        VB: VirgisLayer(Of T, S).IsEditable()
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>.IsEditable()
        VB: Virgis.VirgisLayer(Of T, S).IsEditable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: IsEditable
        path: ''
        startLine: 5124
      summary: "\nTest to see if this layer is editable\n"
      example: []
      syntax:
        content:
          CSharp: public bool IsEditable()
          VB: Public Function IsEditable As Boolean
        return:
          type: System.Boolean
          description: Boolean
      overload: Virgis.VirgisLayer`2.IsEditable*
      implements:
      - Virgis.IVirgisLayer.IsEditable
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisLayer`2.Equals(System.Object)
      commentId: M:Virgis.VirgisLayer`2.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: VirgisLayer<T, S>.Equals(Object)
        VB: VirgisLayer(Of T, S).Equals(Object)
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>.Equals(System.Object)
        VB: Virgis.VirgisLayer(Of T, S).Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Equals
        path: ''
        startLine: 5128
      syntax:
        content:
          CSharp: public override bool Equals(object obj)
          VB: Public Overrides Function Equals(obj As Object) As Boolean
        parameters:
        - id: obj
          type: System.Object
        return:
          type: System.Boolean
      overload: Virgis.VirgisLayer`2.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.VirgisLayer`2.GetHashCode
      commentId: M:Virgis.VirgisLayer`2.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: VirgisLayer<T, S>.GetHashCode()
        VB: VirgisLayer(Of T, S).GetHashCode()
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>.GetHashCode()
        VB: Virgis.VirgisLayer(Of T, S).GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetHashCode
        path: ''
        startLine: 5138
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Virgis.VirgisLayer`2.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
      commentId: M:Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
      language: CSharp
      name:
        CSharp: Equals(VirgisLayer<T, S>)
        VB: Equals(VirgisLayer(Of T, S))
      nameWithType:
        CSharp: VirgisLayer<T, S>.Equals(VirgisLayer<T, S>)
        VB: VirgisLayer(Of T, S).Equals(VirgisLayer(Of T, S))
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>.Equals(Virgis.VirgisLayer<T, S>)
        VB: Virgis.VirgisLayer(Of T, S).Equals(Virgis.VirgisLayer(Of T, S))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Equals
        path: ''
        startLine: 5141
      syntax:
        content:
          CSharp: public bool Equals(VirgisLayer<T, S> other)
          VB: Public Function Equals(other As VirgisLayer(Of T, S)) As Boolean
        parameters:
        - id: other
          type: Virgis.VirgisLayer`2
        return:
          type: System.Boolean
      overload: Virgis.VirgisLayer`2.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.KdTree`1
    commentId: T:Virgis.KdTree`1
    language: CSharp
    name:
      CSharp: KdTree<T>
      VB: KdTree(Of T)
    nameWithType:
      CSharp: KdTree<T>
      VB: KdTree(Of T)
    qualifiedName:
      CSharp: Virgis.KdTree<T>
      VB: Virgis.KdTree(Of T)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: KdTree
      path: ''
      startLine: 5670
    syntax:
      content:
        CSharp: 'public class KdTree<T> : IEnumerable<T>, IEnumerable where T : Component'
        VB: >-
          Public Class KdTree(Of T As Component)

              Inherits IEnumerable(Of T)

              Implements IEnumerable
      typeParameters:
      - id: T
    inheritance:
    - System.Object
    implements:
    - IEnumerable
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.KdTree`1._root
      commentId: F:Virgis.KdTree`1._root
      language: CSharp
      name:
        CSharp: _root
        VB: _root
      nameWithType:
        CSharp: KdTree<T>._root
        VB: KdTree(Of T)._root
      qualifiedName:
        CSharp: Virgis.KdTree<T>._root
        VB: Virgis.KdTree(Of T)._root
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _root
        path: ''
        startLine: 5672
      syntax:
        content:
          CSharp: protected KdTree<T>.KdNode _root
          VB: Protected _root As KdTree(Of T).KdNode
        return:
          type: Virgis.KdTree`1.KdNode
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.KdTree`1._last
      commentId: F:Virgis.KdTree`1._last
      language: CSharp
      name:
        CSharp: _last
        VB: _last
      nameWithType:
        CSharp: KdTree<T>._last
        VB: KdTree(Of T)._last
      qualifiedName:
        CSharp: Virgis.KdTree<T>._last
        VB: Virgis.KdTree(Of T)._last
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _last
        path: ''
        startLine: 5673
      syntax:
        content:
          CSharp: protected KdTree<T>.KdNode _last
          VB: Protected _last As KdTree(Of T).KdNode
        return:
          type: Virgis.KdTree`1.KdNode
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.KdTree`1._count
      commentId: F:Virgis.KdTree`1._count
      language: CSharp
      name:
        CSharp: _count
        VB: _count
      nameWithType:
        CSharp: KdTree<T>._count
        VB: KdTree(Of T)._count
      qualifiedName:
        CSharp: Virgis.KdTree<T>._count
        VB: Virgis.KdTree(Of T)._count
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _count
        path: ''
        startLine: 5674
      syntax:
        content:
          CSharp: protected int _count
          VB: Protected _count As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.KdTree`1._just2D
      commentId: F:Virgis.KdTree`1._just2D
      language: CSharp
      name:
        CSharp: _just2D
        VB: _just2D
      nameWithType:
        CSharp: KdTree<T>._just2D
        VB: KdTree(Of T)._just2D
      qualifiedName:
        CSharp: Virgis.KdTree<T>._just2D
        VB: Virgis.KdTree(Of T)._just2D
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _just2D
        path: ''
        startLine: 5675
      syntax:
        content:
          CSharp: protected bool _just2D
          VB: Protected _just2D As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.KdTree`1._LastUpdate
      commentId: F:Virgis.KdTree`1._LastUpdate
      language: CSharp
      name:
        CSharp: _LastUpdate
        VB: _LastUpdate
      nameWithType:
        CSharp: KdTree<T>._LastUpdate
        VB: KdTree(Of T)._LastUpdate
      qualifiedName:
        CSharp: Virgis.KdTree<T>._LastUpdate
        VB: Virgis.KdTree(Of T)._LastUpdate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _LastUpdate
        path: ''
        startLine: 5676
      syntax:
        content:
          CSharp: protected float _LastUpdate
          VB: Protected _LastUpdate As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.KdTree`1._open
      commentId: F:Virgis.KdTree`1._open
      language: CSharp
      name:
        CSharp: _open
        VB: _open
      nameWithType:
        CSharp: KdTree<T>._open
        VB: KdTree(Of T)._open
      qualifiedName:
        CSharp: Virgis.KdTree<T>._open
        VB: Virgis.KdTree(Of T)._open
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _open
        path: ''
        startLine: 5677
      syntax:
        content:
          CSharp: protected KdTree<T>.KdNode[] _open
          VB: Protected _open As KdTree(Of T).KdNode()
        return:
          type: Virgis.KdTree`1.KdNode[]
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.KdTree`1.Count
      commentId: P:Virgis.KdTree`1.Count
      language: CSharp
      name:
        CSharp: Count
        VB: Count
      nameWithType:
        CSharp: KdTree<T>.Count
        VB: KdTree(Of T).Count
      qualifiedName:
        CSharp: Virgis.KdTree<T>.Count
        VB: Virgis.KdTree(Of T).Count
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Count
        path: ''
        startLine: 5679
      syntax:
        content:
          CSharp: public int Count { get; }
          VB: Public ReadOnly Property Count As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Virgis.KdTree`1.Count*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Virgis.KdTree`1.IsReadOnly
      commentId: P:Virgis.KdTree`1.IsReadOnly
      language: CSharp
      name:
        CSharp: IsReadOnly
        VB: IsReadOnly
      nameWithType:
        CSharp: KdTree<T>.IsReadOnly
        VB: KdTree(Of T).IsReadOnly
      qualifiedName:
        CSharp: Virgis.KdTree<T>.IsReadOnly
        VB: Virgis.KdTree(Of T).IsReadOnly
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: IsReadOnly
        path: ''
        startLine: 5680
      syntax:
        content:
          CSharp: public bool IsReadOnly { get; }
          VB: Public ReadOnly Property IsReadOnly As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Virgis.KdTree`1.IsReadOnly*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Virgis.KdTree`1.AverageSearchLength
      commentId: P:Virgis.KdTree`1.AverageSearchLength
      language: CSharp
      name:
        CSharp: AverageSearchLength
        VB: AverageSearchLength
      nameWithType:
        CSharp: KdTree<T>.AverageSearchLength
        VB: KdTree(Of T).AverageSearchLength
      qualifiedName:
        CSharp: Virgis.KdTree<T>.AverageSearchLength
        VB: Virgis.KdTree(Of T).AverageSearchLength
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: AverageSearchLength
        path: ''
        startLine: 5681
      syntax:
        content:
          CSharp: public float AverageSearchLength { get; protected set; }
          VB: Public Property AverageSearchLength As Single
        parameters: []
        return:
          type: System.Single
      overload: Virgis.KdTree`1.AverageSearchLength*
      modifiers:
        CSharp:
        - public
        - get
        - protected set
        VB:
        - Public
        - Get
        - Protected Set
    - id: Virgis.KdTree`1.AverageSearchDeep
      commentId: P:Virgis.KdTree`1.AverageSearchDeep
      language: CSharp
      name:
        CSharp: AverageSearchDeep
        VB: AverageSearchDeep
      nameWithType:
        CSharp: KdTree<T>.AverageSearchDeep
        VB: KdTree(Of T).AverageSearchDeep
      qualifiedName:
        CSharp: Virgis.KdTree<T>.AverageSearchDeep
        VB: Virgis.KdTree(Of T).AverageSearchDeep
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: AverageSearchDeep
        path: ''
        startLine: 5682
      syntax:
        content:
          CSharp: public float AverageSearchDeep { get; protected set; }
          VB: Public Property AverageSearchDeep As Single
        parameters: []
        return:
          type: System.Single
      overload: Virgis.KdTree`1.AverageSearchDeep*
      modifiers:
        CSharp:
        - public
        - get
        - protected set
        VB:
        - Public
        - Get
        - Protected Set
    - id: Virgis.KdTree`1.#ctor(System.Boolean)
      commentId: M:Virgis.KdTree`1.#ctor(System.Boolean)
      language: CSharp
      name:
        CSharp: KdTree(Boolean)
        VB: KdTree(Boolean)
      nameWithType:
        CSharp: KdTree<T>.KdTree(Boolean)
        VB: KdTree(Of T).KdTree(Boolean)
      qualifiedName:
        CSharp: Virgis.KdTree<T>.KdTree(System.Boolean)
        VB: Virgis.KdTree(Of T).KdTree(System.Boolean)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: .ctor
        path: ''
        startLine: 5688
      summary: "\ncreate a tree\n"
      example: []
      syntax:
        content:
          CSharp: public KdTree(bool just2D = false)
          VB: Public Sub New(just2D As Boolean = False)
        parameters:
        - id: just2D
          type: System.Boolean
          description: just use x/z
      overload: Virgis.KdTree`1.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.KdTree`1.Item(System.Int32)
      commentId: P:Virgis.KdTree`1.Item(System.Int32)
      language: CSharp
      name:
        CSharp: Item[Int32]
        VB: Item(Int32)
      nameWithType:
        CSharp: KdTree<T>.Item[Int32]
        VB: KdTree(Of T).Item(Int32)
      qualifiedName:
        CSharp: Virgis.KdTree<T>.Item[System.Int32]
        VB: Virgis.KdTree(Of T).Item(System.Int32)
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: this[]
        path: ''
        startLine: 5693
      syntax:
        content:
          CSharp: public T this[int key] { get; }
          VB: Public ReadOnly Property Item(key As Integer) As T
        parameters:
        - id: key
          type: System.Int32
        return:
          type: '{T}'
      overload: Virgis.KdTree`1.Item*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Virgis.KdTree`1.Add(`0)
      commentId: M:Virgis.KdTree`1.Add(`0)
      language: CSharp
      name:
        CSharp: Add(T)
        VB: Add(T)
      nameWithType:
        CSharp: KdTree<T>.Add(T)
        VB: KdTree(Of T).Add(T)
      qualifiedName:
        CSharp: Virgis.KdTree<T>.Add(T)
        VB: Virgis.KdTree(Of T).Add(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Add
        path: ''
        startLine: 5710
      summary: "\nadd item\n"
      example: []
      syntax:
        content:
          CSharp: public void Add(T item)
          VB: Public Sub Add(item As T)
        parameters:
        - id: item
          type: '{T}'
          description: item
      overload: Virgis.KdTree`1.Add*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.KdTree`1.AddAll(List{`0})
      commentId: M:Virgis.KdTree`1.AddAll(List{`0})
      language: CSharp
      name:
        CSharp: AddAll(List<T>)
        VB: AddAll(List(Of T))
      nameWithType:
        CSharp: KdTree<T>.AddAll(List<T>)
        VB: KdTree(Of T).AddAll(List(Of T))
      qualifiedName:
        CSharp: Virgis.KdTree<T>.AddAll(List<T>)
        VB: Virgis.KdTree(Of T).AddAll(List(Of T))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: AddAll
        path: ''
        startLine: 5719
      summary: "\nbatch add items\n"
      example: []
      syntax:
        content:
          CSharp: public void AddAll(List<T> items)
          VB: Public Sub AddAll(items As List(Of T))
        parameters:
        - id: items
          type: List{{T}}
          description: items
      overload: Virgis.KdTree`1.AddAll*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.KdTree`1.FindAll(Predicate{`0})
      commentId: M:Virgis.KdTree`1.FindAll(Predicate{`0})
      language: CSharp
      name:
        CSharp: FindAll(Predicate<T>)
        VB: FindAll(Predicate(Of T))
      nameWithType:
        CSharp: KdTree<T>.FindAll(Predicate<T>)
        VB: KdTree(Of T).FindAll(Predicate(Of T))
      qualifiedName:
        CSharp: Virgis.KdTree<T>.FindAll(Predicate<T>)
        VB: Virgis.KdTree(Of T).FindAll(Predicate(Of T))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: FindAll
        path: ''
        startLine: 5729
      summary: "\nfind all objects that matches the given predicate\n"
      example: []
      syntax:
        content:
          CSharp: public KdTree<T> FindAll(Predicate<T> match)
          VB: Public Function FindAll(match As Predicate(Of T)) As KdTree(Of T)
        parameters:
        - id: match
          type: Predicate{{T}}
          description: lamda expression
        return:
          type: Virgis.KdTree`1
      overload: Virgis.KdTree`1.FindAll*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.KdTree`1.Find(Predicate{`0})
      commentId: M:Virgis.KdTree`1.Find(Predicate{`0})
      language: CSharp
      name:
        CSharp: Find(Predicate<T>)
        VB: Find(Predicate(Of T))
      nameWithType:
        CSharp: KdTree<T>.Find(Predicate<T>)
        VB: KdTree(Of T).Find(Predicate(Of T))
      qualifiedName:
        CSharp: Virgis.KdTree<T>.Find(Predicate<T>)
        VB: Virgis.KdTree(Of T).Find(Predicate(Of T))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Find
        path: ''
        startLine: 5742
      summary: "\nfind first object that matches the given predicate\n"
      example: []
      syntax:
        content:
          CSharp: public T Find(Predicate<T> match)
          VB: Public Function Find(match As Predicate(Of T)) As T
        parameters:
        - id: match
          type: Predicate{{T}}
          description: lamda expression
        return:
          type: '{T}'
      overload: Virgis.KdTree`1.Find*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.KdTree`1.RemoveAt(System.Int32)
      commentId: M:Virgis.KdTree`1.RemoveAt(System.Int32)
      language: CSharp
      name:
        CSharp: RemoveAt(Int32)
        VB: RemoveAt(Int32)
      nameWithType:
        CSharp: KdTree<T>.RemoveAt(Int32)
        VB: KdTree(Of T).RemoveAt(Int32)
      qualifiedName:
        CSharp: Virgis.KdTree<T>.RemoveAt(System.Int32)
        VB: Virgis.KdTree(Of T).RemoveAt(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: RemoveAt
        path: ''
        startLine: 5757
      summary: "\nRemove at position i (position in list or loop)\n"
      example: []
      syntax:
        content:
          CSharp: public void RemoveAt(int i)
          VB: Public Sub RemoveAt(i As Integer)
        parameters:
        - id: i
          type: System.Int32
      overload: Virgis.KdTree`1.RemoveAt*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.KdTree`1.RemoveAll(Predicate{`0})
      commentId: M:Virgis.KdTree`1.RemoveAll(Predicate{`0})
      language: CSharp
      name:
        CSharp: RemoveAll(Predicate<T>)
        VB: RemoveAll(Predicate(Of T))
      nameWithType:
        CSharp: KdTree<T>.RemoveAll(Predicate<T>)
        VB: KdTree(Of T).RemoveAll(Predicate(Of T))
      qualifiedName:
        CSharp: Virgis.KdTree<T>.RemoveAll(Predicate<T>)
        VB: Virgis.KdTree(Of T).RemoveAll(Predicate(Of T))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: RemoveAll
        path: ''
        startLine: 5775
      summary: "\nremove all objects that matches the given predicate\n"
      example: []
      syntax:
        content:
          CSharp: public void RemoveAll(Predicate<T> match)
          VB: Public Sub RemoveAll(match As Predicate(Of T))
        parameters:
        - id: match
          type: Predicate{{T}}
          description: lamda expression
      overload: Virgis.KdTree`1.RemoveAll*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.KdTree`1.CountAll(Predicate{`0})
      commentId: M:Virgis.KdTree`1.CountAll(Predicate{`0})
      language: CSharp
      name:
        CSharp: CountAll(Predicate<T>)
        VB: CountAll(Predicate(Of T))
      nameWithType:
        CSharp: KdTree<T>.CountAll(Predicate<T>)
        VB: KdTree(Of T).CountAll(Predicate(Of T))
      qualifiedName:
        CSharp: Virgis.KdTree<T>.CountAll(Predicate<T>)
        VB: Virgis.KdTree(Of T).CountAll(Predicate(Of T))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CountAll
        path: ''
        startLine: 5794
      summary: "\ncount all objects that matches the given predicate\n"
      example: []
      syntax:
        content:
          CSharp: public int CountAll(Predicate<T> match)
          VB: Public Function CountAll(match As Predicate(Of T)) As Integer
        parameters:
        - id: match
          type: Predicate{{T}}
          description: lamda expression
        return:
          type: System.Int32
          description: matching object count
      overload: Virgis.KdTree`1.CountAll*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.KdTree`1.Clear
      commentId: M:Virgis.KdTree`1.Clear
      language: CSharp
      name:
        CSharp: Clear()
        VB: Clear()
      nameWithType:
        CSharp: KdTree<T>.Clear()
        VB: KdTree(Of T).Clear()
      qualifiedName:
        CSharp: Virgis.KdTree<T>.Clear()
        VB: Virgis.KdTree(Of T).Clear()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Clear
        path: ''
        startLine: 5806
      summary: "\nclear tree\n"
      example: []
      syntax:
        content:
          CSharp: public void Clear()
          VB: Public Sub Clear
      overload: Virgis.KdTree`1.Clear*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.KdTree`1.UpdatePositions(System.Single)
      commentId: M:Virgis.KdTree`1.UpdatePositions(System.Single)
      language: CSharp
      name:
        CSharp: UpdatePositions(Single)
        VB: UpdatePositions(Single)
      nameWithType:
        CSharp: KdTree<T>.UpdatePositions(Single)
        VB: KdTree(Of T).UpdatePositions(Single)
      qualifiedName:
        CSharp: Virgis.KdTree<T>.UpdatePositions(System.Single)
        VB: Virgis.KdTree(Of T).UpdatePositions(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: UpdatePositions
        path: ''
        startLine: 5820
      summary: "\nUpdate positions (if objects moved)\n"
      example: []
      syntax:
        content:
          CSharp: public void UpdatePositions(float rate)
          VB: Public Sub UpdatePositions(rate As Single)
        parameters:
        - id: rate
          type: System.Single
          description: Updates per second
      overload: Virgis.KdTree`1.UpdatePositions*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.KdTree`1.UpdatePositions
      commentId: M:Virgis.KdTree`1.UpdatePositions
      language: CSharp
      name:
        CSharp: UpdatePositions()
        VB: UpdatePositions()
      nameWithType:
        CSharp: KdTree<T>.UpdatePositions()
        VB: KdTree(Of T).UpdatePositions()
      qualifiedName:
        CSharp: Virgis.KdTree<T>.UpdatePositions()
        VB: Virgis.KdTree(Of T).UpdatePositions()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: UpdatePositions
        path: ''
        startLine: 5833
      summary: "\nUpdate positions (if objects moved)\n"
      example: []
      syntax:
        content:
          CSharp: public void UpdatePositions()
          VB: Public Sub UpdatePositions
      overload: Virgis.KdTree`1.UpdatePositions*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.KdTree`1.GetEnumerator
      commentId: M:Virgis.KdTree`1.GetEnumerator
      language: CSharp
      name:
        CSharp: GetEnumerator()
        VB: GetEnumerator()
      nameWithType:
        CSharp: KdTree<T>.GetEnumerator()
        VB: KdTree(Of T).GetEnumerator()
      qualifiedName:
        CSharp: Virgis.KdTree<T>.GetEnumerator()
        VB: Virgis.KdTree(Of T).GetEnumerator()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetEnumerator
        path: ''
        startLine: 5861
      summary: "\nMethod to enable foreach-loops\n"
      example: []
      syntax:
        content:
          CSharp: public IEnumerator<T> GetEnumerator()
          VB: Public Function GetEnumerator As IEnumerator(Of T)
        return:
          type: IEnumerator{{T}}
          description: Enumberator
      overload: Virgis.KdTree`1.GetEnumerator*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.KdTree`1.ToList
      commentId: M:Virgis.KdTree`1.ToList
      language: CSharp
      name:
        CSharp: ToList()
        VB: ToList()
      nameWithType:
        CSharp: KdTree<T>.ToList()
        VB: KdTree(Of T).ToList()
      qualifiedName:
        CSharp: Virgis.KdTree<T>.ToList()
        VB: Virgis.KdTree(Of T).ToList()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: ToList
        path: ''
        startLine: 5875
      summary: "\nConvert to list\n"
      example: []
      syntax:
        content:
          CSharp: public List<T> ToList()
          VB: Public Function ToList As List(Of T)
        return:
          type: List{{T}}
          description: list
      overload: Virgis.KdTree`1.ToList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.KdTree`1._distance(Vector3,Vector3)
      commentId: M:Virgis.KdTree`1._distance(Vector3,Vector3)
      language: CSharp
      name:
        CSharp: _distance(Vector3, Vector3)
        VB: _distance(Vector3, Vector3)
      nameWithType:
        CSharp: KdTree<T>._distance(Vector3, Vector3)
        VB: KdTree(Of T)._distance(Vector3, Vector3)
      qualifiedName:
        CSharp: Virgis.KdTree<T>._distance(Vector3, Vector3)
        VB: Virgis.KdTree(Of T)._distance(Vector3, Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _distance
        path: ''
        startLine: 5891
      syntax:
        content:
          CSharp: protected float _distance(Vector3 a, Vector3 b)
          VB: Protected Function _distance(a As Vector3, b As Vector3) As Single
        parameters:
        - id: a
          type: Vector3
        - id: b
          type: Vector3
        return:
          type: System.Single
      overload: Virgis.KdTree`1._distance*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.KdTree`1._getSplitValue(System.Int32,Vector3)
      commentId: M:Virgis.KdTree`1._getSplitValue(System.Int32,Vector3)
      language: CSharp
      name:
        CSharp: _getSplitValue(Int32, Vector3)
        VB: _getSplitValue(Int32, Vector3)
      nameWithType:
        CSharp: KdTree<T>._getSplitValue(Int32, Vector3)
        VB: KdTree(Of T)._getSplitValue(Int32, Vector3)
      qualifiedName:
        CSharp: Virgis.KdTree<T>._getSplitValue(System.Int32, Vector3)
        VB: Virgis.KdTree(Of T)._getSplitValue(System.Int32, Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _getSplitValue
        path: ''
        startLine: 5898
      syntax:
        content:
          CSharp: protected float _getSplitValue(int level, Vector3 position)
          VB: Protected Function _getSplitValue(level As Integer, position As Vector3) As Single
        parameters:
        - id: level
          type: System.Int32
        - id: position
          type: Vector3
        return:
          type: System.Single
      overload: Virgis.KdTree`1._getSplitValue*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.KdTree`1.FindClosest(Vector3)
      commentId: M:Virgis.KdTree`1.FindClosest(Vector3)
      language: CSharp
      name:
        CSharp: FindClosest(Vector3)
        VB: FindClosest(Vector3)
      nameWithType:
        CSharp: KdTree<T>.FindClosest(Vector3)
        VB: KdTree(Of T).FindClosest(Vector3)
      qualifiedName:
        CSharp: Virgis.KdTree<T>.FindClosest(Vector3)
        VB: Virgis.KdTree(Of T).FindClosest(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: FindClosest
        path: ''
        startLine: 5962
      summary: "\nFind closest object to given position\n"
      example: []
      syntax:
        content:
          CSharp: public T FindClosest(Vector3 position)
          VB: Public Function FindClosest(position As Vector3) As T
        parameters:
        - id: position
          type: Vector3
          description: position
        return:
          type: '{T}'
          description: closest object
      overload: Virgis.KdTree`1.FindClosest*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.KdTree`1.FindClose(Vector3)
      commentId: M:Virgis.KdTree`1.FindClose(Vector3)
      language: CSharp
      name:
        CSharp: FindClose(Vector3)
        VB: FindClose(Vector3)
      nameWithType:
        CSharp: KdTree<T>.FindClose(Vector3)
        VB: KdTree(Of T).FindClose(Vector3)
      qualifiedName:
        CSharp: Virgis.KdTree<T>.FindClose(Vector3)
        VB: Virgis.KdTree(Of T).FindClose(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: FindClose
        path: ''
        startLine: 5972
      summary: "\nFind close objects to given position\n"
      example: []
      syntax:
        content:
          CSharp: public IEnumerable<T> FindClose(Vector3 position)
          VB: Public Function FindClose(position As Vector3) As IEnumerable(Of T)
        parameters:
        - id: position
          type: Vector3
          description: position
        return:
          type: IEnumerable{{T}}
          description: close object
      overload: Virgis.KdTree`1.FindClose*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.KdTree`1._findClosest(Vector3,List{`0})
      commentId: M:Virgis.KdTree`1._findClosest(Vector3,List{`0})
      language: CSharp
      name:
        CSharp: _findClosest(Vector3, List<T>)
        VB: _findClosest(Vector3, List(Of T))
      nameWithType:
        CSharp: KdTree<T>._findClosest(Vector3, List<T>)
        VB: KdTree(Of T)._findClosest(Vector3, List(Of T))
      qualifiedName:
        CSharp: Virgis.KdTree<T>._findClosest(Vector3, List<T>)
        VB: Virgis.KdTree(Of T)._findClosest(Vector3, List(Of T))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _findClosest
        path: ''
        startLine: 5979
      syntax:
        content:
          CSharp: protected T _findClosest(Vector3 position, List<T> traversed = null)
          VB: Protected Function _findClosest(position As Vector3, traversed As List(Of T) = Nothing) As T
        parameters:
        - id: position
          type: Vector3
        - id: traversed
          type: List{{T}}
        return:
          type: '{T}'
      overload: Virgis.KdTree`1._findClosest*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
  - id: Virgis.KdTree`1.KdNode
    commentId: T:Virgis.KdTree`1.KdNode
    language: CSharp
    name:
      CSharp: KdTree<T>.KdNode
      VB: KdTree(Of T).KdNode
    nameWithType:
      CSharp: KdTree<T>.KdNode
      VB: KdTree(Of T).KdNode
    qualifiedName:
      CSharp: Virgis.KdTree<T>.KdNode
      VB: Virgis.KdTree(Of T).KdNode
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: KdNode
      path: ''
      startLine: 6051
    syntax:
      content:
        CSharp: protected class KdNode
        VB: Protected Class KdNode
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - protected
      - class
      VB:
      - Protected
      - Class
    items: []
- id: Project
  commentId: N:Project
  language: CSharp
  name:
    CSharp: Project
    VB: Project
  nameWithType:
    CSharp: Project
    VB: Project
  qualifiedName:
    CSharp: Project
    VB: Project
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Project.SerializableVector3
    commentId: T:Project.SerializableVector3
    language: CSharp
    name:
      CSharp: SerializableVector3
      VB: SerializableVector3
    nameWithType:
      CSharp: SerializableVector3
      VB: SerializableVector3
    qualifiedName:
      CSharp: Project.SerializableVector3
      VB: Project.SerializableVector3
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Project
    source:
      id: SerializableVector3
      path: ''
      startLine: 5165
    summary: "\nSince unity doesn&apos;t flag the Vector3 as serializable, we\nneed to create our own version. This one will automatically convert\nbetween Vector3 and SerializableVector3\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class SerializableVector3 : Serializable
        VB: >-
          <Serializable>

          Public Class SerializableVector3

              Inherits Serializable
    inheritance:
    - System.Object
    - Project.Serializable
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Project.SerializableVector3.x
      commentId: F:Project.SerializableVector3.x
      language: CSharp
      name:
        CSharp: x
        VB: x
      nameWithType:
        CSharp: SerializableVector3.x
        VB: SerializableVector3.x
      qualifiedName:
        CSharp: Project.SerializableVector3.x
        VB: Project.SerializableVector3.x
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: x
        path: ''
        startLine: 5171
      summary: "\nx component\n"
      example: []
      syntax:
        content:
          CSharp: public float x
          VB: Public x As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.SerializableVector3.y
      commentId: F:Project.SerializableVector3.y
      language: CSharp
      name:
        CSharp: y
        VB: y
      nameWithType:
        CSharp: SerializableVector3.y
        VB: SerializableVector3.y
      qualifiedName:
        CSharp: Project.SerializableVector3.y
        VB: Project.SerializableVector3.y
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: y
        path: ''
        startLine: 5176
      summary: "\ny component\n"
      example: []
      syntax:
        content:
          CSharp: public float y
          VB: Public y As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.SerializableVector3.z
      commentId: F:Project.SerializableVector3.z
      language: CSharp
      name:
        CSharp: z
        VB: z
      nameWithType:
        CSharp: SerializableVector3.z
        VB: SerializableVector3.z
      qualifiedName:
        CSharp: Project.SerializableVector3.z
        VB: Project.SerializableVector3.z
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: z
        path: ''
        startLine: 5181
      summary: "\nz component\n"
      example: []
      syntax:
        content:
          CSharp: public float z
          VB: Public z As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.SerializableVector3.#ctor(System.Single,System.Single,System.Single)
      commentId: M:Project.SerializableVector3.#ctor(System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: SerializableVector3(Single, Single, Single)
        VB: SerializableVector3(Single, Single, Single)
      nameWithType:
        CSharp: SerializableVector3.SerializableVector3(Single, Single, Single)
        VB: SerializableVector3.SerializableVector3(Single, Single, Single)
      qualifiedName:
        CSharp: Project.SerializableVector3.SerializableVector3(System.Single, System.Single, System.Single)
        VB: Project.SerializableVector3.SerializableVector3(System.Single, System.Single, System.Single)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: .ctor
        path: ''
        startLine: 5189
      summary: "\nConstructor\n"
      example: []
      syntax:
        content:
          CSharp: public SerializableVector3(float rX, float rY, float rZ)
          VB: Public Sub New(rX As Single, rY As Single, rZ As Single)
        parameters:
        - id: rX
          type: System.Single
          description: ''
        - id: rY
          type: System.Single
          description: ''
        - id: rZ
          type: System.Single
          description: ''
      overload: Project.SerializableVector3.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.SerializableVector3.#ctor
      commentId: M:Project.SerializableVector3.#ctor
      language: CSharp
      name:
        CSharp: SerializableVector3()
        VB: SerializableVector3()
      nameWithType:
        CSharp: SerializableVector3.SerializableVector3()
        VB: SerializableVector3.SerializableVector3()
      qualifiedName:
        CSharp: Project.SerializableVector3.SerializableVector3()
        VB: Project.SerializableVector3.SerializableVector3()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: .ctor
        path: ''
        startLine: 5196
      syntax:
        content:
          CSharp: public SerializableVector3()
          VB: Public Sub New
      overload: Project.SerializableVector3.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.SerializableVector3.Update(IList{System.Single})
      commentId: M:Project.SerializableVector3.Update(IList{System.Single})
      language: CSharp
      name:
        CSharp: Update(IList<Single>)
        VB: Update(IList(Of Single))
      nameWithType:
        CSharp: SerializableVector3.Update(IList<Single>)
        VB: SerializableVector3.Update(IList(Of Single))
      qualifiedName:
        CSharp: Project.SerializableVector3.Update(IList<System.Single>)
        VB: Project.SerializableVector3.Update(IList(Of System.Single))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Update
        path: ''
        startLine: 5198
      syntax:
        content:
          CSharp: public override void Update(IList<float> r)
          VB: Public Overrides Sub Update(r As IList(Of Single))
        parameters:
        - id: r
          type: IList{System.Single}
      overload: Project.SerializableVector3.Update*
      overridden: Project.Serializable.Update(IList{System.Single})
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Project.SerializableVector3.ToString
      commentId: M:Project.SerializableVector3.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: SerializableVector3.ToString()
        VB: SerializableVector3.ToString()
      qualifiedName:
        CSharp: Project.SerializableVector3.ToString()
        VB: Project.SerializableVector3.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: ToString
        path: ''
        startLine: 5209
      summary: "\nReturns a string representation of the object\n"
      example: []
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
          description: ''
      overload: Project.SerializableVector3.ToString*
      overridden: System.Object.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Project.SerializableVector3.ToArray
      commentId: M:Project.SerializableVector3.ToArray
      language: CSharp
      name:
        CSharp: ToArray()
        VB: ToArray()
      nameWithType:
        CSharp: SerializableVector3.ToArray()
        VB: SerializableVector3.ToArray()
      qualifiedName:
        CSharp: Project.SerializableVector3.ToArray()
        VB: Project.SerializableVector3.ToArray()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: ToArray
        path: ''
        startLine: 5214
      syntax:
        content:
          CSharp: public override float[] ToArray()
          VB: Public Overrides Function ToArray As Single()
        return:
          type: System.Single[]
      overload: Project.SerializableVector3.ToArray*
      overridden: Project.Serializable.ToArray
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Project.SerializableVector3.magnitude
      commentId: P:Project.SerializableVector3.magnitude
      language: CSharp
      name:
        CSharp: magnitude
        VB: magnitude
      nameWithType:
        CSharp: SerializableVector3.magnitude
        VB: SerializableVector3.magnitude
      qualifiedName:
        CSharp: Project.SerializableVector3.magnitude
        VB: Project.SerializableVector3.magnitude
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: magnitude
        path: ''
        startLine: 5219
      syntax:
        content:
          CSharp: public float magnitude { get; }
          VB: Public ReadOnly Property magnitude As Single
        parameters: []
        return:
          type: System.Single
      overload: Project.SerializableVector3.magnitude*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Project.SerializableVector3.op_Implicit(Project.SerializableVector3)~Vector3
      commentId: M:Project.SerializableVector3.op_Implicit(Project.SerializableVector3)~Vector3
      language: CSharp
      name:
        CSharp: Implicit(SerializableVector3 to Vector3)
        VB: Widening(SerializableVector3 to Vector3)
      nameWithType:
        CSharp: SerializableVector3.Implicit(SerializableVector3 to Vector3)
        VB: SerializableVector3.Widening(SerializableVector3 to Vector3)
      qualifiedName:
        CSharp: Project.SerializableVector3.Implicit(Project.SerializableVector3 to Vector3)
        VB: Project.SerializableVector3.Widening(Project.SerializableVector3 to Vector3)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: op_Implicit
        path: ''
        startLine: 5233
      summary: "\nAutomatic conversion from SerializableVector3 to Vector3\n"
      example: []
      syntax:
        content:
          CSharp: public static implicit operator Vector3(SerializableVector3 rValue)
          VB: Public Shared Widening Operator CType(rValue As SerializableVector3) As Vector3
        parameters:
        - id: rValue
          type: Project.SerializableVector3
          description: ''
        return:
          type: Vector3
          description: ''
      overload: Project.SerializableVector3.op_Implicit*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Project.SerializableVector3.op_Implicit(Vector3)~Project.SerializableVector3
      commentId: M:Project.SerializableVector3.op_Implicit(Vector3)~Project.SerializableVector3
      language: CSharp
      name:
        CSharp: Implicit(Vector3 to SerializableVector3)
        VB: Widening(Vector3 to SerializableVector3)
      nameWithType:
        CSharp: SerializableVector3.Implicit(Vector3 to SerializableVector3)
        VB: SerializableVector3.Widening(Vector3 to SerializableVector3)
      qualifiedName:
        CSharp: Project.SerializableVector3.Implicit(Vector3 to Project.SerializableVector3)
        VB: Project.SerializableVector3.Widening(Vector3 to Project.SerializableVector3)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: op_Implicit
        path: ''
        startLine: 5243
      summary: "\nAutomatic conversion from Vector3 to SerializableVector3\n"
      example: []
      syntax:
        content:
          CSharp: public static implicit operator SerializableVector3(Vector3 rValue)
          VB: Public Shared Widening Operator CType(rValue As Vector3) As SerializableVector3
        parameters:
        - id: rValue
          type: Vector3
          description: ''
        return:
          type: Project.SerializableVector3
          description: ''
      overload: Project.SerializableVector3.op_Implicit*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Project.SerializableQuaternion
    commentId: T:Project.SerializableQuaternion
    language: CSharp
    name:
      CSharp: SerializableQuaternion
      VB: SerializableQuaternion
    nameWithType:
      CSharp: SerializableQuaternion
      VB: SerializableQuaternion
    qualifiedName:
      CSharp: Project.SerializableQuaternion
      VB: Project.SerializableQuaternion
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Project
    source:
      id: SerializableQuaternion
      path: ''
      startLine: 5249
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class SerializableQuaternion : Serializable
        VB: >-
          <Serializable>

          Public Class SerializableQuaternion

              Inherits Serializable
    inheritance:
    - System.Object
    - Project.Serializable
    inheritedMembers:
    - Project.Serializable.magnitude
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Project.SerializableQuaternion.x
      commentId: F:Project.SerializableQuaternion.x
      language: CSharp
      name:
        CSharp: x
        VB: x
      nameWithType:
        CSharp: SerializableQuaternion.x
        VB: SerializableQuaternion.x
      qualifiedName:
        CSharp: Project.SerializableQuaternion.x
        VB: Project.SerializableQuaternion.x
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: x
        path: ''
        startLine: 5255
      summary: "\nx component\n"
      example: []
      syntax:
        content:
          CSharp: public float x
          VB: Public x As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.SerializableQuaternion.y
      commentId: F:Project.SerializableQuaternion.y
      language: CSharp
      name:
        CSharp: y
        VB: y
      nameWithType:
        CSharp: SerializableQuaternion.y
        VB: SerializableQuaternion.y
      qualifiedName:
        CSharp: Project.SerializableQuaternion.y
        VB: Project.SerializableQuaternion.y
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: y
        path: ''
        startLine: 5260
      summary: "\ny component\n"
      example: []
      syntax:
        content:
          CSharp: public float y
          VB: Public y As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.SerializableQuaternion.z
      commentId: F:Project.SerializableQuaternion.z
      language: CSharp
      name:
        CSharp: z
        VB: z
      nameWithType:
        CSharp: SerializableQuaternion.z
        VB: SerializableQuaternion.z
      qualifiedName:
        CSharp: Project.SerializableQuaternion.z
        VB: Project.SerializableQuaternion.z
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: z
        path: ''
        startLine: 5265
      summary: "\nz component\n"
      example: []
      syntax:
        content:
          CSharp: public float z
          VB: Public z As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.SerializableQuaternion.w
      commentId: F:Project.SerializableQuaternion.w
      language: CSharp
      name:
        CSharp: w
        VB: w
      nameWithType:
        CSharp: SerializableQuaternion.w
        VB: SerializableQuaternion.w
      qualifiedName:
        CSharp: Project.SerializableQuaternion.w
        VB: Project.SerializableQuaternion.w
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: w
        path: ''
        startLine: 5270
      summary: "\nw component\n"
      example: []
      syntax:
        content:
          CSharp: public float w
          VB: Public w As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.SerializableQuaternion.#ctor(System.Single,System.Single,System.Single,System.Single)
      commentId: M:Project.SerializableQuaternion.#ctor(System.Single,System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: SerializableQuaternion(Single, Single, Single, Single)
        VB: SerializableQuaternion(Single, Single, Single, Single)
      nameWithType:
        CSharp: SerializableQuaternion.SerializableQuaternion(Single, Single, Single, Single)
        VB: SerializableQuaternion.SerializableQuaternion(Single, Single, Single, Single)
      qualifiedName:
        CSharp: Project.SerializableQuaternion.SerializableQuaternion(System.Single, System.Single, System.Single, System.Single)
        VB: Project.SerializableQuaternion.SerializableQuaternion(System.Single, System.Single, System.Single, System.Single)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: .ctor
        path: ''
        startLine: 5279
      summary: "\nConstructor\n"
      example: []
      syntax:
        content:
          CSharp: public SerializableQuaternion(float rX, float rY, float rZ, float rW)
          VB: Public Sub New(rX As Single, rY As Single, rZ As Single, rW As Single)
        parameters:
        - id: rX
          type: System.Single
          description: ''
        - id: rY
          type: System.Single
          description: ''
        - id: rZ
          type: System.Single
          description: ''
        - id: rW
          type: System.Single
          description: ''
      overload: Project.SerializableQuaternion.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.SerializableQuaternion.#ctor
      commentId: M:Project.SerializableQuaternion.#ctor
      language: CSharp
      name:
        CSharp: SerializableQuaternion()
        VB: SerializableQuaternion()
      nameWithType:
        CSharp: SerializableQuaternion.SerializableQuaternion()
        VB: SerializableQuaternion.SerializableQuaternion()
      qualifiedName:
        CSharp: Project.SerializableQuaternion.SerializableQuaternion()
        VB: Project.SerializableQuaternion.SerializableQuaternion()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: .ctor
        path: ''
        startLine: 5287
      syntax:
        content:
          CSharp: public SerializableQuaternion()
          VB: Public Sub New
      overload: Project.SerializableQuaternion.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.SerializableQuaternion.Update(IList{System.Single})
      commentId: M:Project.SerializableQuaternion.Update(IList{System.Single})
      language: CSharp
      name:
        CSharp: Update(IList<Single>)
        VB: Update(IList(Of Single))
      nameWithType:
        CSharp: SerializableQuaternion.Update(IList<Single>)
        VB: SerializableQuaternion.Update(IList(Of Single))
      qualifiedName:
        CSharp: Project.SerializableQuaternion.Update(IList<System.Single>)
        VB: Project.SerializableQuaternion.Update(IList(Of System.Single))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Update
        path: ''
        startLine: 5289
      syntax:
        content:
          CSharp: public override void Update(IList<float> r)
          VB: Public Overrides Sub Update(r As IList(Of Single))
        parameters:
        - id: r
          type: IList{System.Single}
      overload: Project.SerializableQuaternion.Update*
      overridden: Project.Serializable.Update(IList{System.Single})
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Project.SerializableQuaternion.ToString
      commentId: M:Project.SerializableQuaternion.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: SerializableQuaternion.ToString()
        VB: SerializableQuaternion.ToString()
      qualifiedName:
        CSharp: Project.SerializableQuaternion.ToString()
        VB: Project.SerializableQuaternion.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: ToString
        path: ''
        startLine: 5301
      summary: "\nReturns a string representation of the object\n"
      example: []
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
          description: ''
      overload: Project.SerializableQuaternion.ToString*
      overridden: System.Object.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Project.SerializableQuaternion.ToArray
      commentId: M:Project.SerializableQuaternion.ToArray
      language: CSharp
      name:
        CSharp: ToArray()
        VB: ToArray()
      nameWithType:
        CSharp: SerializableQuaternion.ToArray()
        VB: SerializableQuaternion.ToArray()
      qualifiedName:
        CSharp: Project.SerializableQuaternion.ToArray()
        VB: Project.SerializableQuaternion.ToArray()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: ToArray
        path: ''
        startLine: 5306
      syntax:
        content:
          CSharp: public override float[] ToArray()
          VB: Public Overrides Function ToArray As Single()
        return:
          type: System.Single[]
      overload: Project.SerializableQuaternion.ToArray*
      overridden: Project.Serializable.ToArray
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Project.SerializableQuaternion.op_Implicit(Project.SerializableQuaternion)~Quaternion
      commentId: M:Project.SerializableQuaternion.op_Implicit(Project.SerializableQuaternion)~Quaternion
      language: CSharp
      name:
        CSharp: Implicit(SerializableQuaternion to Quaternion)
        VB: Widening(SerializableQuaternion to Quaternion)
      nameWithType:
        CSharp: SerializableQuaternion.Implicit(SerializableQuaternion to Quaternion)
        VB: SerializableQuaternion.Widening(SerializableQuaternion to Quaternion)
      qualifiedName:
        CSharp: Project.SerializableQuaternion.Implicit(Project.SerializableQuaternion to Quaternion)
        VB: Project.SerializableQuaternion.Widening(Project.SerializableQuaternion to Quaternion)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: op_Implicit
        path: ''
        startLine: 5316
      summary: "\nAutomatic conversion from SerializableQuaternion to Quaternion\n"
      example: []
      syntax:
        content:
          CSharp: public static implicit operator Quaternion(SerializableQuaternion rValue)
          VB: Public Shared Widening Operator CType(rValue As SerializableQuaternion) As Quaternion
        parameters:
        - id: rValue
          type: Project.SerializableQuaternion
          description: ''
        return:
          type: Quaternion
          description: ''
      overload: Project.SerializableQuaternion.op_Implicit*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Project.SerializableQuaternion.op_Implicit(Quaternion)~Project.SerializableQuaternion
      commentId: M:Project.SerializableQuaternion.op_Implicit(Quaternion)~Project.SerializableQuaternion
      language: CSharp
      name:
        CSharp: Implicit(Quaternion to SerializableQuaternion)
        VB: Widening(Quaternion to SerializableQuaternion)
      nameWithType:
        CSharp: SerializableQuaternion.Implicit(Quaternion to SerializableQuaternion)
        VB: SerializableQuaternion.Widening(Quaternion to SerializableQuaternion)
      qualifiedName:
        CSharp: Project.SerializableQuaternion.Implicit(Quaternion to Project.SerializableQuaternion)
        VB: Project.SerializableQuaternion.Widening(Quaternion to Project.SerializableQuaternion)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: op_Implicit
        path: ''
        startLine: 5326
      summary: "\nAutomatic conversion from Quaternion to SerializableQuaternion\n"
      example: []
      syntax:
        content:
          CSharp: public static implicit operator SerializableQuaternion(Quaternion rValue)
          VB: Public Shared Widening Operator CType(rValue As Quaternion) As SerializableQuaternion
        parameters:
        - id: rValue
          type: Quaternion
          description: ''
        return:
          type: Project.SerializableQuaternion
          description: ''
      overload: Project.SerializableQuaternion.op_Implicit*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Project.SerializableColor
    commentId: T:Project.SerializableColor
    language: CSharp
    name:
      CSharp: SerializableColor
      VB: SerializableColor
    nameWithType:
      CSharp: SerializableColor
      VB: SerializableColor
    qualifiedName:
      CSharp: Project.SerializableColor
      VB: Project.SerializableColor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Project
    source:
      id: SerializableColor
      path: ''
      startLine: 5332
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class SerializableColor : Serializable
        VB: >-
          <Serializable>

          Public Class SerializableColor

              Inherits Serializable
    inheritance:
    - System.Object
    - Project.Serializable
    inheritedMembers:
    - Project.Serializable.magnitude
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Project.SerializableColor.r
      commentId: F:Project.SerializableColor.r
      language: CSharp
      name:
        CSharp: r
        VB: r
      nameWithType:
        CSharp: SerializableColor.r
        VB: SerializableColor.r
      qualifiedName:
        CSharp: Project.SerializableColor.r
        VB: Project.SerializableColor.r
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: r
        path: ''
        startLine: 5336
      syntax:
        content:
          CSharp: public float r
          VB: Public r As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.SerializableColor.g
      commentId: F:Project.SerializableColor.g
      language: CSharp
      name:
        CSharp: g
        VB: g
      nameWithType:
        CSharp: SerializableColor.g
        VB: SerializableColor.g
      qualifiedName:
        CSharp: Project.SerializableColor.g
        VB: Project.SerializableColor.g
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: g
        path: ''
        startLine: 5337
      syntax:
        content:
          CSharp: public float g
          VB: Public g As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.SerializableColor.b
      commentId: F:Project.SerializableColor.b
      language: CSharp
      name:
        CSharp: b
        VB: b
      nameWithType:
        CSharp: SerializableColor.b
        VB: SerializableColor.b
      qualifiedName:
        CSharp: Project.SerializableColor.b
        VB: Project.SerializableColor.b
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: b
        path: ''
        startLine: 5338
      syntax:
        content:
          CSharp: public float b
          VB: Public b As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.SerializableColor.a
      commentId: F:Project.SerializableColor.a
      language: CSharp
      name:
        CSharp: a
        VB: a
      nameWithType:
        CSharp: SerializableColor.a
        VB: SerializableColor.a
      qualifiedName:
        CSharp: Project.SerializableColor.a
        VB: Project.SerializableColor.a
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: a
        path: ''
        startLine: 5339
      syntax:
        content:
          CSharp: public float a
          VB: Public a As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.SerializableColor.#ctor(System.Single,System.Single,System.Single,System.Single)
      commentId: M:Project.SerializableColor.#ctor(System.Single,System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: SerializableColor(Single, Single, Single, Single)
        VB: SerializableColor(Single, Single, Single, Single)
      nameWithType:
        CSharp: SerializableColor.SerializableColor(Single, Single, Single, Single)
        VB: SerializableColor.SerializableColor(Single, Single, Single, Single)
      qualifiedName:
        CSharp: Project.SerializableColor.SerializableColor(System.Single, System.Single, System.Single, System.Single)
        VB: Project.SerializableColor.SerializableColor(System.Single, System.Single, System.Single, System.Single)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: .ctor
        path: ''
        startLine: 5342
      syntax:
        content:
          CSharp: public SerializableColor(float rr, float rg, float rb, float ra)
          VB: Public Sub New(rr As Single, rg As Single, rb As Single, ra As Single)
        parameters:
        - id: rr
          type: System.Single
        - id: rg
          type: System.Single
        - id: rb
          type: System.Single
        - id: ra
          type: System.Single
      overload: Project.SerializableColor.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.SerializableColor.#ctor
      commentId: M:Project.SerializableColor.#ctor
      language: CSharp
      name:
        CSharp: SerializableColor()
        VB: SerializableColor()
      nameWithType:
        CSharp: SerializableColor.SerializableColor()
        VB: SerializableColor.SerializableColor()
      qualifiedName:
        CSharp: Project.SerializableColor.SerializableColor()
        VB: Project.SerializableColor.SerializableColor()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: .ctor
        path: ''
        startLine: 5350
      syntax:
        content:
          CSharp: public SerializableColor()
          VB: Public Sub New
      overload: Project.SerializableColor.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.SerializableColor.Update(IList{System.Single})
      commentId: M:Project.SerializableColor.Update(IList{System.Single})
      language: CSharp
      name:
        CSharp: Update(IList<Single>)
        VB: Update(IList(Of Single))
      nameWithType:
        CSharp: SerializableColor.Update(IList<Single>)
        VB: SerializableColor.Update(IList(Of Single))
      qualifiedName:
        CSharp: Project.SerializableColor.Update(IList<System.Single>)
        VB: Project.SerializableColor.Update(IList(Of System.Single))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Update
        path: ''
        startLine: 5352
      syntax:
        content:
          CSharp: public override void Update(IList<float> color)
          VB: Public Overrides Sub Update(color As IList(Of Single))
        parameters:
        - id: color
          type: IList{System.Single}
      overload: Project.SerializableColor.Update*
      overridden: Project.Serializable.Update(IList{System.Single})
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Project.SerializableColor.op_Implicit(Project.SerializableColor)~Color
      commentId: M:Project.SerializableColor.op_Implicit(Project.SerializableColor)~Color
      language: CSharp
      name:
        CSharp: Implicit(SerializableColor to Color)
        VB: Widening(SerializableColor to Color)
      nameWithType:
        CSharp: SerializableColor.Implicit(SerializableColor to Color)
        VB: SerializableColor.Widening(SerializableColor to Color)
      qualifiedName:
        CSharp: Project.SerializableColor.Implicit(Project.SerializableColor to Color)
        VB: Project.SerializableColor.Widening(Project.SerializableColor to Color)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: op_Implicit
        path: ''
        startLine: 5361
      syntax:
        content:
          CSharp: public static implicit operator Color(SerializableColor r)
          VB: Public Shared Widening Operator CType(r As SerializableColor) As Color
        parameters:
        - id: r
          type: Project.SerializableColor
        return:
          type: Color
      overload: Project.SerializableColor.op_Implicit*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Project.SerializableColor.op_Implicit(Color)~Project.SerializableColor
      commentId: M:Project.SerializableColor.op_Implicit(Color)~Project.SerializableColor
      language: CSharp
      name:
        CSharp: Implicit(Color to SerializableColor)
        VB: Widening(Color to SerializableColor)
      nameWithType:
        CSharp: SerializableColor.Implicit(Color to SerializableColor)
        VB: SerializableColor.Widening(Color to SerializableColor)
      qualifiedName:
        CSharp: Project.SerializableColor.Implicit(Color to Project.SerializableColor)
        VB: Project.SerializableColor.Widening(Color to Project.SerializableColor)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: op_Implicit
        path: ''
        startLine: 5367
      syntax:
        content:
          CSharp: public static implicit operator SerializableColor(Color color)
          VB: Public Shared Widening Operator CType(color As Color) As SerializableColor
        parameters:
        - id: color
          type: Color
        return:
          type: Project.SerializableColor
      overload: Project.SerializableColor.op_Implicit*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Project.SerializableColor.ToString
      commentId: M:Project.SerializableColor.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: SerializableColor.ToString()
        VB: SerializableColor.ToString()
      qualifiedName:
        CSharp: Project.SerializableColor.ToString()
        VB: Project.SerializableColor.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: ToString
        path: ''
        startLine: 5372
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Project.SerializableColor.ToString*
      overridden: System.Object.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Project.SerializableColor.ToArray
      commentId: M:Project.SerializableColor.ToArray
      language: CSharp
      name:
        CSharp: ToArray()
        VB: ToArray()
      nameWithType:
        CSharp: SerializableColor.ToArray()
        VB: SerializableColor.ToArray()
      qualifiedName:
        CSharp: Project.SerializableColor.ToArray()
        VB: Project.SerializableColor.ToArray()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: ToArray
        path: ''
        startLine: 5377
      syntax:
        content:
          CSharp: public override float[] ToArray()
          VB: Public Overrides Function ToArray As Single()
        return:
          type: System.Single[]
      overload: Project.SerializableColor.ToArray*
      overridden: Project.Serializable.ToArray
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Project.Serializable
    commentId: T:Project.Serializable
    language: CSharp
    name:
      CSharp: Serializable
      VB: Serializable
    nameWithType:
      CSharp: Serializable
      VB: Serializable
    qualifiedName:
      CSharp: Project.Serializable
      VB: Project.Serializable
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Project
    source:
      id: Serializable
      path: ''
      startLine: 5383
    syntax:
      content:
        CSharp: public abstract class Serializable
        VB: Public MustInherit Class Serializable
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: Project.Serializable.Update(IList{System.Single})
      commentId: M:Project.Serializable.Update(IList{System.Single})
      language: CSharp
      name:
        CSharp: Update(IList<Single>)
        VB: Update(IList(Of Single))
      nameWithType:
        CSharp: Serializable.Update(IList<Single>)
        VB: Serializable.Update(IList(Of Single))
      qualifiedName:
        CSharp: Project.Serializable.Update(IList<System.Single>)
        VB: Project.Serializable.Update(IList(Of System.Single))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Update
        path: ''
        startLine: 5385
      syntax:
        content:
          CSharp: public abstract void Update(IList<float> v)
          VB: Public MustOverride Sub Update(v As IList(Of Single))
        parameters:
        - id: v
          type: IList{System.Single}
      overload: Project.Serializable.Update*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: Project.Serializable.ToArray
      commentId: M:Project.Serializable.ToArray
      language: CSharp
      name:
        CSharp: ToArray()
        VB: ToArray()
      nameWithType:
        CSharp: Serializable.ToArray()
        VB: Serializable.ToArray()
      qualifiedName:
        CSharp: Project.Serializable.ToArray()
        VB: Project.Serializable.ToArray()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: ToArray
        path: ''
        startLine: 5386
      syntax:
        content:
          CSharp: public abstract float[] ToArray()
          VB: Public MustOverride Function ToArray As Single()
        return:
          type: System.Single[]
      overload: Project.Serializable.ToArray*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: Project.Serializable.magnitude
      commentId: F:Project.Serializable.magnitude
      language: CSharp
      name:
        CSharp: magnitude
        VB: magnitude
      nameWithType:
        CSharp: Serializable.magnitude
        VB: Serializable.magnitude
      qualifiedName:
        CSharp: Project.Serializable.magnitude
        VB: Project.Serializable.magnitude
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: magnitude
        path: ''
        startLine: 5387
      syntax:
        content:
          CSharp: public float magnitude
          VB: Public magnitude As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Project.GisProject
    commentId: T:Project.GisProject
    language: CSharp
    name:
      CSharp: GisProject
      VB: GisProject
    nameWithType:
      CSharp: GisProject
      VB: GisProject
    qualifiedName:
      CSharp: Project.GisProject
      VB: Project.GisProject
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Project
    source:
      id: GisProject
      path: ''
      startLine: 5416
    syntax:
      content:
        CSharp: 'public class GisProject : TestableObject'
        VB: >-
          Public Class GisProject

              Inherits TestableObject
    inheritance:
    - System.Object
    - Project.TestableObject
    inheritedMembers:
    - Project.TestableObject.ContainsKey(System.String)
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Project.GisProject.Name
      commentId: F:Project.GisProject.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: GisProject.Name
        VB: GisProject.Name
      qualifiedName:
        CSharp: Project.GisProject.Name
        VB: Project.GisProject.Name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Name
        path: ''
        startLine: 5419
      syntax:
        content:
          CSharp: public string Name
          VB: Public Name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.GisProject.Origin
      commentId: F:Project.GisProject.Origin
      language: CSharp
      name:
        CSharp: Origin
        VB: Origin
      nameWithType:
        CSharp: GisProject.Origin
        VB: GisProject.Origin
      qualifiedName:
        CSharp: Project.GisProject.Origin
        VB: Project.GisProject.Origin
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Origin
        path: ''
        startLine: 5422
      syntax:
        content:
          CSharp: public Point Origin
          VB: Public Origin As Point
        return:
          type: Point
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.GisProject.MapScale
      commentId: F:Project.GisProject.MapScale
      language: CSharp
      name:
        CSharp: MapScale
        VB: MapScale
      nameWithType:
        CSharp: GisProject.MapScale
        VB: GisProject.MapScale
      qualifiedName:
        CSharp: Project.GisProject.MapScale
        VB: Project.GisProject.MapScale
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: MapScale
        path: ''
        startLine: 5425
      syntax:
        content:
          CSharp: public int MapScale
          VB: Public MapScale As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.GisProject.Scale
      commentId: F:Project.GisProject.Scale
      language: CSharp
      name:
        CSharp: Scale
        VB: Scale
      nameWithType:
        CSharp: GisProject.Scale
        VB: GisProject.Scale
      qualifiedName:
        CSharp: Project.GisProject.Scale
        VB: Project.GisProject.Scale
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Scale
        path: ''
        startLine: 5428
      syntax:
        content:
          CSharp: public float Scale
          VB: Public Scale As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.GisProject.GridScale
      commentId: F:Project.GisProject.GridScale
      language: CSharp
      name:
        CSharp: GridScale
        VB: GridScale
      nameWithType:
        CSharp: GisProject.GridScale
        VB: GisProject.GridScale
      qualifiedName:
        CSharp: Project.GisProject.GridScale
        VB: Project.GisProject.GridScale
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: GridScale
        path: ''
        startLine: 5431
      syntax:
        content:
          CSharp: public float GridScale
          VB: Public GridScale As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.GisProject.Cameras
      commentId: F:Project.GisProject.Cameras
      language: CSharp
      name:
        CSharp: Cameras
        VB: Cameras
      nameWithType:
        CSharp: GisProject.Cameras
        VB: GisProject.Cameras
      qualifiedName:
        CSharp: Project.GisProject.Cameras
        VB: Project.GisProject.Cameras
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Cameras
        path: ''
        startLine: 5434
      syntax:
        content:
          CSharp: public List<Point> Cameras
          VB: Public Cameras As List(Of Point)
        return:
          type: List{Point}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.GisProject.RecordSets
      commentId: F:Project.GisProject.RecordSets
      language: CSharp
      name:
        CSharp: RecordSets
        VB: RecordSets
      nameWithType:
        CSharp: GisProject.RecordSets
        VB: GisProject.RecordSets
      qualifiedName:
        CSharp: Project.GisProject.RecordSets
        VB: Project.GisProject.RecordSets
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: RecordSets
        path: ''
        startLine: 5438
      syntax:
        content:
          CSharp: public List<RecordSet> RecordSets
          VB: Public RecordSets As List(Of RecordSet)
        return:
          type: List{Project.RecordSet}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.GisProject.Camera
      commentId: P:Project.GisProject.Camera
      language: CSharp
      name:
        CSharp: Camera
        VB: Camera
      nameWithType:
        CSharp: GisProject.Camera
        VB: GisProject.Camera
      qualifiedName:
        CSharp: Project.GisProject.Camera
        VB: Project.GisProject.Camera
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Camera
        path: ''
        startLine: 5440
      syntax:
        content:
          CSharp: public Point Camera { get; }
          VB: Public ReadOnly Property Camera As Point
        parameters: []
        return:
          type: Point
      overload: Project.GisProject.Camera*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Project.RecordSet
    commentId: T:Project.RecordSet
    language: CSharp
    name:
      CSharp: RecordSet
      VB: RecordSet
    nameWithType:
      CSharp: RecordSet
      VB: RecordSet
    qualifiedName:
      CSharp: Project.RecordSet
      VB: Project.RecordSet
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Project
    source:
      id: RecordSet
      path: ''
      startLine: 5446
    syntax:
      content:
        CSharp: 'public class RecordSet : TestableObject'
        VB: >-
          Public Class RecordSet

              Inherits TestableObject
    inheritance:
    - System.Object
    - Project.TestableObject
    inheritedMembers:
    - Project.TestableObject.ContainsKey(System.String)
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Project.RecordSet.Id
      commentId: F:Project.RecordSet.Id
      language: CSharp
      name:
        CSharp: Id
        VB: Id
      nameWithType:
        CSharp: RecordSet.Id
        VB: RecordSet.Id
      qualifiedName:
        CSharp: Project.RecordSet.Id
        VB: Project.RecordSet.Id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Id
        path: ''
        startLine: 5449
      syntax:
        content:
          CSharp: public string Id
          VB: Public Id As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.RecordSet.DisplayName
      commentId: F:Project.RecordSet.DisplayName
      language: CSharp
      name:
        CSharp: DisplayName
        VB: DisplayName
      nameWithType:
        CSharp: RecordSet.DisplayName
        VB: RecordSet.DisplayName
      qualifiedName:
        CSharp: Project.RecordSet.DisplayName
        VB: Project.RecordSet.DisplayName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: DisplayName
        path: ''
        startLine: 5451
      syntax:
        content:
          CSharp: public string DisplayName
          VB: Public DisplayName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.RecordSet.Type
      commentId: F:Project.RecordSet.Type
      language: CSharp
      name:
        CSharp: Type
        VB: Type
      nameWithType:
        CSharp: RecordSet.Type
        VB: RecordSet.Type
      qualifiedName:
        CSharp: Project.RecordSet.Type
        VB: Project.RecordSet.Type
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Type
        path: ''
        startLine: 5453
      syntax:
        content:
          CSharp: public string Type
          VB: Public Type As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.RecordSet.DataType
      commentId: F:Project.RecordSet.DataType
      language: CSharp
      name:
        CSharp: DataType
        VB: DataType
      nameWithType:
        CSharp: RecordSet.DataType
        VB: RecordSet.DataType
      qualifiedName:
        CSharp: Project.RecordSet.DataType
        VB: Project.RecordSet.DataType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: DataType
        path: ''
        startLine: 5456
      syntax:
        content:
          CSharp: public RecordSetDataType DataType
          VB: Public DataType As RecordSetDataType
        return:
          type: Project.RecordSetDataType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.RecordSet.Source
      commentId: F:Project.RecordSet.Source
      language: CSharp
      name:
        CSharp: Source
        VB: Source
      nameWithType:
        CSharp: RecordSet.Source
        VB: RecordSet.Source
      qualifiedName:
        CSharp: Project.RecordSet.Source
        VB: Project.RecordSet.Source
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Source
        path: ''
        startLine: 5458
      syntax:
        content:
          CSharp: public string Source
          VB: Public Source As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.RecordSet.Features
      commentId: F:Project.RecordSet.Features
      language: CSharp
      name:
        CSharp: Features
        VB: Features
      nameWithType:
        CSharp: RecordSet.Features
        VB: RecordSet.Features
      qualifiedName:
        CSharp: Project.RecordSet.Features
        VB: Project.RecordSet.Features
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Features
        path: ''
        startLine: 5460
      syntax:
        content:
          CSharp: public FeatureCollection Features
          VB: Public Features As FeatureCollection
        return:
          type: FeatureCollection
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.RecordSet.Position
      commentId: F:Project.RecordSet.Position
      language: CSharp
      name:
        CSharp: Position
        VB: Position
      nameWithType:
        CSharp: RecordSet.Position
        VB: RecordSet.Position
      qualifiedName:
        CSharp: Project.RecordSet.Position
        VB: Project.RecordSet.Position
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Position
        path: ''
        startLine: 5462
      syntax:
        content:
          CSharp: public Point Position
          VB: Public Position As Point
        return:
          type: Point
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.RecordSet.Transform
      commentId: F:Project.RecordSet.Transform
      language: CSharp
      name:
        CSharp: Transform
        VB: Transform
      nameWithType:
        CSharp: RecordSet.Transform
        VB: RecordSet.Transform
      qualifiedName:
        CSharp: Project.RecordSet.Transform
        VB: Project.RecordSet.Transform
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Transform
        path: ''
        startLine: 5464
      syntax:
        content:
          CSharp: public JsonTransform Transform
          VB: Public Transform As JsonTransform
        return:
          type: Project.JsonTransform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.RecordSet.Properties
      commentId: F:Project.RecordSet.Properties
      language: CSharp
      name:
        CSharp: Properties
        VB: Properties
      nameWithType:
        CSharp: RecordSet.Properties
        VB: RecordSet.Properties
      qualifiedName:
        CSharp: Project.RecordSet.Properties
        VB: Project.RecordSet.Properties
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Properties
        path: ''
        startLine: 5466
      syntax:
        content:
          CSharp: public Dictionary<string, object> Properties
          VB: Public Properties As Dictionary(Of String, Object)
        return:
          type: Dictionary{System.String,System.Object}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.RecordSet.Visible
      commentId: F:Project.RecordSet.Visible
      language: CSharp
      name:
        CSharp: Visible
        VB: Visible
      nameWithType:
        CSharp: RecordSet.Visible
        VB: RecordSet.Visible
      qualifiedName:
        CSharp: Project.RecordSet.Visible
        VB: Project.RecordSet.Visible
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Visible
        path: ''
        startLine: 5469
      syntax:
        content:
          CSharp: public bool Visible
          VB: Public Visible As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Project.JsonTransform
    commentId: T:Project.JsonTransform
    language: CSharp
    name:
      CSharp: JsonTransform
      VB: JsonTransform
    nameWithType:
      CSharp: JsonTransform
      VB: JsonTransform
    qualifiedName:
      CSharp: Project.JsonTransform
      VB: Project.JsonTransform
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Project
    source:
      id: JsonTransform
      path: ''
      startLine: 5472
    syntax:
      content:
        CSharp: 'public class JsonTransform : TestableObject'
        VB: >-
          Public Class JsonTransform

              Inherits TestableObject
    inheritance:
    - System.Object
    - Project.TestableObject
    inheritedMembers:
    - Project.TestableObject.ContainsKey(System.String)
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Project.JsonTransform.Position
      commentId: F:Project.JsonTransform.Position
      language: CSharp
      name:
        CSharp: Position
        VB: Position
      nameWithType:
        CSharp: JsonTransform.Position
        VB: JsonTransform.Position
      qualifiedName:
        CSharp: Project.JsonTransform.Position
        VB: Project.JsonTransform.Position
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Position
        path: ''
        startLine: 5476
      syntax:
        content:
          CSharp: public SerializableVector3 Position
          VB: Public Position As SerializableVector3
        return:
          type: Project.SerializableVector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.JsonTransform.Rotate
      commentId: F:Project.JsonTransform.Rotate
      language: CSharp
      name:
        CSharp: Rotate
        VB: Rotate
      nameWithType:
        CSharp: JsonTransform.Rotate
        VB: JsonTransform.Rotate
      qualifiedName:
        CSharp: Project.JsonTransform.Rotate
        VB: Project.JsonTransform.Rotate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Rotate
        path: ''
        startLine: 5479
      syntax:
        content:
          CSharp: public SerializableQuaternion Rotate
          VB: Public Rotate As SerializableQuaternion
        return:
          type: Project.SerializableQuaternion
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.JsonTransform.Scale
      commentId: F:Project.JsonTransform.Scale
      language: CSharp
      name:
        CSharp: Scale
        VB: Scale
      nameWithType:
        CSharp: JsonTransform.Scale
        VB: JsonTransform.Scale
      qualifiedName:
        CSharp: Project.JsonTransform.Scale
        VB: Project.JsonTransform.Scale
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Scale
        path: ''
        startLine: 5482
      syntax:
        content:
          CSharp: public SerializableVector3 Scale
          VB: Public Scale As SerializableVector3
        return:
          type: Project.SerializableVector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Project.VectorConverter`1
    commentId: T:Project.VectorConverter`1
    language: CSharp
    name:
      CSharp: VectorConverter<T>
      VB: VectorConverter(Of T)
    nameWithType:
      CSharp: VectorConverter<T>
      VB: VectorConverter(Of T)
    qualifiedName:
      CSharp: Project.VectorConverter<T>
      VB: Project.VectorConverter(Of T)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Project
    source:
      id: VectorConverter
      path: ''
      startLine: 5485
    syntax:
      content:
        CSharp: 'public class VectorConverter<T> : JsonConverter where T : Serializable, new()'
        VB: >-
          Public Class VectorConverter(Of T As {Serializable, New})

              Inherits JsonConverter
      typeParameters:
      - id: T
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Project.VectorConverter`1.#ctor
      commentId: M:Project.VectorConverter`1.#ctor
      language: CSharp
      name:
        CSharp: VectorConverter()
        VB: VectorConverter()
      nameWithType:
        CSharp: VectorConverter<T>.VectorConverter()
        VB: VectorConverter(Of T).VectorConverter()
      qualifiedName:
        CSharp: Project.VectorConverter<T>.VectorConverter()
        VB: Project.VectorConverter(Of T).VectorConverter()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: .ctor
        path: ''
        startLine: 5487
      syntax:
        content:
          CSharp: public VectorConverter()
          VB: Public Sub New
      overload: Project.VectorConverter`1.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.VectorConverter`1.CanConvert(Type)
      commentId: M:Project.VectorConverter`1.CanConvert(Type)
      language: CSharp
      name:
        CSharp: CanConvert(Type)
        VB: CanConvert(Type)
      nameWithType:
        CSharp: VectorConverter<T>.CanConvert(Type)
        VB: VectorConverter(Of T).CanConvert(Type)
      qualifiedName:
        CSharp: Project.VectorConverter<T>.CanConvert(Type)
        VB: Project.VectorConverter(Of T).CanConvert(Type)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: CanConvert
        path: ''
        startLine: 5492
      syntax:
        content:
          CSharp: public override bool CanConvert(Type objectType)
          VB: Public Overrides Function CanConvert(objectType As Type) As Boolean
        parameters:
        - id: objectType
          type: Type
        return:
          type: System.Boolean
      overload: Project.VectorConverter`1.CanConvert*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Project.VectorConverter`1.ReadJson(JsonReader,Type,System.Object,JsonSerializer)
      commentId: M:Project.VectorConverter`1.ReadJson(JsonReader,Type,System.Object,JsonSerializer)
      language: CSharp
      name:
        CSharp: ReadJson(JsonReader, Type, Object, JsonSerializer)
        VB: ReadJson(JsonReader, Type, Object, JsonSerializer)
      nameWithType:
        CSharp: VectorConverter<T>.ReadJson(JsonReader, Type, Object, JsonSerializer)
        VB: VectorConverter(Of T).ReadJson(JsonReader, Type, Object, JsonSerializer)
      qualifiedName:
        CSharp: Project.VectorConverter<T>.ReadJson(JsonReader, Type, System.Object, JsonSerializer)
        VB: Project.VectorConverter(Of T).ReadJson(JsonReader, Type, System.Object, JsonSerializer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: ReadJson
        path: ''
        startLine: 5497
      syntax:
        content:
          CSharp: public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
          VB: Public Overrides Function ReadJson(reader As JsonReader, objectType As Type, existingValue As Object, serializer As JsonSerializer) As Object
        parameters:
        - id: reader
          type: JsonReader
        - id: objectType
          type: Type
        - id: existingValue
          type: System.Object
        - id: serializer
          type: JsonSerializer
        return:
          type: System.Object
      overload: Project.VectorConverter`1.ReadJson*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Project.VectorConverter`1.WriteJson(JsonWriter,System.Object,JsonSerializer)
      commentId: M:Project.VectorConverter`1.WriteJson(JsonWriter,System.Object,JsonSerializer)
      language: CSharp
      name:
        CSharp: WriteJson(JsonWriter, Object, JsonSerializer)
        VB: WriteJson(JsonWriter, Object, JsonSerializer)
      nameWithType:
        CSharp: VectorConverter<T>.WriteJson(JsonWriter, Object, JsonSerializer)
        VB: VectorConverter(Of T).WriteJson(JsonWriter, Object, JsonSerializer)
      qualifiedName:
        CSharp: Project.VectorConverter<T>.WriteJson(JsonWriter, System.Object, JsonSerializer)
        VB: Project.VectorConverter(Of T).WriteJson(JsonWriter, System.Object, JsonSerializer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: WriteJson
        path: ''
        startLine: 5515
      syntax:
        content:
          CSharp: public override void WriteJson(JsonWriter writer, object vector, JsonSerializer serializer)
          VB: Public Overrides Sub WriteJson(writer As JsonWriter, vector As Object, serializer As JsonSerializer)
        parameters:
        - id: writer
          type: JsonWriter
        - id: vector
          type: System.Object
        - id: serializer
          type: JsonSerializer
      overload: Project.VectorConverter`1.WriteJson*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Project.RecordsetConverter
    commentId: T:Project.RecordsetConverter
    language: CSharp
    name:
      CSharp: RecordsetConverter
      VB: RecordsetConverter
    nameWithType:
      CSharp: RecordsetConverter
      VB: RecordsetConverter
    qualifiedName:
      CSharp: Project.RecordsetConverter
      VB: Project.RecordsetConverter
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Project
    source:
      id: RecordsetConverter
      path: ''
      startLine: 5522
    syntax:
      content:
        CSharp: 'public class RecordsetConverter : JsonConverter'
        VB: >-
          Public Class RecordsetConverter

              Inherits JsonConverter
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Project.RecordsetConverter.#ctor
      commentId: M:Project.RecordsetConverter.#ctor
      language: CSharp
      name:
        CSharp: RecordsetConverter()
        VB: RecordsetConverter()
      nameWithType:
        CSharp: RecordsetConverter.RecordsetConverter()
        VB: RecordsetConverter.RecordsetConverter()
      qualifiedName:
        CSharp: Project.RecordsetConverter.RecordsetConverter()
        VB: Project.RecordsetConverter.RecordsetConverter()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: .ctor
        path: ''
        startLine: 5524
      syntax:
        content:
          CSharp: public RecordsetConverter()
          VB: Public Sub New
      overload: Project.RecordsetConverter.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.RecordsetConverter.CanConvert(Type)
      commentId: M:Project.RecordsetConverter.CanConvert(Type)
      language: CSharp
      name:
        CSharp: CanConvert(Type)
        VB: CanConvert(Type)
      nameWithType:
        CSharp: RecordsetConverter.CanConvert(Type)
        VB: RecordsetConverter.CanConvert(Type)
      qualifiedName:
        CSharp: Project.RecordsetConverter.CanConvert(Type)
        VB: Project.RecordsetConverter.CanConvert(Type)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: CanConvert
        path: ''
        startLine: 5529
      syntax:
        content:
          CSharp: public override bool CanConvert(Type objectType)
          VB: Public Overrides Function CanConvert(objectType As Type) As Boolean
        parameters:
        - id: objectType
          type: Type
        return:
          type: System.Boolean
      overload: Project.RecordsetConverter.CanConvert*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Project.RecordsetConverter.ReadJson(JsonReader,Type,System.Object,JsonSerializer)
      commentId: M:Project.RecordsetConverter.ReadJson(JsonReader,Type,System.Object,JsonSerializer)
      language: CSharp
      name:
        CSharp: ReadJson(JsonReader, Type, Object, JsonSerializer)
        VB: ReadJson(JsonReader, Type, Object, JsonSerializer)
      nameWithType:
        CSharp: RecordsetConverter.ReadJson(JsonReader, Type, Object, JsonSerializer)
        VB: RecordsetConverter.ReadJson(JsonReader, Type, Object, JsonSerializer)
      qualifiedName:
        CSharp: Project.RecordsetConverter.ReadJson(JsonReader, Type, System.Object, JsonSerializer)
        VB: Project.RecordsetConverter.ReadJson(JsonReader, Type, System.Object, JsonSerializer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: ReadJson
        path: ''
        startLine: 5534
      syntax:
        content:
          CSharp: public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
          VB: Public Overrides Function ReadJson(reader As JsonReader, objectType As Type, existingValue As Object, serializer As JsonSerializer) As Object
        parameters:
        - id: reader
          type: JsonReader
        - id: objectType
          type: Type
        - id: existingValue
          type: System.Object
        - id: serializer
          type: JsonSerializer
        return:
          type: System.Object
      overload: Project.RecordsetConverter.ReadJson*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Project.RecordsetConverter.WriteJson(JsonWriter,System.Object,JsonSerializer)
      commentId: M:Project.RecordsetConverter.WriteJson(JsonWriter,System.Object,JsonSerializer)
      language: CSharp
      name:
        CSharp: WriteJson(JsonWriter, Object, JsonSerializer)
        VB: WriteJson(JsonWriter, Object, JsonSerializer)
      nameWithType:
        CSharp: RecordsetConverter.WriteJson(JsonWriter, Object, JsonSerializer)
        VB: RecordsetConverter.WriteJson(JsonWriter, Object, JsonSerializer)
      qualifiedName:
        CSharp: Project.RecordsetConverter.WriteJson(JsonWriter, System.Object, JsonSerializer)
        VB: Project.RecordsetConverter.WriteJson(JsonWriter, System.Object, JsonSerializer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: WriteJson
        path: ''
        startLine: 5563
      syntax:
        content:
          CSharp: public override void WriteJson(JsonWriter writer, object vector, JsonSerializer serializer)
          VB: Public Overrides Sub WriteJson(writer As JsonWriter, vector As Object, serializer As JsonSerializer)
        parameters:
        - id: writer
          type: JsonWriter
        - id: vector
          type: System.Object
        - id: serializer
          type: JsonSerializer
      overload: Project.RecordsetConverter.WriteJson*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Project.RecordSetType
    commentId: T:Project.RecordSetType
    language: CSharp
    name:
      CSharp: RecordSetType
      VB: RecordSetType
    nameWithType:
      CSharp: RecordSetType
      VB: RecordSetType
    qualifiedName:
      CSharp: Project.RecordSetType
      VB: Project.RecordSetType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Project
    source:
      id: RecordSetType
      path: ''
      startLine: 5570
    syntax:
      content:
        CSharp: public enum RecordSetType
        VB: Public Enum RecordSetType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Project.RecordSetType.GeologyCollection
      commentId: F:Project.RecordSetType.GeologyCollection
      language: CSharp
      name:
        CSharp: GeologyCollection
        VB: GeologyCollection
      nameWithType:
        CSharp: RecordSetType.GeologyCollection
        VB: RecordSetType.GeologyCollection
      qualifiedName:
        CSharp: Project.RecordSetType.GeologyCollection
        VB: Project.RecordSetType.GeologyCollection
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: GeologyCollection
        path: ''
        startLine: 5572
      syntax:
        content:
          CSharp: GeologyCollection = 0
          VB: GeologyCollection = 0
        return:
          type: Project.RecordSetType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Project.RecordSetType.GeographyCollection
      commentId: F:Project.RecordSetType.GeographyCollection
      language: CSharp
      name:
        CSharp: GeographyCollection
        VB: GeographyCollection
      nameWithType:
        CSharp: RecordSetType.GeographyCollection
        VB: RecordSetType.GeographyCollection
      qualifiedName:
        CSharp: Project.RecordSetType.GeographyCollection
        VB: Project.RecordSetType.GeographyCollection
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: GeographyCollection
        path: ''
        startLine: 5573
      syntax:
        content:
          CSharp: GeographyCollection = 1
          VB: GeographyCollection = 1
        return:
          type: Project.RecordSetType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Project.GeographyCollection
    commentId: T:Project.GeographyCollection
    language: CSharp
    name:
      CSharp: GeographyCollection
      VB: GeographyCollection
    nameWithType:
      CSharp: GeographyCollection
      VB: GeographyCollection
    qualifiedName:
      CSharp: Project.GeographyCollection
      VB: Project.GeographyCollection
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Project
    source:
      id: GeographyCollection
      path: ''
      startLine: 5576
    syntax:
      content:
        CSharp: 'public class GeographyCollection : RecordSet'
        VB: >-
          Public Class GeographyCollection

              Inherits RecordSet
    inheritance:
    - System.Object
    - Project.TestableObject
    - Project.RecordSet
    inheritedMembers:
    - Project.RecordSet.Id
    - Project.RecordSet.DisplayName
    - Project.RecordSet.Type
    - Project.RecordSet.DataType
    - Project.RecordSet.Source
    - Project.RecordSet.Features
    - Project.RecordSet.Position
    - Project.RecordSet.Transform
    - Project.RecordSet.Visible
    - Project.TestableObject.ContainsKey(System.String)
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Project.GeographyCollection.Properties
      commentId: F:Project.GeographyCollection.Properties
      language: CSharp
      name:
        CSharp: Properties
        VB: Properties
      nameWithType:
        CSharp: GeographyCollection.Properties
        VB: GeographyCollection.Properties
      qualifiedName:
        CSharp: Project.GeographyCollection.Properties
        VB: Project.GeographyCollection.Properties
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Properties
        path: ''
        startLine: 5579
      syntax:
        content:
          CSharp: public GeographyCollection.GeogData Properties
          VB: Public Properties As GeographyCollection.GeogData
        return:
          type: Project.GeographyCollection.GeogData
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Project.GeographyCollection.GeogData
    commentId: T:Project.GeographyCollection.GeogData
    language: CSharp
    name:
      CSharp: GeographyCollection.GeogData
      VB: GeographyCollection.GeogData
    nameWithType:
      CSharp: GeographyCollection.GeogData
      VB: GeographyCollection.GeogData
    qualifiedName:
      CSharp: Project.GeographyCollection.GeogData
      VB: Project.GeographyCollection.GeogData
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Project
    source:
      id: GeogData
      path: ''
      startLine: 5581
    syntax:
      content:
        CSharp: public struct GeogData
        VB: Public Structure GeogData
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Project.GeographyCollection.GeogData.Units
      commentId: F:Project.GeographyCollection.GeogData.Units
      language: CSharp
      name:
        CSharp: Units
        VB: Units
      nameWithType:
        CSharp: GeographyCollection.GeogData.Units
        VB: GeographyCollection.GeogData.Units
      qualifiedName:
        CSharp: Project.GeographyCollection.GeogData.Units
        VB: Project.GeographyCollection.GeogData.Units
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Units
        path: ''
        startLine: 5584
      syntax:
        content:
          CSharp: public Dictionary<string, Unit> Units
          VB: Public Units As Dictionary(Of String, Unit)
        return:
          type: Dictionary{System.String,Project.Unit}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Project.GeologyCollection
    commentId: T:Project.GeologyCollection
    language: CSharp
    name:
      CSharp: GeologyCollection
      VB: GeologyCollection
    nameWithType:
      CSharp: GeologyCollection
      VB: GeologyCollection
    qualifiedName:
      CSharp: Project.GeologyCollection
      VB: Project.GeologyCollection
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Project
    source:
      id: GeologyCollection
      path: ''
      startLine: 5591
    syntax:
      content:
        CSharp: 'public class GeologyCollection : GeographyCollection'
        VB: >-
          Public Class GeologyCollection

              Inherits GeographyCollection
    inheritance:
    - System.Object
    - Project.TestableObject
    - Project.RecordSet
    - Project.GeographyCollection
    inheritedMembers:
    - Project.RecordSet.Id
    - Project.RecordSet.DisplayName
    - Project.RecordSet.Type
    - Project.RecordSet.DataType
    - Project.RecordSet.Source
    - Project.RecordSet.Features
    - Project.RecordSet.Position
    - Project.RecordSet.Transform
    - Project.RecordSet.Visible
    - Project.TestableObject.ContainsKey(System.String)
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Project.GeologyCollection.Properties
      commentId: F:Project.GeologyCollection.Properties
      language: CSharp
      name:
        CSharp: Properties
        VB: Properties
      nameWithType:
        CSharp: GeologyCollection.Properties
        VB: GeologyCollection.Properties
      qualifiedName:
        CSharp: Project.GeologyCollection.Properties
        VB: Project.GeologyCollection.Properties
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Properties
        path: ''
        startLine: 5594
      syntax:
        content:
          CSharp: public GeologyCollection.GeoData Properties
          VB: Public Properties As GeologyCollection.GeoData
        return:
          type: Project.GeologyCollection.GeoData
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Project.GeologyCollection.GeoData
    commentId: T:Project.GeologyCollection.GeoData
    language: CSharp
    name:
      CSharp: GeologyCollection.GeoData
      VB: GeologyCollection.GeoData
    nameWithType:
      CSharp: GeologyCollection.GeoData
      VB: GeologyCollection.GeoData
    qualifiedName:
      CSharp: Project.GeologyCollection.GeoData
      VB: Project.GeologyCollection.GeoData
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Project
    source:
      id: GeoData
      path: ''
      startLine: 5596
    syntax:
      content:
        CSharp: public struct GeoData
        VB: Public Structure GeoData
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Project.GeologyCollection.GeoData.Units
      commentId: F:Project.GeologyCollection.GeoData.Units
      language: CSharp
      name:
        CSharp: Units
        VB: Units
      nameWithType:
        CSharp: GeologyCollection.GeoData.Units
        VB: GeologyCollection.GeoData.Units
      qualifiedName:
        CSharp: Project.GeologyCollection.GeoData.Units
        VB: Project.GeologyCollection.GeoData.Units
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Units
        path: ''
        startLine: 5599
      syntax:
        content:
          CSharp: public Dictionary<string, Unit> Units
          VB: Public Units As Dictionary(Of String, Unit)
        return:
          type: Dictionary{System.String,Project.Unit}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.GeologyCollection.GeoData.Lines
      commentId: F:Project.GeologyCollection.GeoData.Lines
      language: CSharp
      name:
        CSharp: Lines
        VB: Lines
      nameWithType:
        CSharp: GeologyCollection.GeoData.Lines
        VB: GeologyCollection.GeoData.Lines
      qualifiedName:
        CSharp: Project.GeologyCollection.GeoData.Lines
        VB: Project.GeologyCollection.GeoData.Lines
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Lines
        path: ''
        startLine: 5601
      syntax:
        content:
          CSharp: public Dictionary<string, GeoTypes> Lines
          VB: Public Lines As Dictionary(Of String, GeoTypes)
        return:
          type: Dictionary{System.String,Project.GeoTypes}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.GeologyCollection.GeoData.xSect
      commentId: F:Project.GeologyCollection.GeoData.xSect
      language: CSharp
      name:
        CSharp: xSect
        VB: xSect
      nameWithType:
        CSharp: GeologyCollection.GeoData.xSect
        VB: GeologyCollection.GeoData.xSect
      qualifiedName:
        CSharp: Project.GeologyCollection.GeoData.xSect
        VB: Project.GeologyCollection.GeoData.xSect
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: xSect
        path: ''
        startLine: 5603
      syntax:
        content:
          CSharp: public string xSect
          VB: Public xSect As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Project.RecordSetDataType
    commentId: T:Project.RecordSetDataType
    language: CSharp
    name:
      CSharp: RecordSetDataType
      VB: RecordSetDataType
    nameWithType:
      CSharp: RecordSetDataType
      VB: RecordSetDataType
    qualifiedName:
      CSharp: Project.RecordSetDataType
      VB: Project.RecordSetDataType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Project
    source:
      id: RecordSetDataType
      path: ''
      startLine: 5608
    syntax:
      content:
        CSharp: public enum RecordSetDataType
        VB: Public Enum RecordSetDataType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Project.RecordSetDataType.Point
      commentId: F:Project.RecordSetDataType.Point
      language: CSharp
      name:
        CSharp: Point
        VB: Point
      nameWithType:
        CSharp: RecordSetDataType.Point
        VB: RecordSetDataType.Point
      qualifiedName:
        CSharp: Project.RecordSetDataType.Point
        VB: Project.RecordSetDataType.Point
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Point
        path: ''
        startLine: 5610
      syntax:
        content:
          CSharp: Point = 0
          VB: Point = 0
        return:
          type: Project.RecordSetDataType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Project.RecordSetDataType.Line
      commentId: F:Project.RecordSetDataType.Line
      language: CSharp
      name:
        CSharp: Line
        VB: Line
      nameWithType:
        CSharp: RecordSetDataType.Line
        VB: RecordSetDataType.Line
      qualifiedName:
        CSharp: Project.RecordSetDataType.Line
        VB: Project.RecordSetDataType.Line
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Line
        path: ''
        startLine: 5611
      syntax:
        content:
          CSharp: Line = 1
          VB: Line = 1
        return:
          type: Project.RecordSetDataType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Project.RecordSetDataType.Polygon
      commentId: F:Project.RecordSetDataType.Polygon
      language: CSharp
      name:
        CSharp: Polygon
        VB: Polygon
      nameWithType:
        CSharp: RecordSetDataType.Polygon
        VB: RecordSetDataType.Polygon
      qualifiedName:
        CSharp: Project.RecordSetDataType.Polygon
        VB: Project.RecordSetDataType.Polygon
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Polygon
        path: ''
        startLine: 5612
      syntax:
        content:
          CSharp: Polygon = 2
          VB: Polygon = 2
        return:
          type: Project.RecordSetDataType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Project.RecordSetDataType.PointCloud
      commentId: F:Project.RecordSetDataType.PointCloud
      language: CSharp
      name:
        CSharp: PointCloud
        VB: PointCloud
      nameWithType:
        CSharp: RecordSetDataType.PointCloud
        VB: RecordSetDataType.PointCloud
      qualifiedName:
        CSharp: Project.RecordSetDataType.PointCloud
        VB: Project.RecordSetDataType.PointCloud
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: PointCloud
        path: ''
        startLine: 5613
      syntax:
        content:
          CSharp: PointCloud = 3
          VB: PointCloud = 3
        return:
          type: Project.RecordSetDataType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Project.RecordSetDataType.Mesh
      commentId: F:Project.RecordSetDataType.Mesh
      language: CSharp
      name:
        CSharp: Mesh
        VB: Mesh
      nameWithType:
        CSharp: RecordSetDataType.Mesh
        VB: RecordSetDataType.Mesh
      qualifiedName:
        CSharp: Project.RecordSetDataType.Mesh
        VB: Project.RecordSetDataType.Mesh
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Mesh
        path: ''
        startLine: 5614
      syntax:
        content:
          CSharp: Mesh = 4
          VB: Mesh = 4
        return:
          type: Project.RecordSetDataType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Project.RecordSetDataType.Record
      commentId: F:Project.RecordSetDataType.Record
      language: CSharp
      name:
        CSharp: Record
        VB: Record
      nameWithType:
        CSharp: RecordSetDataType.Record
        VB: RecordSetDataType.Record
      qualifiedName:
        CSharp: Project.RecordSetDataType.Record
        VB: Project.RecordSetDataType.Record
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Record
        path: ''
        startLine: 5615
      syntax:
        content:
          CSharp: Record = 5
          VB: Record = 5
        return:
          type: Project.RecordSetDataType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Project.RecordSetDataType.XSect
      commentId: F:Project.RecordSetDataType.XSect
      language: CSharp
      name:
        CSharp: XSect
        VB: XSect
      nameWithType:
        CSharp: RecordSetDataType.XSect
        VB: RecordSetDataType.XSect
      qualifiedName:
        CSharp: Project.RecordSetDataType.XSect
        VB: Project.RecordSetDataType.XSect
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: XSect
        path: ''
        startLine: 5616
      syntax:
        content:
          CSharp: XSect = 6
          VB: XSect = 6
        return:
          type: Project.RecordSetDataType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Project.RecordSetDataType.Tab
      commentId: F:Project.RecordSetDataType.Tab
      language: CSharp
      name:
        CSharp: Tab
        VB: Tab
      nameWithType:
        CSharp: RecordSetDataType.Tab
        VB: RecordSetDataType.Tab
      qualifiedName:
        CSharp: Project.RecordSetDataType.Tab
        VB: Project.RecordSetDataType.Tab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Tab
        path: ''
        startLine: 5617
      syntax:
        content:
          CSharp: Tab = 7
          VB: Tab = 7
        return:
          type: Project.RecordSetDataType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Project.RecordSetDataType.CSV
      commentId: F:Project.RecordSetDataType.CSV
      language: CSharp
      name:
        CSharp: CSV
        VB: CSV
      nameWithType:
        CSharp: RecordSetDataType.CSV
        VB: RecordSetDataType.CSV
      qualifiedName:
        CSharp: Project.RecordSetDataType.CSV
        VB: Project.RecordSetDataType.CSV
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: CSV
        path: ''
        startLine: 5618
      syntax:
        content:
          CSharp: CSV = 8
          VB: CSV = 8
        return:
          type: Project.RecordSetDataType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Project.GeoTypes
    commentId: T:Project.GeoTypes
    language: CSharp
    name:
      CSharp: GeoTypes
      VB: GeoTypes
    nameWithType:
      CSharp: GeoTypes
      VB: GeoTypes
    qualifiedName:
      CSharp: Project.GeoTypes
      VB: Project.GeoTypes
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Project
    source:
      id: GeoTypes
      path: ''
      startLine: 5621
    syntax:
      content:
        CSharp: public enum GeoTypes
        VB: Public Enum GeoTypes
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Project.GeoTypes.Fault
      commentId: F:Project.GeoTypes.Fault
      language: CSharp
      name:
        CSharp: Fault
        VB: Fault
      nameWithType:
        CSharp: GeoTypes.Fault
        VB: GeoTypes.Fault
      qualifiedName:
        CSharp: Project.GeoTypes.Fault
        VB: Project.GeoTypes.Fault
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Fault
        path: ''
        startLine: 5623
      syntax:
        content:
          CSharp: Fault = 0
          VB: Fault = 0
        return:
          type: Project.GeoTypes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Project.GeoTypes.Fract
      commentId: F:Project.GeoTypes.Fract
      language: CSharp
      name:
        CSharp: Fract
        VB: Fract
      nameWithType:
        CSharp: GeoTypes.Fract
        VB: GeoTypes.Fract
      qualifiedName:
        CSharp: Project.GeoTypes.Fract
        VB: Project.GeoTypes.Fract
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Fract
        path: ''
        startLine: 5624
      syntax:
        content:
          CSharp: Fract = 1
          VB: Fract = 1
        return:
          type: Project.GeoTypes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Project.GeoTypes.Vein
      commentId: F:Project.GeoTypes.Vein
      language: CSharp
      name:
        CSharp: Vein
        VB: Vein
      nameWithType:
        CSharp: GeoTypes.Vein
        VB: GeoTypes.Vein
      qualifiedName:
        CSharp: Project.GeoTypes.Vein
        VB: Project.GeoTypes.Vein
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Vein
        path: ''
        startLine: 5625
      syntax:
        content:
          CSharp: Vein = 2
          VB: Vein = 2
        return:
          type: Project.GeoTypes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Project.Unit
    commentId: T:Project.Unit
    language: CSharp
    name:
      CSharp: Unit
      VB: Unit
    nameWithType:
      CSharp: Unit
      VB: Unit
    qualifiedName:
      CSharp: Project.Unit
      VB: Project.Unit
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Project
    source:
      id: Unit
      path: ''
      startLine: 5629
    syntax:
      content:
        CSharp: 'public class Unit : TestableObject'
        VB: >-
          Public Class Unit

              Inherits TestableObject
    inheritance:
    - System.Object
    - Project.TestableObject
    inheritedMembers:
    - Project.TestableObject.ContainsKey(System.String)
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Project.Unit.Color
      commentId: F:Project.Unit.Color
      language: CSharp
      name:
        CSharp: Color
        VB: Color
      nameWithType:
        CSharp: Unit.Color
        VB: Unit.Color
      qualifiedName:
        CSharp: Project.Unit.Color
        VB: Project.Unit.Color
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Color
        path: ''
        startLine: 5633
      syntax:
        content:
          CSharp: public SerializableColor Color
          VB: Public Color As SerializableColor
        return:
          type: Project.SerializableColor
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.Unit.Shape
      commentId: F:Project.Unit.Shape
      language: CSharp
      name:
        CSharp: Shape
        VB: Shape
      nameWithType:
        CSharp: Unit.Shape
        VB: Unit.Shape
      qualifiedName:
        CSharp: Project.Unit.Shape
        VB: Project.Unit.Shape
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Shape
        path: ''
        startLine: 5636
      syntax:
        content:
          CSharp: public Shapes Shape
          VB: Public Shape As Shapes
        return:
          type: Project.Shapes
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.Unit.Transform
      commentId: F:Project.Unit.Transform
      language: CSharp
      name:
        CSharp: Transform
        VB: Transform
      nameWithType:
        CSharp: Unit.Transform
        VB: Unit.Transform
      qualifiedName:
        CSharp: Project.Unit.Transform
        VB: Project.Unit.Transform
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Transform
        path: ''
        startLine: 5638
      syntax:
        content:
          CSharp: public JsonTransform Transform
          VB: Public Transform As JsonTransform
        return:
          type: Project.JsonTransform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Project.Unit.Label
      commentId: F:Project.Unit.Label
      language: CSharp
      name:
        CSharp: Label
        VB: Label
      nameWithType:
        CSharp: Unit.Label
        VB: Unit.Label
      qualifiedName:
        CSharp: Project.Unit.Label
        VB: Project.Unit.Label
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Label
        path: ''
        startLine: 5640
      syntax:
        content:
          CSharp: public string Label
          VB: Public Label As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Project.Shapes
    commentId: T:Project.Shapes
    language: CSharp
    name:
      CSharp: Shapes
      VB: Shapes
    nameWithType:
      CSharp: Shapes
      VB: Shapes
    qualifiedName:
      CSharp: Project.Shapes
      VB: Project.Shapes
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Project
    source:
      id: Shapes
      path: ''
      startLine: 5643
    syntax:
      content:
        CSharp: public enum Shapes
        VB: Public Enum Shapes
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Project.Shapes.Spheroid
      commentId: F:Project.Shapes.Spheroid
      language: CSharp
      name:
        CSharp: Spheroid
        VB: Spheroid
      nameWithType:
        CSharp: Shapes.Spheroid
        VB: Shapes.Spheroid
      qualifiedName:
        CSharp: Project.Shapes.Spheroid
        VB: Project.Shapes.Spheroid
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Spheroid
        path: ''
        startLine: 5645
      syntax:
        content:
          CSharp: Spheroid = 0
          VB: Spheroid = 0
        return:
          type: Project.Shapes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Project.Shapes.Cuboid
      commentId: F:Project.Shapes.Cuboid
      language: CSharp
      name:
        CSharp: Cuboid
        VB: Cuboid
      nameWithType:
        CSharp: Shapes.Cuboid
        VB: Shapes.Cuboid
      qualifiedName:
        CSharp: Project.Shapes.Cuboid
        VB: Project.Shapes.Cuboid
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Cuboid
        path: ''
        startLine: 5646
      syntax:
        content:
          CSharp: Cuboid = 1
          VB: Cuboid = 1
        return:
          type: Project.Shapes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Project.Shapes.Cylinder
      commentId: F:Project.Shapes.Cylinder
      language: CSharp
      name:
        CSharp: Cylinder
        VB: Cylinder
      nameWithType:
        CSharp: Shapes.Cylinder
        VB: Shapes.Cylinder
      qualifiedName:
        CSharp: Project.Shapes.Cylinder
        VB: Project.Shapes.Cylinder
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: Cylinder
        path: ''
        startLine: 5647
      syntax:
        content:
          CSharp: Cylinder = 2
          VB: Cylinder = 2
        return:
          type: Project.Shapes
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Project.TestableObject
    commentId: T:Project.TestableObject
    language: CSharp
    name:
      CSharp: TestableObject
      VB: TestableObject
    nameWithType:
      CSharp: TestableObject
      VB: TestableObject
    qualifiedName:
      CSharp: Project.TestableObject
      VB: Project.TestableObject
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Project
    source:
      id: TestableObject
      path: ''
      startLine: 5653
    summary: "\nGeneric class to make an entity testabble - to allow the members to be tested for their presence\n"
    example: []
    syntax:
      content:
        CSharp: public class TestableObject
        VB: Public Class TestableObject
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Project.TestableObject.ContainsKey(System.String)
      commentId: M:Project.TestableObject.ContainsKey(System.String)
      language: CSharp
      name:
        CSharp: ContainsKey(String)
        VB: ContainsKey(String)
      nameWithType:
        CSharp: TestableObject.ContainsKey(String)
        VB: TestableObject.ContainsKey(String)
      qualifiedName:
        CSharp: Project.TestableObject.ContainsKey(System.String)
        VB: Project.TestableObject.ContainsKey(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Project
      source:
        id: ContainsKey
        path: ''
        startLine: 5655
      syntax:
        content:
          CSharp: public bool ContainsKey(string propName)
          VB: Public Function ContainsKey(propName As String) As Boolean
        parameters:
        - id: propName
          type: System.String
        return:
          type: System.Boolean
      overload: Project.TestableObject.ContainsKey*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
references:
  Button:
    name:
      CSharp:
      - id: Button
        name: Button
        nameWithType: Button
        qualifiedName: Button
        isExternal: true
      VB:
      - id: Button
        name: Button
        nameWithType: Button
        qualifiedName: Button
        isExternal: true
    isDefinition: true
  GameObject:
    name:
      CSharp:
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      VB:
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
    isDefinition: true
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  Virgis.MenuFacade.Visible*:
    name:
      CSharp:
      - id: Virgis.MenuFacade.Visible*
        name: Visible
        nameWithType: MenuFacade.Visible
        qualifiedName: Virgis.MenuFacade.Visible
      VB:
      - id: Virgis.MenuFacade.Visible*
        name: Visible
        nameWithType: MenuFacade.Visible
        qualifiedName: Virgis.MenuFacade.Visible
    isDefinition: true
    commentId: Overload:Virgis.MenuFacade.Visible
  InputAction.CallbackContext:
    name:
      CSharp:
      - id: InputAction.CallbackContext
        name: InputAction.CallbackContext
        nameWithType: InputAction.CallbackContext
        qualifiedName: InputAction.CallbackContext
        isExternal: true
      VB:
      - id: InputAction.CallbackContext
        name: InputAction.CallbackContext
        nameWithType: InputAction.CallbackContext
        qualifiedName: InputAction.CallbackContext
        isExternal: true
    isDefinition: true
  Virgis.MenuFacade.HandleKeyInput*:
    name:
      CSharp:
      - id: Virgis.MenuFacade.HandleKeyInput*
        name: HandleKeyInput
        nameWithType: MenuFacade.HandleKeyInput
        qualifiedName: Virgis.MenuFacade.HandleKeyInput
      VB:
      - id: Virgis.MenuFacade.HandleKeyInput*
        name: HandleKeyInput
        nameWithType: MenuFacade.HandleKeyInput
        qualifiedName: Virgis.MenuFacade.HandleKeyInput
    isDefinition: true
    commentId: Overload:Virgis.MenuFacade.HandleKeyInput
  Virgis.MenuFacade.OnShowLayersButtonClicked*:
    name:
      CSharp:
      - id: Virgis.MenuFacade.OnShowLayersButtonClicked*
        name: OnShowLayersButtonClicked
        nameWithType: MenuFacade.OnShowLayersButtonClicked
        qualifiedName: Virgis.MenuFacade.OnShowLayersButtonClicked
      VB:
      - id: Virgis.MenuFacade.OnShowLayersButtonClicked*
        name: OnShowLayersButtonClicked
        nameWithType: MenuFacade.OnShowLayersButtonClicked
        qualifiedName: Virgis.MenuFacade.OnShowLayersButtonClicked
    isDefinition: true
    commentId: Overload:Virgis.MenuFacade.OnShowLayersButtonClicked
  Virgis.MenuFacade.OnStartEditButtonClicked*:
    name:
      CSharp:
      - id: Virgis.MenuFacade.OnStartEditButtonClicked*
        name: OnStartEditButtonClicked
        nameWithType: MenuFacade.OnStartEditButtonClicked
        qualifiedName: Virgis.MenuFacade.OnStartEditButtonClicked
      VB:
      - id: Virgis.MenuFacade.OnStartEditButtonClicked*
        name: OnStartEditButtonClicked
        nameWithType: MenuFacade.OnStartEditButtonClicked
        qualifiedName: Virgis.MenuFacade.OnStartEditButtonClicked
    isDefinition: true
    commentId: Overload:Virgis.MenuFacade.OnStartEditButtonClicked
  Virgis.MenuFacade.OnStopSaveEditButtonClicked*:
    name:
      CSharp:
      - id: Virgis.MenuFacade.OnStopSaveEditButtonClicked*
        name: OnStopSaveEditButtonClicked
        nameWithType: MenuFacade.OnStopSaveEditButtonClicked
        qualifiedName: Virgis.MenuFacade.OnStopSaveEditButtonClicked
      VB:
      - id: Virgis.MenuFacade.OnStopSaveEditButtonClicked*
        name: OnStopSaveEditButtonClicked
        nameWithType: MenuFacade.OnStopSaveEditButtonClicked
        qualifiedName: Virgis.MenuFacade.OnStopSaveEditButtonClicked
    isDefinition: true
    commentId: Overload:Virgis.MenuFacade.OnStopSaveEditButtonClicked
  Virgis.MenuFacade.OnStopDiscardEditButtonClicked*:
    name:
      CSharp:
      - id: Virgis.MenuFacade.OnStopDiscardEditButtonClicked*
        name: OnStopDiscardEditButtonClicked
        nameWithType: MenuFacade.OnStopDiscardEditButtonClicked
        qualifiedName: Virgis.MenuFacade.OnStopDiscardEditButtonClicked
      VB:
      - id: Virgis.MenuFacade.OnStopDiscardEditButtonClicked*
        name: OnStopDiscardEditButtonClicked
        nameWithType: MenuFacade.OnStopDiscardEditButtonClicked
        qualifiedName: Virgis.MenuFacade.OnStopDiscardEditButtonClicked
    isDefinition: true
    commentId: Overload:Virgis.MenuFacade.OnStopDiscardEditButtonClicked
  Virgis.MenuFacade:
    name:
      CSharp:
      - id: Virgis.MenuFacade
        name: MenuFacade
        nameWithType: MenuFacade
        qualifiedName: Virgis.MenuFacade
      VB:
      - id: Virgis.MenuFacade
        name: MenuFacade
        nameWithType: MenuFacade
        qualifiedName: Virgis.MenuFacade
    isDefinition: true
    commentId: T:Virgis.MenuFacade
  Virgis:
    name:
      CSharp:
      - name: Virgis
        nameWithType: Virgis
        qualifiedName: Virgis
      VB:
      - name: Virgis
        nameWithType: Virgis
        qualifiedName: Virgis
    isDefinition: true
    commentId: N:Virgis
  Virgis.AppState:
    name:
      CSharp:
      - id: Virgis.AppState
        name: AppState
        nameWithType: AppState
        qualifiedName: Virgis.AppState
      VB:
      - id: Virgis.AppState
        name: AppState
        nameWithType: AppState
        qualifiedName: Virgis.AppState
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.AppState
  Virgis.AppState.Init*:
    name:
      CSharp:
      - id: Virgis.AppState.Init*
        name: Init
        nameWithType: AppState.Init
        qualifiedName: Virgis.AppState.Init
      VB:
      - id: Virgis.AppState.Init*
        name: Init
        nameWithType: AppState.Init
        qualifiedName: Virgis.AppState.Init
    isDefinition: true
    commentId: Overload:Virgis.AppState.Init
  Virgis.EditSession:
    name:
      CSharp:
      - id: Virgis.EditSession
        name: EditSession
        nameWithType: EditSession
        qualifiedName: Virgis.EditSession
      VB:
      - id: Virgis.EditSession
        name: EditSession
        nameWithType: EditSession
        qualifiedName: Virgis.EditSession
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.EditSession
  Virgis.AppState.editSession*:
    name:
      CSharp:
      - id: Virgis.AppState.editSession*
        name: editSession
        nameWithType: AppState.editSession
        qualifiedName: Virgis.AppState.editSession
      VB:
      - id: Virgis.AppState.editSession*
        name: editSession
        nameWithType: AppState.editSession
        qualifiedName: Virgis.AppState.editSession
    isDefinition: true
    commentId: Overload:Virgis.AppState.editSession
  AbstractMap:
    name:
      CSharp:
      - id: AbstractMap
        name: AbstractMap
        nameWithType: AbstractMap
        qualifiedName: AbstractMap
        isExternal: true
      VB:
      - id: AbstractMap
        name: AbstractMap
        nameWithType: AbstractMap
        qualifiedName: AbstractMap
        isExternal: true
    isDefinition: true
    commentId: '!:AbstractMap'
  Virgis.AppState.abstractMap*:
    name:
      CSharp:
      - id: Virgis.AppState.abstractMap*
        name: abstractMap
        nameWithType: AppState.abstractMap
        qualifiedName: Virgis.AppState.abstractMap
      VB:
      - id: Virgis.AppState.abstractMap*
        name: abstractMap
        nameWithType: AppState.abstractMap
        qualifiedName: Virgis.AppState.abstractMap
    isDefinition: true
    commentId: Overload:Virgis.AppState.abstractMap
  Virgis.AppState.map*:
    name:
      CSharp:
      - id: Virgis.AppState.map*
        name: map
        nameWithType: AppState.map
        qualifiedName: Virgis.AppState.map
      VB:
      - id: Virgis.AppState.map*
        name: map
        nameWithType: AppState.map
        qualifiedName: Virgis.AppState.map
    isDefinition: true
    commentId: Overload:Virgis.AppState.map
  GisProject:
    name:
      CSharp:
      - id: GisProject
        name: GisProject
        nameWithType: GisProject
        qualifiedName: GisProject
        isExternal: true
      VB:
      - id: GisProject
        name: GisProject
        nameWithType: GisProject
        qualifiedName: GisProject
        isExternal: true
    isDefinition: true
  Virgis.AppState.project*:
    name:
      CSharp:
      - id: Virgis.AppState.project*
        name: project
        nameWithType: AppState.project
        qualifiedName: Virgis.AppState.project
      VB:
      - id: Virgis.AppState.project*
        name: project
        nameWithType: AppState.project
        qualifiedName: Virgis.AppState.project
    isDefinition: true
    commentId: Overload:Virgis.AppState.project
  List`1:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  List{Component}:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Component
        name: Component
        nameWithType: Component
        qualifiedName: Component
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Component
        name: Component
        nameWithType: Component
        qualifiedName: Component
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: List`1
    commentId: '!:List{Component}'
  Virgis.AppState.layers*:
    name:
      CSharp:
      - id: Virgis.AppState.layers*
        name: layers
        nameWithType: AppState.layers
        qualifiedName: Virgis.AppState.layers
      VB:
      - id: Virgis.AppState.layers*
        name: layers
        nameWithType: AppState.layers
        qualifiedName: Virgis.AppState.layers
    isDefinition: true
    commentId: Overload:Virgis.AppState.layers
  Component:
    name:
      CSharp:
      - id: Component
        name: Component
        nameWithType: Component
        qualifiedName: Component
        isExternal: true
      VB:
      - id: Component
        name: Component
        nameWithType: Component
        qualifiedName: Component
        isExternal: true
    isDefinition: true
    commentId: '!:Component'
  Virgis.AppState.addLayer*:
    name:
      CSharp:
      - id: Virgis.AppState.addLayer*
        name: addLayer
        nameWithType: AppState.addLayer
        qualifiedName: Virgis.AppState.addLayer
      VB:
      - id: Virgis.AppState.addLayer*
        name: addLayer
        nameWithType: AppState.addLayer
        qualifiedName: Virgis.AppState.addLayer
    isDefinition: true
    commentId: Overload:Virgis.AppState.addLayer
  Virgis.AppState.clearLayers*:
    name:
      CSharp:
      - id: Virgis.AppState.clearLayers*
        name: clearLayers
        nameWithType: AppState.clearLayers
        qualifiedName: Virgis.AppState.clearLayers
      VB:
      - id: Virgis.AppState.clearLayers*
        name: clearLayers
        nameWithType: AppState.clearLayers
        qualifiedName: Virgis.AppState.clearLayers
    isDefinition: true
    commentId: Overload:Virgis.AppState.clearLayers
  Camera:
    name:
      CSharp:
      - id: Camera
        name: Camera
        nameWithType: Camera
        qualifiedName: Camera
        isExternal: true
      VB:
      - id: Camera
        name: Camera
        nameWithType: Camera
        qualifiedName: Camera
        isExternal: true
    isDefinition: true
  Virgis.AppState.mainCamera*:
    name:
      CSharp:
      - id: Virgis.AppState.mainCamera*
        name: mainCamera
        nameWithType: AppState.mainCamera
        qualifiedName: Virgis.AppState.mainCamera
      VB:
      - id: Virgis.AppState.mainCamera*
        name: mainCamera
        nameWithType: AppState.mainCamera
        qualifiedName: Virgis.AppState.mainCamera
    isDefinition: true
    commentId: Overload:Virgis.AppState.mainCamera
  Virgis.AppState.trackingSpace*:
    name:
      CSharp:
      - id: Virgis.AppState.trackingSpace*
        name: trackingSpace
        nameWithType: AppState.trackingSpace
        qualifiedName: Virgis.AppState.trackingSpace
      VB:
      - id: Virgis.AppState.trackingSpace*
        name: trackingSpace
        nameWithType: AppState.trackingSpace
        qualifiedName: Virgis.AppState.trackingSpace
    isDefinition: true
    commentId: Overload:Virgis.AppState.trackingSpace
  Virgis.AppState.InEditSession*:
    name:
      CSharp:
      - id: Virgis.AppState.InEditSession*
        name: InEditSession
        nameWithType: AppState.InEditSession
        qualifiedName: Virgis.AppState.InEditSession
      VB:
      - id: Virgis.AppState.InEditSession*
        name: InEditSession
        nameWithType: AppState.InEditSession
        qualifiedName: Virgis.AppState.InEditSession
    isDefinition: true
    commentId: Overload:Virgis.AppState.InEditSession
  Virgis.AppState.StartEditSession*:
    name:
      CSharp:
      - id: Virgis.AppState.StartEditSession*
        name: StartEditSession
        nameWithType: AppState.StartEditSession
        qualifiedName: Virgis.AppState.StartEditSession
      VB:
      - id: Virgis.AppState.StartEditSession*
        name: StartEditSession
        nameWithType: AppState.StartEditSession
        qualifiedName: Virgis.AppState.StartEditSession
    isDefinition: true
    commentId: Overload:Virgis.AppState.StartEditSession
  Virgis.AppState.StopSaveEditSession*:
    name:
      CSharp:
      - id: Virgis.AppState.StopSaveEditSession*
        name: StopSaveEditSession
        nameWithType: AppState.StopSaveEditSession
        qualifiedName: Virgis.AppState.StopSaveEditSession
      VB:
      - id: Virgis.AppState.StopSaveEditSession*
        name: StopSaveEditSession
        nameWithType: AppState.StopSaveEditSession
        qualifiedName: Virgis.AppState.StopSaveEditSession
    isDefinition: true
    commentId: Overload:Virgis.AppState.StopSaveEditSession
  Virgis.AppState.StopDiscardEditSession*:
    name:
      CSharp:
      - id: Virgis.AppState.StopDiscardEditSession*
        name: StopDiscardEditSession
        nameWithType: AppState.StopDiscardEditSession
        qualifiedName: Virgis.AppState.StopDiscardEditSession
      VB:
      - id: Virgis.AppState.StopDiscardEditSession*
        name: StopDiscardEditSession
        nameWithType: AppState.StopDiscardEditSession
        qualifiedName: Virgis.AppState.StopDiscardEditSession
    isDefinition: true
    commentId: Overload:Virgis.AppState.StopDiscardEditSession
  UnityAction:
    name:
      CSharp:
      - id: UnityAction
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      VB:
      - id: UnityAction
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
    isDefinition: true
  Virgis.AppState.AddStartEditSessionListener*:
    name:
      CSharp:
      - id: Virgis.AppState.AddStartEditSessionListener*
        name: AddStartEditSessionListener
        nameWithType: AppState.AddStartEditSessionListener
        qualifiedName: Virgis.AppState.AddStartEditSessionListener
      VB:
      - id: Virgis.AppState.AddStartEditSessionListener*
        name: AddStartEditSessionListener
        nameWithType: AppState.AddStartEditSessionListener
        qualifiedName: Virgis.AppState.AddStartEditSessionListener
    isDefinition: true
    commentId: Overload:Virgis.AppState.AddStartEditSessionListener
  UnityAction`1:
    name:
      CSharp:
      - id: UnityAction`1
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: UnityAction`1
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  UnityAction{System.Boolean}:
    name:
      CSharp:
      - id: UnityAction`1
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: UnityAction`1
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: UnityAction`1
    commentId: '!:UnityAction{System.Boolean}'
  Virgis.AppState.AddEndEditSessionListener*:
    name:
      CSharp:
      - id: Virgis.AppState.AddEndEditSessionListener*
        name: AddEndEditSessionListener
        nameWithType: AppState.AddEndEditSessionListener
        qualifiedName: Virgis.AppState.AddEndEditSessionListener
      VB:
      - id: Virgis.AppState.AddEndEditSessionListener*
        name: AddEndEditSessionListener
        nameWithType: AppState.AddEndEditSessionListener
        qualifiedName: Virgis.AppState.AddEndEditSessionListener
    isDefinition: true
    commentId: Overload:Virgis.AppState.AddEndEditSessionListener
  UnityAction{System.Single}:
    name:
      CSharp:
      - id: UnityAction`1
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: UnityAction`1
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: UnityAction`1
    commentId: '!:UnityAction{System.Single}'
  Virgis.AppState.AddZoomChangeListerner*:
    name:
      CSharp:
      - id: Virgis.AppState.AddZoomChangeListerner*
        name: AddZoomChangeListerner
        nameWithType: AppState.AddZoomChangeListerner
        qualifiedName: Virgis.AppState.AddZoomChangeListerner
      VB:
      - id: Virgis.AppState.AddZoomChangeListerner*
        name: AddZoomChangeListerner
        nameWithType: AppState.AddZoomChangeListerner
        qualifiedName: Virgis.AppState.AddZoomChangeListerner
    isDefinition: true
    commentId: Overload:Virgis.AppState.AddZoomChangeListerner
  System.Single:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Single
  Virgis.AppState.ZoomChange*:
    name:
      CSharp:
      - id: Virgis.AppState.ZoomChange*
        name: ZoomChange
        nameWithType: AppState.ZoomChange
        qualifiedName: Virgis.AppState.ZoomChange
      VB:
      - id: Virgis.AppState.ZoomChange*
        name: ZoomChange
        nameWithType: AppState.ZoomChange
        qualifiedName: Virgis.AppState.ZoomChange
    isDefinition: true
    commentId: Overload:Virgis.AppState.ZoomChange
  Virgis.AppState.GetScale*:
    name:
      CSharp:
      - id: Virgis.AppState.GetScale*
        name: GetScale
        nameWithType: AppState.GetScale
        qualifiedName: Virgis.AppState.GetScale
      VB:
      - id: Virgis.AppState.GetScale*
        name: GetScale
        nameWithType: AppState.GetScale
        qualifiedName: Virgis.AppState.GetScale
    isDefinition: true
    commentId: Overload:Virgis.AppState.GetScale
  Virgis.ZoomEvent.#ctor*:
    name:
      CSharp:
      - id: Virgis.ZoomEvent.#ctor*
        name: ZoomEvent
        nameWithType: ZoomEvent.ZoomEvent
        qualifiedName: Virgis.ZoomEvent.ZoomEvent
      VB:
      - id: Virgis.ZoomEvent.#ctor*
        name: ZoomEvent
        nameWithType: ZoomEvent.ZoomEvent
        qualifiedName: Virgis.ZoomEvent.ZoomEvent
    isDefinition: true
    commentId: Overload:Virgis.ZoomEvent.#ctor
  Virgis.ZoomEvent.AddZoomChangeListerner*:
    name:
      CSharp:
      - id: Virgis.ZoomEvent.AddZoomChangeListerner*
        name: AddZoomChangeListerner
        nameWithType: ZoomEvent.AddZoomChangeListerner
        qualifiedName: Virgis.ZoomEvent.AddZoomChangeListerner
      VB:
      - id: Virgis.ZoomEvent.AddZoomChangeListerner*
        name: AddZoomChangeListerner
        nameWithType: ZoomEvent.AddZoomChangeListerner
        qualifiedName: Virgis.ZoomEvent.AddZoomChangeListerner
    isDefinition: true
    commentId: Overload:Virgis.ZoomEvent.AddZoomChangeListerner
  Virgis.ZoomEvent.Change*:
    name:
      CSharp:
      - id: Virgis.ZoomEvent.Change*
        name: Change
        nameWithType: ZoomEvent.Change
        qualifiedName: Virgis.ZoomEvent.Change
      VB:
      - id: Virgis.ZoomEvent.Change*
        name: Change
        nameWithType: ZoomEvent.Change
        qualifiedName: Virgis.ZoomEvent.Change
    isDefinition: true
    commentId: Overload:Virgis.ZoomEvent.Change
  Virgis.ZoomEvent.GetScale*:
    name:
      CSharp:
      - id: Virgis.ZoomEvent.GetScale*
        name: GetScale
        nameWithType: ZoomEvent.GetScale
        qualifiedName: Virgis.ZoomEvent.GetScale
      VB:
      - id: Virgis.ZoomEvent.GetScale*
        name: GetScale
        nameWithType: ZoomEvent.GetScale
        qualifiedName: Virgis.ZoomEvent.GetScale
    isDefinition: true
    commentId: Overload:Virgis.ZoomEvent.GetScale
  Virgis.ZoomEvent:
    name:
      CSharp:
      - id: Virgis.ZoomEvent
        name: ZoomEvent
        nameWithType: ZoomEvent
        qualifiedName: Virgis.ZoomEvent
      VB:
      - id: Virgis.ZoomEvent
        name: ZoomEvent
        nameWithType: ZoomEvent
        qualifiedName: Virgis.ZoomEvent
    isDefinition: true
    commentId: T:Virgis.ZoomEvent
  Virgis.FlyingCam.HandleMove*:
    name:
      CSharp:
      - id: Virgis.FlyingCam.HandleMove*
        name: HandleMove
        nameWithType: FlyingCam.HandleMove
        qualifiedName: Virgis.FlyingCam.HandleMove
      VB:
      - id: Virgis.FlyingCam.HandleMove*
        name: HandleMove
        nameWithType: FlyingCam.HandleMove
        qualifiedName: Virgis.FlyingCam.HandleMove
    isDefinition: true
    commentId: Overload:Virgis.FlyingCam.HandleMove
  Virgis.FlyingCam.HandleVertical*:
    name:
      CSharp:
      - id: Virgis.FlyingCam.HandleVertical*
        name: HandleVertical
        nameWithType: FlyingCam.HandleVertical
        qualifiedName: Virgis.FlyingCam.HandleVertical
      VB:
      - id: Virgis.FlyingCam.HandleVertical*
        name: HandleVertical
        nameWithType: FlyingCam.HandleVertical
        qualifiedName: Virgis.FlyingCam.HandleVertical
    isDefinition: true
    commentId: Overload:Virgis.FlyingCam.HandleVertical
  Virgis.FlyingCam.HandlePanZoom*:
    name:
      CSharp:
      - id: Virgis.FlyingCam.HandlePanZoom*
        name: HandlePanZoom
        nameWithType: FlyingCam.HandlePanZoom
        qualifiedName: Virgis.FlyingCam.HandlePanZoom
      VB:
      - id: Virgis.FlyingCam.HandlePanZoom*
        name: HandlePanZoom
        nameWithType: FlyingCam.HandlePanZoom
        qualifiedName: Virgis.FlyingCam.HandlePanZoom
    isDefinition: true
    commentId: Overload:Virgis.FlyingCam.HandlePanZoom
  Virgis.FlyingCam.HandleMouseRotation*:
    name:
      CSharp:
      - id: Virgis.FlyingCam.HandleMouseRotation*
        name: HandleMouseRotation
        nameWithType: FlyingCam.HandleMouseRotation
        qualifiedName: Virgis.FlyingCam.HandleMouseRotation
      VB:
      - id: Virgis.FlyingCam.HandleMouseRotation*
        name: HandleMouseRotation
        nameWithType: FlyingCam.HandleMouseRotation
        qualifiedName: Virgis.FlyingCam.HandleMouseRotation
    isDefinition: true
    commentId: Overload:Virgis.FlyingCam.HandleMouseRotation
  Virgis.FlyingCam.HandleKeyInput*:
    name:
      CSharp:
      - id: Virgis.FlyingCam.HandleKeyInput*
        name: HandleKeyInput
        nameWithType: FlyingCam.HandleKeyInput
        qualifiedName: Virgis.FlyingCam.HandleKeyInput
      VB:
      - id: Virgis.FlyingCam.HandleKeyInput*
        name: HandleKeyInput
        nameWithType: FlyingCam.HandleKeyInput
        qualifiedName: Virgis.FlyingCam.HandleKeyInput
    isDefinition: true
    commentId: Overload:Virgis.FlyingCam.HandleKeyInput
  Virgis.FlyingCam.HandleMouseClick*:
    name:
      CSharp:
      - id: Virgis.FlyingCam.HandleMouseClick*
        name: HandleMouseClick
        nameWithType: FlyingCam.HandleMouseClick
        qualifiedName: Virgis.FlyingCam.HandleMouseClick
      VB:
      - id: Virgis.FlyingCam.HandleMouseClick*
        name: HandleMouseClick
        nameWithType: FlyingCam.HandleMouseClick
        qualifiedName: Virgis.FlyingCam.HandleMouseClick
    isDefinition: true
    commentId: Overload:Virgis.FlyingCam.HandleMouseClick
  Vector2:
    name:
      CSharp:
      - id: Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      VB:
      - id: Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
    isDefinition: true
  Virgis.FlyingCam.Move*:
    name:
      CSharp:
      - id: Virgis.FlyingCam.Move*
        name: Move
        nameWithType: FlyingCam.Move
        qualifiedName: Virgis.FlyingCam.Move
      VB:
      - id: Virgis.FlyingCam.Move*
        name: Move
        nameWithType: FlyingCam.Move
        qualifiedName: Virgis.FlyingCam.Move
    isDefinition: true
    commentId: Overload:Virgis.FlyingCam.Move
  Virgis.FlyingCam.PanZoom*:
    name:
      CSharp:
      - id: Virgis.FlyingCam.PanZoom*
        name: PanZoom
        nameWithType: FlyingCam.PanZoom
        qualifiedName: Virgis.FlyingCam.PanZoom
      VB:
      - id: Virgis.FlyingCam.PanZoom*
        name: PanZoom
        nameWithType: FlyingCam.PanZoom
        qualifiedName: Virgis.FlyingCam.PanZoom
    isDefinition: true
    commentId: Overload:Virgis.FlyingCam.PanZoom
  ObjectPointer.EventData:
    name:
      CSharp:
      - id: ObjectPointer.EventData
        name: ObjectPointer.EventData
        nameWithType: ObjectPointer.EventData
        qualifiedName: ObjectPointer.EventData
        isExternal: true
      VB:
      - id: ObjectPointer.EventData
        name: ObjectPointer.EventData
        nameWithType: ObjectPointer.EventData
        qualifiedName: ObjectPointer.EventData
        isExternal: true
    isDefinition: true
  Virgis.FlyingCam.PointerHit*:
    name:
      CSharp:
      - id: Virgis.FlyingCam.PointerHit*
        name: PointerHit
        nameWithType: FlyingCam.PointerHit
        qualifiedName: Virgis.FlyingCam.PointerHit
      VB:
      - id: Virgis.FlyingCam.PointerHit*
        name: PointerHit
        nameWithType: FlyingCam.PointerHit
        qualifiedName: Virgis.FlyingCam.PointerHit
    isDefinition: true
    commentId: Overload:Virgis.FlyingCam.PointerHit
  Virgis.FlyingCam.PointerUnhit*:
    name:
      CSharp:
      - id: Virgis.FlyingCam.PointerUnhit*
        name: PointerUnhit
        nameWithType: FlyingCam.PointerUnhit
        qualifiedName: Virgis.FlyingCam.PointerUnhit
      VB:
      - id: Virgis.FlyingCam.PointerUnhit*
        name: PointerUnhit
        nameWithType: FlyingCam.PointerUnhit
        qualifiedName: Virgis.FlyingCam.PointerUnhit
    isDefinition: true
    commentId: Overload:Virgis.FlyingCam.PointerUnhit
  Virgis.FlyingCam.triggerPressed*:
    name:
      CSharp:
      - id: Virgis.FlyingCam.triggerPressed*
        name: triggerPressed
        nameWithType: FlyingCam.triggerPressed
        qualifiedName: Virgis.FlyingCam.triggerPressed
      VB:
      - id: Virgis.FlyingCam.triggerPressed*
        name: triggerPressed
        nameWithType: FlyingCam.triggerPressed
        qualifiedName: Virgis.FlyingCam.triggerPressed
    isDefinition: true
    commentId: Overload:Virgis.FlyingCam.triggerPressed
  Virgis.FlyingCam.gripPressed*:
    name:
      CSharp:
      - id: Virgis.FlyingCam.gripPressed*
        name: gripPressed
        nameWithType: FlyingCam.gripPressed
        qualifiedName: Virgis.FlyingCam.gripPressed
      VB:
      - id: Virgis.FlyingCam.gripPressed*
        name: gripPressed
        nameWithType: FlyingCam.gripPressed
        qualifiedName: Virgis.FlyingCam.gripPressed
    isDefinition: true
    commentId: Overload:Virgis.FlyingCam.gripPressed
  Virgis.FlyingCam.lhTriggerPressed*:
    name:
      CSharp:
      - id: Virgis.FlyingCam.lhTriggerPressed*
        name: lhTriggerPressed
        nameWithType: FlyingCam.lhTriggerPressed
        qualifiedName: Virgis.FlyingCam.lhTriggerPressed
      VB:
      - id: Virgis.FlyingCam.lhTriggerPressed*
        name: lhTriggerPressed
        nameWithType: FlyingCam.lhTriggerPressed
        qualifiedName: Virgis.FlyingCam.lhTriggerPressed
    isDefinition: true
    commentId: Overload:Virgis.FlyingCam.lhTriggerPressed
  Virgis.FlyingCam.lhGripPressed*:
    name:
      CSharp:
      - id: Virgis.FlyingCam.lhGripPressed*
        name: lhGripPressed
        nameWithType: FlyingCam.lhGripPressed
        qualifiedName: Virgis.FlyingCam.lhGripPressed
      VB:
      - id: Virgis.FlyingCam.lhGripPressed*
        name: lhGripPressed
        nameWithType: FlyingCam.lhGripPressed
        qualifiedName: Virgis.FlyingCam.lhGripPressed
    isDefinition: true
    commentId: Overload:Virgis.FlyingCam.lhGripPressed
  Virgis.FlyingCam.addVertexPressed*:
    name:
      CSharp:
      - id: Virgis.FlyingCam.addVertexPressed*
        name: addVertexPressed
        nameWithType: FlyingCam.addVertexPressed
        qualifiedName: Virgis.FlyingCam.addVertexPressed
      VB:
      - id: Virgis.FlyingCam.addVertexPressed*
        name: addVertexPressed
        nameWithType: FlyingCam.addVertexPressed
        qualifiedName: Virgis.FlyingCam.addVertexPressed
    isDefinition: true
    commentId: Overload:Virgis.FlyingCam.addVertexPressed
  Virgis.FlyingCam.delVertexPressed*:
    name:
      CSharp:
      - id: Virgis.FlyingCam.delVertexPressed*
        name: delVertexPressed
        nameWithType: FlyingCam.delVertexPressed
        qualifiedName: Virgis.FlyingCam.delVertexPressed
      VB:
      - id: Virgis.FlyingCam.delVertexPressed*
        name: delVertexPressed
        nameWithType: FlyingCam.delVertexPressed
        qualifiedName: Virgis.FlyingCam.delVertexPressed
    isDefinition: true
    commentId: Overload:Virgis.FlyingCam.delVertexPressed
  Virgis.FlyingCam.triggerReleased*:
    name:
      CSharp:
      - id: Virgis.FlyingCam.triggerReleased*
        name: triggerReleased
        nameWithType: FlyingCam.triggerReleased
        qualifiedName: Virgis.FlyingCam.triggerReleased
      VB:
      - id: Virgis.FlyingCam.triggerReleased*
        name: triggerReleased
        nameWithType: FlyingCam.triggerReleased
        qualifiedName: Virgis.FlyingCam.triggerReleased
    isDefinition: true
    commentId: Overload:Virgis.FlyingCam.triggerReleased
  Virgis.FlyingCam.gripReleased*:
    name:
      CSharp:
      - id: Virgis.FlyingCam.gripReleased*
        name: gripReleased
        nameWithType: FlyingCam.gripReleased
        qualifiedName: Virgis.FlyingCam.gripReleased
      VB:
      - id: Virgis.FlyingCam.gripReleased*
        name: gripReleased
        nameWithType: FlyingCam.gripReleased
        qualifiedName: Virgis.FlyingCam.gripReleased
    isDefinition: true
    commentId: Overload:Virgis.FlyingCam.gripReleased
  Virgis.FlyingCam.lhTriggerReleased*:
    name:
      CSharp:
      - id: Virgis.FlyingCam.lhTriggerReleased*
        name: lhTriggerReleased
        nameWithType: FlyingCam.lhTriggerReleased
        qualifiedName: Virgis.FlyingCam.lhTriggerReleased
      VB:
      - id: Virgis.FlyingCam.lhTriggerReleased*
        name: lhTriggerReleased
        nameWithType: FlyingCam.lhTriggerReleased
        qualifiedName: Virgis.FlyingCam.lhTriggerReleased
    isDefinition: true
    commentId: Overload:Virgis.FlyingCam.lhTriggerReleased
  Virgis.FlyingCam.lhGripRelaesed*:
    name:
      CSharp:
      - id: Virgis.FlyingCam.lhGripRelaesed*
        name: lhGripRelaesed
        nameWithType: FlyingCam.lhGripRelaesed
        qualifiedName: Virgis.FlyingCam.lhGripRelaesed
      VB:
      - id: Virgis.FlyingCam.lhGripRelaesed*
        name: lhGripRelaesed
        nameWithType: FlyingCam.lhGripRelaesed
        qualifiedName: Virgis.FlyingCam.lhGripRelaesed
    isDefinition: true
    commentId: Overload:Virgis.FlyingCam.lhGripRelaesed
  Virgis.FlyingCam.addVertexReleased*:
    name:
      CSharp:
      - id: Virgis.FlyingCam.addVertexReleased*
        name: addVertexReleased
        nameWithType: FlyingCam.addVertexReleased
        qualifiedName: Virgis.FlyingCam.addVertexReleased
      VB:
      - id: Virgis.FlyingCam.addVertexReleased*
        name: addVertexReleased
        nameWithType: FlyingCam.addVertexReleased
        qualifiedName: Virgis.FlyingCam.addVertexReleased
    isDefinition: true
    commentId: Overload:Virgis.FlyingCam.addVertexReleased
  Virgis.FlyingCam.delVertexReleased*:
    name:
      CSharp:
      - id: Virgis.FlyingCam.delVertexReleased*
        name: delVertexReleased
        nameWithType: FlyingCam.delVertexReleased
        qualifiedName: Virgis.FlyingCam.delVertexReleased
      VB:
      - id: Virgis.FlyingCam.delVertexReleased*
        name: delVertexReleased
        nameWithType: FlyingCam.delVertexReleased
        qualifiedName: Virgis.FlyingCam.delVertexReleased
    isDefinition: true
    commentId: Overload:Virgis.FlyingCam.delVertexReleased
  PointsCast.EventData:
    name:
      CSharp:
      - id: PointsCast.EventData
        name: PointsCast.EventData
        nameWithType: PointsCast.EventData
        qualifiedName: PointsCast.EventData
        isExternal: true
      VB:
      - id: PointsCast.EventData
        name: PointsCast.EventData
        nameWithType: PointsCast.EventData
        qualifiedName: PointsCast.EventData
        isExternal: true
    isDefinition: true
    commentId: '!:PointsCast.EventData'
  Virgis.FlyingCam.receiveRay*:
    name:
      CSharp:
      - id: Virgis.FlyingCam.receiveRay*
        name: receiveRay
        nameWithType: FlyingCam.receiveRay
        qualifiedName: Virgis.FlyingCam.receiveRay
      VB:
      - id: Virgis.FlyingCam.receiveRay*
        name: receiveRay
        nameWithType: FlyingCam.receiveRay
        qualifiedName: Virgis.FlyingCam.receiveRay
    isDefinition: true
    commentId: Overload:Virgis.FlyingCam.receiveRay
  Virgis.FlyingCam.ScaleUp*:
    name:
      CSharp:
      - id: Virgis.FlyingCam.ScaleUp*
        name: ScaleUp
        nameWithType: FlyingCam.ScaleUp
        qualifiedName: Virgis.FlyingCam.ScaleUp
      VB:
      - id: Virgis.FlyingCam.ScaleUp*
        name: ScaleUp
        nameWithType: FlyingCam.ScaleUp
        qualifiedName: Virgis.FlyingCam.ScaleUp
    isDefinition: true
    commentId: Overload:Virgis.FlyingCam.ScaleUp
  Virgis.FlyingCam.ScaleDown*:
    name:
      CSharp:
      - id: Virgis.FlyingCam.ScaleDown*
        name: ScaleDown
        nameWithType: FlyingCam.ScaleDown
        qualifiedName: Virgis.FlyingCam.ScaleDown
      VB:
      - id: Virgis.FlyingCam.ScaleDown*
        name: ScaleDown
        nameWithType: FlyingCam.ScaleDown
        qualifiedName: Virgis.FlyingCam.ScaleDown
    isDefinition: true
    commentId: Overload:Virgis.FlyingCam.ScaleDown
  Virgis.FlyingCam:
    name:
      CSharp:
      - id: Virgis.FlyingCam
        name: FlyingCam
        nameWithType: FlyingCam
        qualifiedName: Virgis.FlyingCam
      VB:
      - id: Virgis.FlyingCam
        name: FlyingCam
        nameWithType: FlyingCam
        qualifiedName: Virgis.FlyingCam
    isDefinition: true
    commentId: T:Virgis.FlyingCam
  Virgis.FeatureAdder.LeftTriggerPressed*:
    name:
      CSharp:
      - id: Virgis.FeatureAdder.LeftTriggerPressed*
        name: LeftTriggerPressed
        nameWithType: FeatureAdder.LeftTriggerPressed
        qualifiedName: Virgis.FeatureAdder.LeftTriggerPressed
      VB:
      - id: Virgis.FeatureAdder.LeftTriggerPressed*
        name: LeftTriggerPressed
        nameWithType: FeatureAdder.LeftTriggerPressed
        qualifiedName: Virgis.FeatureAdder.LeftTriggerPressed
    isDefinition: true
    commentId: Overload:Virgis.FeatureAdder.LeftTriggerPressed
  Virgis.FeatureAdder.LeftTriggerReleased*:
    name:
      CSharp:
      - id: Virgis.FeatureAdder.LeftTriggerReleased*
        name: LeftTriggerReleased
        nameWithType: FeatureAdder.LeftTriggerReleased
        qualifiedName: Virgis.FeatureAdder.LeftTriggerReleased
      VB:
      - id: Virgis.FeatureAdder.LeftTriggerReleased*
        name: LeftTriggerReleased
        nameWithType: FeatureAdder.LeftTriggerReleased
        qualifiedName: Virgis.FeatureAdder.LeftTriggerReleased
    isDefinition: true
    commentId: Overload:Virgis.FeatureAdder.LeftTriggerReleased
  Virgis.FeatureAdder:
    name:
      CSharp:
      - id: Virgis.FeatureAdder
        name: FeatureAdder
        nameWithType: FeatureAdder
        qualifiedName: Virgis.FeatureAdder
      VB:
      - id: Virgis.FeatureAdder
        name: FeatureAdder
        nameWithType: FeatureAdder
        qualifiedName: Virgis.FeatureAdder
    isDefinition: true
    commentId: T:Virgis.FeatureAdder
  Virgis.QuitButton.OnClick*:
    name:
      CSharp:
      - id: Virgis.QuitButton.OnClick*
        name: OnClick
        nameWithType: QuitButton.OnClick
        qualifiedName: Virgis.QuitButton.OnClick
      VB:
      - id: Virgis.QuitButton.OnClick*
        name: OnClick
        nameWithType: QuitButton.OnClick
        qualifiedName: Virgis.QuitButton.OnClick
    isDefinition: true
    commentId: Overload:Virgis.QuitButton.OnClick
  Virgis.QuitButton:
    name:
      CSharp:
      - id: Virgis.QuitButton
        name: QuitButton
        nameWithType: QuitButton
        qualifiedName: Virgis.QuitButton
      VB:
      - id: Virgis.QuitButton
        name: QuitButton
        nameWithType: QuitButton
        qualifiedName: Virgis.QuitButton
    isDefinition: true
    commentId: T:Virgis.QuitButton
  Virgis.VirgisLayer`2:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: S
        nameWithType: S
        qualifiedName: S
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: S
        nameWithType: S
        qualifiedName: S
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.VirgisLayer`2
  Virgis.VirgisLayer{RecordSet,System.Object}:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2
    parent: Virgis
    commentId: T:Virgis.VirgisLayer{RecordSet,System.Object}
  Virgis.VirgisLayer`2.layer:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.layer
        name: layer
        nameWithType: VirgisLayer<T, S>.layer
        qualifiedName: Virgis.VirgisLayer<T, S>.layer
      VB:
      - id: Virgis.VirgisLayer`2.layer
        name: layer
        nameWithType: VirgisLayer(Of T, S).layer
        qualifiedName: Virgis.VirgisLayer(Of T, S).layer
    isDefinition: true
    commentId: F:Virgis.VirgisLayer`2.layer
  Virgis.VirgisLayer{RecordSet,System.Object}.layer:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.layer
        name: layer
        nameWithType: VirgisLayer<RecordSet, Object>.layer
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Object>.layer
      VB:
      - id: Virgis.VirgisLayer`2.layer
        name: layer
        nameWithType: VirgisLayer(Of RecordSet, Object).layer
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Object).layer
    isDefinition: false
    definition: Virgis.VirgisLayer`2.layer
    parent: Virgis.VirgisLayer{RecordSet,System.Object}
    commentId: F:Virgis.VirgisLayer{RecordSet,System.Object}.layer
  Virgis.VirgisLayer`2.features:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.features
        name: features
        nameWithType: VirgisLayer<T, S>.features
        qualifiedName: Virgis.VirgisLayer<T, S>.features
      VB:
      - id: Virgis.VirgisLayer`2.features
        name: features
        nameWithType: VirgisLayer(Of T, S).features
        qualifiedName: Virgis.VirgisLayer(Of T, S).features
    isDefinition: true
    commentId: F:Virgis.VirgisLayer`2.features
  Virgis.VirgisLayer{RecordSet,System.Object}.features:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.features
        name: features
        nameWithType: VirgisLayer<RecordSet, Object>.features
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Object>.features
      VB:
      - id: Virgis.VirgisLayer`2.features
        name: features
        nameWithType: VirgisLayer(Of RecordSet, Object).features
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Object).features
    isDefinition: false
    definition: Virgis.VirgisLayer`2.features
    parent: Virgis.VirgisLayer{RecordSet,System.Object}
    commentId: F:Virgis.VirgisLayer{RecordSet,System.Object}.features
  Virgis.VirgisLayer`2.changed:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.changed
        name: changed
        nameWithType: VirgisLayer<T, S>.changed
        qualifiedName: Virgis.VirgisLayer<T, S>.changed
      VB:
      - id: Virgis.VirgisLayer`2.changed
        name: changed
        nameWithType: VirgisLayer(Of T, S).changed
        qualifiedName: Virgis.VirgisLayer(Of T, S).changed
    isDefinition: true
    commentId: F:Virgis.VirgisLayer`2.changed
  Virgis.VirgisLayer{RecordSet,System.Object}.changed:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.changed
        name: changed
        nameWithType: VirgisLayer<RecordSet, Object>.changed
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Object>.changed
      VB:
      - id: Virgis.VirgisLayer`2.changed
        name: changed
        nameWithType: VirgisLayer(Of RecordSet, Object).changed
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Object).changed
    isDefinition: false
    definition: Virgis.VirgisLayer`2.changed
    parent: Virgis.VirgisLayer{RecordSet,System.Object}
    commentId: F:Virgis.VirgisLayer{RecordSet,System.Object}.changed
  Virgis.VirgisLayer`2._id:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._id
        name: _id
        nameWithType: VirgisLayer<T, S>._id
        qualifiedName: Virgis.VirgisLayer<T, S>._id
      VB:
      - id: Virgis.VirgisLayer`2._id
        name: _id
        nameWithType: VirgisLayer(Of T, S)._id
        qualifiedName: Virgis.VirgisLayer(Of T, S)._id
    isDefinition: true
    commentId: F:Virgis.VirgisLayer`2._id
  Virgis.VirgisLayer{RecordSet,System.Object}._id:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._id
        name: _id
        nameWithType: VirgisLayer<RecordSet, Object>._id
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Object>._id
      VB:
      - id: Virgis.VirgisLayer`2._id
        name: _id
        nameWithType: VirgisLayer(Of RecordSet, Object)._id
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Object)._id
    isDefinition: false
    definition: Virgis.VirgisLayer`2._id
    parent: Virgis.VirgisLayer{RecordSet,System.Object}
    commentId: F:Virgis.VirgisLayer{RecordSet,System.Object}._id
  Virgis.VirgisLayer`2._editable:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._editable
        name: _editable
        nameWithType: VirgisLayer<T, S>._editable
        qualifiedName: Virgis.VirgisLayer<T, S>._editable
      VB:
      - id: Virgis.VirgisLayer`2._editable
        name: _editable
        nameWithType: VirgisLayer(Of T, S)._editable
        qualifiedName: Virgis.VirgisLayer(Of T, S)._editable
    isDefinition: true
    commentId: F:Virgis.VirgisLayer`2._editable
  Virgis.VirgisLayer{RecordSet,System.Object}._editable:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._editable
        name: _editable
        nameWithType: VirgisLayer<RecordSet, Object>._editable
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Object>._editable
      VB:
      - id: Virgis.VirgisLayer`2._editable
        name: _editable
        nameWithType: VirgisLayer(Of RecordSet, Object)._editable
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Object)._editable
    isDefinition: false
    definition: Virgis.VirgisLayer`2._editable
    parent: Virgis.VirgisLayer{RecordSet,System.Object}
    commentId: F:Virgis.VirgisLayer{RecordSet,System.Object}._editable
  Virgis.VirgisLayer`2.Init(`0):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Init(`0)
        name: Init
        nameWithType: VirgisLayer<T, S>.Init
        qualifiedName: Virgis.VirgisLayer<T, S>.Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Init(`0)
        name: Init
        nameWithType: VirgisLayer(Of T, S).Init
        qualifiedName: Virgis.VirgisLayer(Of T, S).Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2.Init(`0)
  Virgis.VirgisLayer{RecordSet,System.Object}.Init(RecordSet):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Init(`0)
        name: Init
        nameWithType: VirgisLayer<RecordSet, Object>.Init
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Object>.Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Init(`0)
        name: Init
        nameWithType: VirgisLayer(Of RecordSet, Object).Init
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Object).Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Init(`0)
    parent: Virgis.VirgisLayer{RecordSet,System.Object}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Object}.Init(RecordSet)
  Virgis.VirgisLayer`2._init(`0):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._init(`0)
        name: _init
        nameWithType: VirgisLayer<T, S>._init
        qualifiedName: Virgis.VirgisLayer<T, S>._init
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2._init(`0)
        name: _init
        nameWithType: VirgisLayer(Of T, S)._init
        qualifiedName: Virgis.VirgisLayer(Of T, S)._init
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2._init(`0)
  Virgis.VirgisLayer{RecordSet,System.Object}._init(RecordSet):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._init(`0)
        name: _init
        nameWithType: VirgisLayer<RecordSet, Object>._init
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Object>._init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2._init(`0)
        name: _init
        nameWithType: VirgisLayer(Of RecordSet, Object)._init
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Object)._init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2._init(`0)
    parent: Virgis.VirgisLayer{RecordSet,System.Object}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Object}._init(RecordSet)
  Virgis.VirgisLayer`2.AddFeature(Vector3[]):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.AddFeature(Vector3[])
        name: AddFeature
        nameWithType: VirgisLayer<T, S>.AddFeature
        qualifiedName: Virgis.VirgisLayer<T, S>.AddFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.AddFeature(Vector3[])
        name: AddFeature
        nameWithType: VirgisLayer(Of T, S).AddFeature
        qualifiedName: Virgis.VirgisLayer(Of T, S).AddFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2.AddFeature(Vector3[])
  Virgis.VirgisLayer{RecordSet,System.Object}.AddFeature(Vector3[]):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.AddFeature(Vector3[])
        name: AddFeature
        nameWithType: VirgisLayer<RecordSet, Object>.AddFeature
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Object>.AddFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.AddFeature(Vector3[])
        name: AddFeature
        nameWithType: VirgisLayer(Of RecordSet, Object).AddFeature
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Object).AddFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.AddFeature(Vector3[])
    parent: Virgis.VirgisLayer{RecordSet,System.Object}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Object}.AddFeature(Vector3[])
  Virgis.VirgisLayer`2._addFeature(Vector3[]):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._addFeature(Vector3[])
        name: _addFeature
        nameWithType: VirgisLayer<T, S>._addFeature
        qualifiedName: Virgis.VirgisLayer<T, S>._addFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2._addFeature(Vector3[])
        name: _addFeature
        nameWithType: VirgisLayer(Of T, S)._addFeature
        qualifiedName: Virgis.VirgisLayer(Of T, S)._addFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2._addFeature(Vector3[])
  Virgis.VirgisLayer{RecordSet,System.Object}._addFeature(Vector3[]):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._addFeature(Vector3[])
        name: _addFeature
        nameWithType: VirgisLayer<RecordSet, Object>._addFeature
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Object>._addFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2._addFeature(Vector3[])
        name: _addFeature
        nameWithType: VirgisLayer(Of RecordSet, Object)._addFeature
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Object)._addFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2._addFeature(Vector3[])
    parent: Virgis.VirgisLayer{RecordSet,System.Object}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Object}._addFeature(Vector3[])
  Virgis.VirgisLayer`2.Draw:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Draw
        name: Draw
        nameWithType: VirgisLayer<T, S>.Draw
        qualifiedName: Virgis.VirgisLayer<T, S>.Draw
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Draw
        name: Draw
        nameWithType: VirgisLayer(Of T, S).Draw
        qualifiedName: Virgis.VirgisLayer(Of T, S).Draw
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2.Draw
  Virgis.VirgisLayer{RecordSet,System.Object}.Draw:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Draw
        name: Draw
        nameWithType: VirgisLayer<RecordSet, Object>.Draw
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Object>.Draw
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Draw
        name: Draw
        nameWithType: VirgisLayer(Of RecordSet, Object).Draw
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Object).Draw
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Draw
    parent: Virgis.VirgisLayer{RecordSet,System.Object}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Object}.Draw
  Virgis.VirgisLayer`2._draw:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._draw
        name: _draw
        nameWithType: VirgisLayer<T, S>._draw
        qualifiedName: Virgis.VirgisLayer<T, S>._draw
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2._draw
        name: _draw
        nameWithType: VirgisLayer(Of T, S)._draw
        qualifiedName: Virgis.VirgisLayer(Of T, S)._draw
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2._draw
  Virgis.VirgisLayer{RecordSet,System.Object}._draw:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._draw
        name: _draw
        nameWithType: VirgisLayer<RecordSet, Object>._draw
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Object>._draw
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2._draw
        name: _draw
        nameWithType: VirgisLayer(Of RecordSet, Object)._draw
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Object)._draw
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2._draw
    parent: Virgis.VirgisLayer{RecordSet,System.Object}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Object}._draw
  Virgis.VirgisLayer`2.CheckPoint:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.CheckPoint
        name: CheckPoint
        nameWithType: VirgisLayer<T, S>.CheckPoint
        qualifiedName: Virgis.VirgisLayer<T, S>.CheckPoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.CheckPoint
        name: CheckPoint
        nameWithType: VirgisLayer(Of T, S).CheckPoint
        qualifiedName: Virgis.VirgisLayer(Of T, S).CheckPoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2.CheckPoint
  Virgis.VirgisLayer{RecordSet,System.Object}.CheckPoint:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.CheckPoint
        name: CheckPoint
        nameWithType: VirgisLayer<RecordSet, Object>.CheckPoint
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Object>.CheckPoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.CheckPoint
        name: CheckPoint
        nameWithType: VirgisLayer(Of RecordSet, Object).CheckPoint
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Object).CheckPoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.CheckPoint
    parent: Virgis.VirgisLayer{RecordSet,System.Object}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Object}.CheckPoint
  Virgis.VirgisLayer`2._checkpoint:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._checkpoint
        name: _checkpoint
        nameWithType: VirgisLayer<T, S>._checkpoint
        qualifiedName: Virgis.VirgisLayer<T, S>._checkpoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2._checkpoint
        name: _checkpoint
        nameWithType: VirgisLayer(Of T, S)._checkpoint
        qualifiedName: Virgis.VirgisLayer(Of T, S)._checkpoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2._checkpoint
  Virgis.VirgisLayer{RecordSet,System.Object}._checkpoint:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._checkpoint
        name: _checkpoint
        nameWithType: VirgisLayer<RecordSet, Object>._checkpoint
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Object>._checkpoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2._checkpoint
        name: _checkpoint
        nameWithType: VirgisLayer(Of RecordSet, Object)._checkpoint
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Object)._checkpoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2._checkpoint
    parent: Virgis.VirgisLayer{RecordSet,System.Object}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Object}._checkpoint
  Virgis.VirgisLayer`2.Save:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Save
        name: Save
        nameWithType: VirgisLayer<T, S>.Save
        qualifiedName: Virgis.VirgisLayer<T, S>.Save
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Save
        name: Save
        nameWithType: VirgisLayer(Of T, S).Save
        qualifiedName: Virgis.VirgisLayer(Of T, S).Save
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2.Save
  Virgis.VirgisLayer{RecordSet,System.Object}.Save:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Save
        name: Save
        nameWithType: VirgisLayer<RecordSet, Object>.Save
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Object>.Save
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Save
        name: Save
        nameWithType: VirgisLayer(Of RecordSet, Object).Save
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Object).Save
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Save
    parent: Virgis.VirgisLayer{RecordSet,System.Object}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Object}.Save
  Virgis.VirgisLayer`2._save:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._save
        name: _save
        nameWithType: VirgisLayer<T, S>._save
        qualifiedName: Virgis.VirgisLayer<T, S>._save
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2._save
        name: _save
        nameWithType: VirgisLayer(Of T, S)._save
        qualifiedName: Virgis.VirgisLayer(Of T, S)._save
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2._save
  Virgis.VirgisLayer{RecordSet,System.Object}._save:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._save
        name: _save
        nameWithType: VirgisLayer<RecordSet, Object>._save
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Object>._save
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2._save
        name: _save
        nameWithType: VirgisLayer(Of RecordSet, Object)._save
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Object)._save
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2._save
    parent: Virgis.VirgisLayer{RecordSet,System.Object}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Object}._save
  Virgis.VirgisLayer`2.Translate(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Translate(Virgis.MoveArgs)
        name: Translate
        nameWithType: VirgisLayer<T, S>.Translate
        qualifiedName: Virgis.VirgisLayer<T, S>.Translate
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Translate(Virgis.MoveArgs)
        name: Translate
        nameWithType: VirgisLayer(Of T, S).Translate
        qualifiedName: Virgis.VirgisLayer(Of T, S).Translate
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2.Translate(Virgis.MoveArgs)
  Virgis.VirgisLayer{RecordSet,System.Object}.Translate(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Translate(Virgis.MoveArgs)
        name: Translate
        nameWithType: VirgisLayer<RecordSet, Object>.Translate
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Object>.Translate
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Translate(Virgis.MoveArgs)
        name: Translate
        nameWithType: VirgisLayer(Of RecordSet, Object).Translate
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Object).Translate
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Translate(Virgis.MoveArgs)
    parent: Virgis.VirgisLayer{RecordSet,System.Object}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Object}.Translate(Virgis.MoveArgs)
  Virgis.VirgisLayer`2.MoveAxis(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.MoveAxis(Virgis.MoveArgs)
        name: MoveAxis
        nameWithType: VirgisLayer<T, S>.MoveAxis
        qualifiedName: Virgis.VirgisLayer<T, S>.MoveAxis
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.MoveAxis(Virgis.MoveArgs)
        name: MoveAxis
        nameWithType: VirgisLayer(Of T, S).MoveAxis
        qualifiedName: Virgis.VirgisLayer(Of T, S).MoveAxis
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2.MoveAxis(Virgis.MoveArgs)
  Virgis.VirgisLayer{RecordSet,System.Object}.MoveAxis(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.MoveAxis(Virgis.MoveArgs)
        name: MoveAxis
        nameWithType: VirgisLayer<RecordSet, Object>.MoveAxis
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Object>.MoveAxis
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.MoveAxis(Virgis.MoveArgs)
        name: MoveAxis
        nameWithType: VirgisLayer(Of RecordSet, Object).MoveAxis
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Object).MoveAxis
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.MoveAxis(Virgis.MoveArgs)
    parent: Virgis.VirgisLayer{RecordSet,System.Object}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Object}.MoveAxis(Virgis.MoveArgs)
  Virgis.VirgisLayer`2.MoveTo(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.MoveTo(Virgis.MoveArgs)
        name: MoveTo
        nameWithType: VirgisLayer<T, S>.MoveTo
        qualifiedName: Virgis.VirgisLayer<T, S>.MoveTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.MoveTo(Virgis.MoveArgs)
        name: MoveTo
        nameWithType: VirgisLayer(Of T, S).MoveTo
        qualifiedName: Virgis.VirgisLayer(Of T, S).MoveTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2.MoveTo(Virgis.MoveArgs)
  Virgis.VirgisLayer{RecordSet,System.Object}.MoveTo(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.MoveTo(Virgis.MoveArgs)
        name: MoveTo
        nameWithType: VirgisLayer<RecordSet, Object>.MoveTo
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Object>.MoveTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.MoveTo(Virgis.MoveArgs)
        name: MoveTo
        nameWithType: VirgisLayer(Of RecordSet, Object).MoveTo
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Object).MoveTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.MoveTo(Virgis.MoveArgs)
    parent: Virgis.VirgisLayer{RecordSet,System.Object}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Object}.MoveTo(Virgis.MoveArgs)
  Virgis.VirgisLayer`2.VertexMove(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.VertexMove(Virgis.MoveArgs)
        name: VertexMove
        nameWithType: VirgisLayer<T, S>.VertexMove
        qualifiedName: Virgis.VirgisLayer<T, S>.VertexMove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.VertexMove(Virgis.MoveArgs)
        name: VertexMove
        nameWithType: VirgisLayer(Of T, S).VertexMove
        qualifiedName: Virgis.VirgisLayer(Of T, S).VertexMove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2.VertexMove(Virgis.MoveArgs)
  Virgis.VirgisLayer{RecordSet,System.Object}.VertexMove(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.VertexMove(Virgis.MoveArgs)
        name: VertexMove
        nameWithType: VirgisLayer<RecordSet, Object>.VertexMove
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Object>.VertexMove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.VertexMove(Virgis.MoveArgs)
        name: VertexMove
        nameWithType: VirgisLayer(Of RecordSet, Object).VertexMove
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Object).VertexMove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.VertexMove(Virgis.MoveArgs)
    parent: Virgis.VirgisLayer{RecordSet,System.Object}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Object}.VertexMove(Virgis.MoveArgs)
  Virgis.VirgisLayer`2.StartEditSession:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.StartEditSession
        name: StartEditSession
        nameWithType: VirgisLayer<T, S>.StartEditSession
        qualifiedName: Virgis.VirgisLayer<T, S>.StartEditSession
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.StartEditSession
        name: StartEditSession
        nameWithType: VirgisLayer(Of T, S).StartEditSession
        qualifiedName: Virgis.VirgisLayer(Of T, S).StartEditSession
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2.StartEditSession
  Virgis.VirgisLayer{RecordSet,System.Object}.StartEditSession:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.StartEditSession
        name: StartEditSession
        nameWithType: VirgisLayer<RecordSet, Object>.StartEditSession
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Object>.StartEditSession
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.StartEditSession
        name: StartEditSession
        nameWithType: VirgisLayer(Of RecordSet, Object).StartEditSession
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Object).StartEditSession
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.StartEditSession
    parent: Virgis.VirgisLayer{RecordSet,System.Object}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Object}.StartEditSession
  Virgis.VirgisLayer`2.ExitEditSession(System.Boolean):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.ExitEditSession(System.Boolean)
        name: ExitEditSession
        nameWithType: VirgisLayer<T, S>.ExitEditSession
        qualifiedName: Virgis.VirgisLayer<T, S>.ExitEditSession
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.ExitEditSession(System.Boolean)
        name: ExitEditSession
        nameWithType: VirgisLayer(Of T, S).ExitEditSession
        qualifiedName: Virgis.VirgisLayer(Of T, S).ExitEditSession
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2.ExitEditSession(System.Boolean)
  Virgis.VirgisLayer{RecordSet,System.Object}.ExitEditSession(System.Boolean):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.ExitEditSession(System.Boolean)
        name: ExitEditSession
        nameWithType: VirgisLayer<RecordSet, Object>.ExitEditSession
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Object>.ExitEditSession
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.ExitEditSession(System.Boolean)
        name: ExitEditSession
        nameWithType: VirgisLayer(Of RecordSet, Object).ExitEditSession
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Object).ExitEditSession
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.ExitEditSession(System.Boolean)
    parent: Virgis.VirgisLayer{RecordSet,System.Object}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Object}.ExitEditSession(System.Boolean)
  Virgis.VirgisLayer`2.Selected(Virgis.SelectionTypes):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Selected(Virgis.SelectionTypes)
        name: Selected
        nameWithType: VirgisLayer<T, S>.Selected
        qualifiedName: Virgis.VirgisLayer<T, S>.Selected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionTypes
        name: SelectionTypes
        nameWithType: SelectionTypes
        qualifiedName: Virgis.SelectionTypes
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Selected(Virgis.SelectionTypes)
        name: Selected
        nameWithType: VirgisLayer(Of T, S).Selected
        qualifiedName: Virgis.VirgisLayer(Of T, S).Selected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionTypes
        name: SelectionTypes
        nameWithType: SelectionTypes
        qualifiedName: Virgis.SelectionTypes
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2.Selected(Virgis.SelectionTypes)
  Virgis.VirgisLayer{RecordSet,System.Object}.Selected(Virgis.SelectionTypes):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Selected(Virgis.SelectionTypes)
        name: Selected
        nameWithType: VirgisLayer<RecordSet, Object>.Selected
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Object>.Selected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionTypes
        name: SelectionTypes
        nameWithType: SelectionTypes
        qualifiedName: Virgis.SelectionTypes
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Selected(Virgis.SelectionTypes)
        name: Selected
        nameWithType: VirgisLayer(Of RecordSet, Object).Selected
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Object).Selected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionTypes
        name: SelectionTypes
        nameWithType: SelectionTypes
        qualifiedName: Virgis.SelectionTypes
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Selected(Virgis.SelectionTypes)
    parent: Virgis.VirgisLayer{RecordSet,System.Object}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Object}.Selected(Virgis.SelectionTypes)
  Virgis.VirgisLayer`2.UnSelected(Virgis.SelectionTypes):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.UnSelected(Virgis.SelectionTypes)
        name: UnSelected
        nameWithType: VirgisLayer<T, S>.UnSelected
        qualifiedName: Virgis.VirgisLayer<T, S>.UnSelected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionTypes
        name: SelectionTypes
        nameWithType: SelectionTypes
        qualifiedName: Virgis.SelectionTypes
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.UnSelected(Virgis.SelectionTypes)
        name: UnSelected
        nameWithType: VirgisLayer(Of T, S).UnSelected
        qualifiedName: Virgis.VirgisLayer(Of T, S).UnSelected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionTypes
        name: SelectionTypes
        nameWithType: SelectionTypes
        qualifiedName: Virgis.SelectionTypes
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2.UnSelected(Virgis.SelectionTypes)
  Virgis.VirgisLayer{RecordSet,System.Object}.UnSelected(Virgis.SelectionTypes):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.UnSelected(Virgis.SelectionTypes)
        name: UnSelected
        nameWithType: VirgisLayer<RecordSet, Object>.UnSelected
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Object>.UnSelected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionTypes
        name: SelectionTypes
        nameWithType: SelectionTypes
        qualifiedName: Virgis.SelectionTypes
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.UnSelected(Virgis.SelectionTypes)
        name: UnSelected
        nameWithType: VirgisLayer(Of RecordSet, Object).UnSelected
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Object).UnSelected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionTypes
        name: SelectionTypes
        nameWithType: SelectionTypes
        qualifiedName: Virgis.SelectionTypes
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.UnSelected(Virgis.SelectionTypes)
    parent: Virgis.VirgisLayer{RecordSet,System.Object}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Object}.UnSelected(Virgis.SelectionTypes)
  Virgis.VirgisLayer`2.GetClosest(Vector3,Guid[]):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetClosest(Vector3,Guid[])
        name: GetClosest
        nameWithType: VirgisLayer<T, S>.GetClosest
        qualifiedName: Virgis.VirgisLayer<T, S>.GetClosest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: Guid
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetClosest(Vector3,Guid[])
        name: GetClosest
        nameWithType: VirgisLayer(Of T, S).GetClosest
        qualifiedName: Virgis.VirgisLayer(Of T, S).GetClosest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: Guid
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2.GetClosest(Vector3,Guid[])
  Virgis.VirgisLayer{RecordSet,System.Object}.GetClosest(Vector3,Guid[]):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetClosest(Vector3,Guid[])
        name: GetClosest
        nameWithType: VirgisLayer<RecordSet, Object>.GetClosest
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Object>.GetClosest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: Guid
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetClosest(Vector3,Guid[])
        name: GetClosest
        nameWithType: VirgisLayer(Of RecordSet, Object).GetClosest
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Object).GetClosest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: Guid
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetClosest(Vector3,Guid[])
    parent: Virgis.VirgisLayer{RecordSet,System.Object}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Object}.GetClosest(Vector3,Guid[])
  Virgis.VirgisLayer`2.GetFeature(Guid):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetFeature(Guid)
        name: GetFeature
        nameWithType: VirgisLayer<T, S>.GetFeature
        qualifiedName: Virgis.VirgisLayer<T, S>.GetFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: Guid
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetFeature(Guid)
        name: GetFeature
        nameWithType: VirgisLayer(Of T, S).GetFeature
        qualifiedName: Virgis.VirgisLayer(Of T, S).GetFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: Guid
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2.GetFeature(Guid)
  Virgis.VirgisLayer{RecordSet,System.Object}.GetFeature(Guid):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetFeature(Guid)
        name: GetFeature
        nameWithType: VirgisLayer<RecordSet, Object>.GetFeature
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Object>.GetFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: Guid
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetFeature(Guid)
        name: GetFeature
        nameWithType: VirgisLayer(Of RecordSet, Object).GetFeature
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Object).GetFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: Guid
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetFeature(Guid)
    parent: Virgis.VirgisLayer{RecordSet,System.Object}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Object}.GetFeature(Guid)
  Virgis.VirgisLayer`2.GetId:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetId
        name: GetId
        nameWithType: VirgisLayer<T, S>.GetId
        qualifiedName: Virgis.VirgisLayer<T, S>.GetId
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetId
        name: GetId
        nameWithType: VirgisLayer(Of T, S).GetId
        qualifiedName: Virgis.VirgisLayer(Of T, S).GetId
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2.GetId
  Virgis.VirgisLayer{RecordSet,System.Object}.GetId:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetId
        name: GetId
        nameWithType: VirgisLayer<RecordSet, Object>.GetId
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Object>.GetId
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetId
        name: GetId
        nameWithType: VirgisLayer(Of RecordSet, Object).GetId
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Object).GetId
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetId
    parent: Virgis.VirgisLayer{RecordSet,System.Object}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Object}.GetId
  Virgis.VirgisLayer`2.GetMetadata:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetMetadata
        name: GetMetadata
        nameWithType: VirgisLayer<T, S>.GetMetadata
        qualifiedName: Virgis.VirgisLayer<T, S>.GetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetMetadata
        name: GetMetadata
        nameWithType: VirgisLayer(Of T, S).GetMetadata
        qualifiedName: Virgis.VirgisLayer(Of T, S).GetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2.GetMetadata
  Virgis.VirgisLayer{RecordSet,System.Object}.GetMetadata:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetMetadata
        name: GetMetadata
        nameWithType: VirgisLayer<RecordSet, Object>.GetMetadata
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Object>.GetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetMetadata
        name: GetMetadata
        nameWithType: VirgisLayer(Of RecordSet, Object).GetMetadata
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Object).GetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetMetadata
    parent: Virgis.VirgisLayer{RecordSet,System.Object}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Object}.GetMetadata
  Virgis.VirgisLayer`2.GetFeatureShape:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetFeatureShape
        name: GetFeatureShape
        nameWithType: VirgisLayer<T, S>.GetFeatureShape
        qualifiedName: Virgis.VirgisLayer<T, S>.GetFeatureShape
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetFeatureShape
        name: GetFeatureShape
        nameWithType: VirgisLayer(Of T, S).GetFeatureShape
        qualifiedName: Virgis.VirgisLayer(Of T, S).GetFeatureShape
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2.GetFeatureShape
  Virgis.VirgisLayer{RecordSet,System.Object}.GetFeatureShape:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetFeatureShape
        name: GetFeatureShape
        nameWithType: VirgisLayer<RecordSet, Object>.GetFeatureShape
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Object>.GetFeatureShape
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetFeatureShape
        name: GetFeatureShape
        nameWithType: VirgisLayer(Of RecordSet, Object).GetFeatureShape
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Object).GetFeatureShape
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetFeatureShape
    parent: Virgis.VirgisLayer{RecordSet,System.Object}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Object}.GetFeatureShape
  Virgis.VirgisLayer`2.SetVisible(System.Boolean):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.SetVisible(System.Boolean)
        name: SetVisible
        nameWithType: VirgisLayer<T, S>.SetVisible
        qualifiedName: Virgis.VirgisLayer<T, S>.SetVisible
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.SetVisible(System.Boolean)
        name: SetVisible
        nameWithType: VirgisLayer(Of T, S).SetVisible
        qualifiedName: Virgis.VirgisLayer(Of T, S).SetVisible
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2.SetVisible(System.Boolean)
  Virgis.VirgisLayer{RecordSet,System.Object}.SetVisible(System.Boolean):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.SetVisible(System.Boolean)
        name: SetVisible
        nameWithType: VirgisLayer<RecordSet, Object>.SetVisible
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Object>.SetVisible
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.SetVisible(System.Boolean)
        name: SetVisible
        nameWithType: VirgisLayer(Of RecordSet, Object).SetVisible
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Object).SetVisible
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.SetVisible(System.Boolean)
    parent: Virgis.VirgisLayer{RecordSet,System.Object}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Object}.SetVisible(System.Boolean)
  Virgis.VirgisLayer`2.IsVisible:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.IsVisible
        name: IsVisible
        nameWithType: VirgisLayer<T, S>.IsVisible
        qualifiedName: Virgis.VirgisLayer<T, S>.IsVisible
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.IsVisible
        name: IsVisible
        nameWithType: VirgisLayer(Of T, S).IsVisible
        qualifiedName: Virgis.VirgisLayer(Of T, S).IsVisible
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2.IsVisible
  Virgis.VirgisLayer{RecordSet,System.Object}.IsVisible:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.IsVisible
        name: IsVisible
        nameWithType: VirgisLayer<RecordSet, Object>.IsVisible
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Object>.IsVisible
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.IsVisible
        name: IsVisible
        nameWithType: VirgisLayer(Of RecordSet, Object).IsVisible
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Object).IsVisible
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.IsVisible
    parent: Virgis.VirgisLayer{RecordSet,System.Object}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Object}.IsVisible
  Virgis.VirgisLayer`2.SetEditable(System.Boolean):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.SetEditable(System.Boolean)
        name: SetEditable
        nameWithType: VirgisLayer<T, S>.SetEditable
        qualifiedName: Virgis.VirgisLayer<T, S>.SetEditable
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.SetEditable(System.Boolean)
        name: SetEditable
        nameWithType: VirgisLayer(Of T, S).SetEditable
        qualifiedName: Virgis.VirgisLayer(Of T, S).SetEditable
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2.SetEditable(System.Boolean)
  Virgis.VirgisLayer{RecordSet,System.Object}.SetEditable(System.Boolean):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.SetEditable(System.Boolean)
        name: SetEditable
        nameWithType: VirgisLayer<RecordSet, Object>.SetEditable
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Object>.SetEditable
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.SetEditable(System.Boolean)
        name: SetEditable
        nameWithType: VirgisLayer(Of RecordSet, Object).SetEditable
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Object).SetEditable
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.SetEditable(System.Boolean)
    parent: Virgis.VirgisLayer{RecordSet,System.Object}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Object}.SetEditable(System.Boolean)
  Virgis.VirgisLayer`2.IsEditable:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.IsEditable
        name: IsEditable
        nameWithType: VirgisLayer<T, S>.IsEditable
        qualifiedName: Virgis.VirgisLayer<T, S>.IsEditable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.IsEditable
        name: IsEditable
        nameWithType: VirgisLayer(Of T, S).IsEditable
        qualifiedName: Virgis.VirgisLayer(Of T, S).IsEditable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2.IsEditable
  Virgis.VirgisLayer{RecordSet,System.Object}.IsEditable:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.IsEditable
        name: IsEditable
        nameWithType: VirgisLayer<RecordSet, Object>.IsEditable
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Object>.IsEditable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.IsEditable
        name: IsEditable
        nameWithType: VirgisLayer(Of RecordSet, Object).IsEditable
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Object).IsEditable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.IsEditable
    parent: Virgis.VirgisLayer{RecordSet,System.Object}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Object}.IsEditable
  Virgis.VirgisLayer`2.Equals(System.Object):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Equals(System.Object)
        name: Equals
        nameWithType: VirgisLayer<T, S>.Equals
        qualifiedName: Virgis.VirgisLayer<T, S>.Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Equals(System.Object)
        name: Equals
        nameWithType: VirgisLayer(Of T, S).Equals
        qualifiedName: Virgis.VirgisLayer(Of T, S).Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2.Equals(System.Object)
  Virgis.VirgisLayer{RecordSet,System.Object}.Equals(System.Object):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Equals(System.Object)
        name: Equals
        nameWithType: VirgisLayer<RecordSet, Object>.Equals
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Object>.Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Equals(System.Object)
        name: Equals
        nameWithType: VirgisLayer(Of RecordSet, Object).Equals
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Object).Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Equals(System.Object)
    parent: Virgis.VirgisLayer{RecordSet,System.Object}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Object}.Equals(System.Object)
  Virgis.VirgisLayer`2.GetHashCode:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetHashCode
        name: GetHashCode
        nameWithType: VirgisLayer<T, S>.GetHashCode
        qualifiedName: Virgis.VirgisLayer<T, S>.GetHashCode
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetHashCode
        name: GetHashCode
        nameWithType: VirgisLayer(Of T, S).GetHashCode
        qualifiedName: Virgis.VirgisLayer(Of T, S).GetHashCode
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2.GetHashCode
  Virgis.VirgisLayer{RecordSet,System.Object}.GetHashCode:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetHashCode
        name: GetHashCode
        nameWithType: VirgisLayer<RecordSet, Object>.GetHashCode
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Object>.GetHashCode
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetHashCode
        name: GetHashCode
        nameWithType: VirgisLayer(Of RecordSet, Object).GetHashCode
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Object).GetHashCode
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetHashCode
    parent: Virgis.VirgisLayer{RecordSet,System.Object}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Object}.GetHashCode
  Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1}):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
        name: Equals
        nameWithType: VirgisLayer<T, S>.Equals
        qualifiedName: Virgis.VirgisLayer<T, S>.Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: S
        nameWithType: S
        qualifiedName: S
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
        name: Equals
        nameWithType: VirgisLayer(Of T, S).Equals
        qualifiedName: Virgis.VirgisLayer(Of T, S).Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: S
        nameWithType: S
        qualifiedName: S
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
  Virgis.VirgisLayer{RecordSet,System.Object}.Equals(Virgis.VirgisLayer{RecordSet,System.Object}):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
        name: Equals
        nameWithType: VirgisLayer<RecordSet, Object>.Equals
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Object>.Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
        name: Equals
        nameWithType: VirgisLayer(Of RecordSet, Object).Equals
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Object).Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
    parent: Virgis.VirgisLayer{RecordSet,System.Object}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Object}.Equals(Virgis.VirgisLayer{RecordSet,System.Object})
  Virgis.IVirgisLayer:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer
        name: IVirgisLayer
        nameWithType: IVirgisLayer
        qualifiedName: Virgis.IVirgisLayer
      VB:
      - id: Virgis.IVirgisLayer
        name: IVirgisLayer
        nameWithType: IVirgisLayer
        qualifiedName: Virgis.IVirgisLayer
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.IVirgisLayer
  Virgis.IVirgisEntity:
    name:
      CSharp:
      - id: Virgis.IVirgisEntity
        name: IVirgisEntity
        nameWithType: IVirgisEntity
        qualifiedName: Virgis.IVirgisEntity
      VB:
      - id: Virgis.IVirgisEntity
        name: IVirgisEntity
        nameWithType: IVirgisEntity
        qualifiedName: Virgis.IVirgisEntity
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.IVirgisEntity
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  Task:
    name:
      CSharp:
      - id: Task
        name: Task
        nameWithType: Task
        qualifiedName: Task
        isExternal: true
      VB:
      - id: Task
        name: Task
        nameWithType: Task
        qualifiedName: Task
        isExternal: true
    isDefinition: true
  RecordSet:
    name:
      CSharp:
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      VB:
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
    isDefinition: true
  Virgis.MapInitialize._init*:
    name:
      CSharp:
      - id: Virgis.MapInitialize._init*
        name: _init
        nameWithType: MapInitialize._init
        qualifiedName: Virgis.MapInitialize._init
      VB:
      - id: Virgis.MapInitialize._init*
        name: _init
        nameWithType: MapInitialize._init
        qualifiedName: Virgis.MapInitialize._init
    isDefinition: true
    commentId: Overload:Virgis.MapInitialize._init
  Virgis.MoveArgs:
    name:
      CSharp:
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      VB:
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.MoveArgs
  Virgis.MapInitialize.Add*:
    name:
      CSharp:
      - id: Virgis.MapInitialize.Add*
        name: Add
        nameWithType: MapInitialize.Add
        qualifiedName: Virgis.MapInitialize.Add
      VB:
      - id: Virgis.MapInitialize.Add*
        name: Add
        nameWithType: MapInitialize.Add
        qualifiedName: Virgis.MapInitialize.Add
    isDefinition: true
    commentId: Overload:Virgis.MapInitialize.Add
  Virgis.VirgisFeature:
    name:
      CSharp:
      - id: Virgis.VirgisFeature
        name: VirgisFeature
        nameWithType: VirgisFeature
        qualifiedName: Virgis.VirgisFeature
      VB:
      - id: Virgis.VirgisFeature
        name: VirgisFeature
        nameWithType: VirgisFeature
        qualifiedName: Virgis.VirgisFeature
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.VirgisFeature
  Vector3[]:
    name:
      CSharp:
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Virgis.MapInitialize._addFeature*:
    name:
      CSharp:
      - id: Virgis.MapInitialize._addFeature*
        name: _addFeature
        nameWithType: MapInitialize._addFeature
        qualifiedName: Virgis.MapInitialize._addFeature
      VB:
      - id: Virgis.MapInitialize._addFeature*
        name: _addFeature
        nameWithType: MapInitialize._addFeature
        qualifiedName: Virgis.MapInitialize._addFeature
    isDefinition: true
    commentId: Overload:Virgis.MapInitialize._addFeature
  Virgis.MapInitialize._draw*:
    name:
      CSharp:
      - id: Virgis.MapInitialize._draw*
        name: _draw
        nameWithType: MapInitialize._draw
        qualifiedName: Virgis.MapInitialize._draw
      VB:
      - id: Virgis.MapInitialize._draw*
        name: _draw
        nameWithType: MapInitialize._draw
        qualifiedName: Virgis.MapInitialize._draw
    isDefinition: true
    commentId: Overload:Virgis.MapInitialize._draw
  Virgis.MapInitialize.ExitEditSession*:
    name:
      CSharp:
      - id: Virgis.MapInitialize.ExitEditSession*
        name: ExitEditSession
        nameWithType: MapInitialize.ExitEditSession
        qualifiedName: Virgis.MapInitialize.ExitEditSession
      VB:
      - id: Virgis.MapInitialize.ExitEditSession*
        name: ExitEditSession
        nameWithType: MapInitialize.ExitEditSession
        qualifiedName: Virgis.MapInitialize.ExitEditSession
    isDefinition: true
    commentId: Overload:Virgis.MapInitialize.ExitEditSession
  Virgis.MapInitialize._checkpoint*:
    name:
      CSharp:
      - id: Virgis.MapInitialize._checkpoint*
        name: _checkpoint
        nameWithType: MapInitialize._checkpoint
        qualifiedName: Virgis.MapInitialize._checkpoint
      VB:
      - id: Virgis.MapInitialize._checkpoint*
        name: _checkpoint
        nameWithType: MapInitialize._checkpoint
        qualifiedName: Virgis.MapInitialize._checkpoint
    isDefinition: true
    commentId: Overload:Virgis.MapInitialize._checkpoint
  Task`1:
    name:
      CSharp:
      - id: Task`1
        name: Task
        nameWithType: Task
        qualifiedName: Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Task`1
        name: Task
        nameWithType: Task
        qualifiedName: Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  Task{RecordSet}:
    name:
      CSharp:
      - id: Task`1
        name: Task
        nameWithType: Task
        qualifiedName: Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Task`1
        name: Task
        nameWithType: Task
        qualifiedName: Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Task`1
    commentId: '!:Task{RecordSet}'
  Virgis.MapInitialize.Save*:
    name:
      CSharp:
      - id: Virgis.MapInitialize.Save*
        name: Save
        nameWithType: MapInitialize.Save
        qualifiedName: Virgis.MapInitialize.Save
      VB:
      - id: Virgis.MapInitialize.Save*
        name: Save
        nameWithType: MapInitialize.Save
        qualifiedName: Virgis.MapInitialize.Save
    isDefinition: true
    commentId: Overload:Virgis.MapInitialize.Save
  Virgis.MapInitialize._save*:
    name:
      CSharp:
      - id: Virgis.MapInitialize._save*
        name: _save
        nameWithType: MapInitialize._save
        qualifiedName: Virgis.MapInitialize._save
      VB:
      - id: Virgis.MapInitialize._save*
        name: _save
        nameWithType: MapInitialize._save
        qualifiedName: Virgis.MapInitialize._save
    isDefinition: true
    commentId: Overload:Virgis.MapInitialize._save
  Virgis.MapInitialize.Translate*:
    name:
      CSharp:
      - id: Virgis.MapInitialize.Translate*
        name: Translate
        nameWithType: MapInitialize.Translate
        qualifiedName: Virgis.MapInitialize.Translate
      VB:
      - id: Virgis.MapInitialize.Translate*
        name: Translate
        nameWithType: MapInitialize.Translate
        qualifiedName: Virgis.MapInitialize.Translate
    isDefinition: true
    commentId: Overload:Virgis.MapInitialize.Translate
  Virgis.MapInitialize.MoveAxis*:
    name:
      CSharp:
      - id: Virgis.MapInitialize.MoveAxis*
        name: MoveAxis
        nameWithType: MapInitialize.MoveAxis
        qualifiedName: Virgis.MapInitialize.MoveAxis
      VB:
      - id: Virgis.MapInitialize.MoveAxis*
        name: MoveAxis
        nameWithType: MapInitialize.MoveAxis
        qualifiedName: Virgis.MapInitialize.MoveAxis
    isDefinition: true
    commentId: Overload:Virgis.MapInitialize.MoveAxis
  Virgis.MapInitialize.StartEditSession*:
    name:
      CSharp:
      - id: Virgis.MapInitialize.StartEditSession*
        name: StartEditSession
        nameWithType: MapInitialize.StartEditSession
        qualifiedName: Virgis.MapInitialize.StartEditSession
      VB:
      - id: Virgis.MapInitialize.StartEditSession*
        name: StartEditSession
        nameWithType: MapInitialize.StartEditSession
        qualifiedName: Virgis.MapInitialize.StartEditSession
    isDefinition: true
    commentId: Overload:Virgis.MapInitialize.StartEditSession
  Virgis.MapInitialize._onStartEditSession*:
    name:
      CSharp:
      - id: Virgis.MapInitialize._onStartEditSession*
        name: _onStartEditSession
        nameWithType: MapInitialize._onStartEditSession
        qualifiedName: Virgis.MapInitialize._onStartEditSession
      VB:
      - id: Virgis.MapInitialize._onStartEditSession*
        name: _onStartEditSession
        nameWithType: MapInitialize._onStartEditSession
        qualifiedName: Virgis.MapInitialize._onStartEditSession
    isDefinition: true
    commentId: Overload:Virgis.MapInitialize._onStartEditSession
  Virgis.MapInitialize._onExitEditSession*:
    name:
      CSharp:
      - id: Virgis.MapInitialize._onExitEditSession*
        name: _onExitEditSession
        nameWithType: MapInitialize._onExitEditSession
        qualifiedName: Virgis.MapInitialize._onExitEditSession
      VB:
      - id: Virgis.MapInitialize._onExitEditSession*
        name: _onExitEditSession
        nameWithType: MapInitialize._onExitEditSession
        qualifiedName: Virgis.MapInitialize._onExitEditSession
    isDefinition: true
    commentId: Overload:Virgis.MapInitialize._onExitEditSession
  Virgis.MapInitialize.GetFeatureShape*:
    name:
      CSharp:
      - id: Virgis.MapInitialize.GetFeatureShape*
        name: GetFeatureShape
        nameWithType: MapInitialize.GetFeatureShape
        qualifiedName: Virgis.MapInitialize.GetFeatureShape
      VB:
      - id: Virgis.MapInitialize.GetFeatureShape*
        name: GetFeatureShape
        nameWithType: MapInitialize.GetFeatureShape
        qualifiedName: Virgis.MapInitialize.GetFeatureShape
    isDefinition: true
    commentId: Overload:Virgis.MapInitialize.GetFeatureShape
  Virgis.MapInitialize:
    name:
      CSharp:
      - id: Virgis.MapInitialize
        name: MapInitialize
        nameWithType: MapInitialize
        qualifiedName: Virgis.MapInitialize
      VB:
      - id: Virgis.MapInitialize
        name: MapInitialize
        nameWithType: MapInitialize
        qualifiedName: Virgis.MapInitialize
    isDefinition: true
    commentId: T:Virgis.MapInitialize
  Toggle:
    name:
      CSharp:
      - id: Toggle
        name: Toggle
        nameWithType: Toggle
        qualifiedName: Toggle
        isExternal: true
      VB:
      - id: Toggle
        name: Toggle
        nameWithType: Toggle
        qualifiedName: Toggle
        isExternal: true
    isDefinition: true
  Virgis.EditModeUI.OnSnapGridToggleValueChanged*:
    name:
      CSharp:
      - id: Virgis.EditModeUI.OnSnapGridToggleValueChanged*
        name: OnSnapGridToggleValueChanged
        nameWithType: EditModeUI.OnSnapGridToggleValueChanged
        qualifiedName: Virgis.EditModeUI.OnSnapGridToggleValueChanged
      VB:
      - id: Virgis.EditModeUI.OnSnapGridToggleValueChanged*
        name: OnSnapGridToggleValueChanged
        nameWithType: EditModeUI.OnSnapGridToggleValueChanged
        qualifiedName: Virgis.EditModeUI.OnSnapGridToggleValueChanged
    isDefinition: true
    commentId: Overload:Virgis.EditModeUI.OnSnapGridToggleValueChanged
  Virgis.EditModeUI.OnSnapAnchorToggleValueChanged*:
    name:
      CSharp:
      - id: Virgis.EditModeUI.OnSnapAnchorToggleValueChanged*
        name: OnSnapAnchorToggleValueChanged
        nameWithType: EditModeUI.OnSnapAnchorToggleValueChanged
        qualifiedName: Virgis.EditModeUI.OnSnapAnchorToggleValueChanged
      VB:
      - id: Virgis.EditModeUI.OnSnapAnchorToggleValueChanged*
        name: OnSnapAnchorToggleValueChanged
        nameWithType: EditModeUI.OnSnapAnchorToggleValueChanged
        qualifiedName: Virgis.EditModeUI.OnSnapAnchorToggleValueChanged
    isDefinition: true
    commentId: Overload:Virgis.EditModeUI.OnSnapAnchorToggleValueChanged
  Virgis.EditModeUI:
    name:
      CSharp:
      - id: Virgis.EditModeUI
        name: EditModeUI
        nameWithType: EditModeUI
        qualifiedName: Virgis.EditModeUI
      VB:
      - id: Virgis.EditModeUI
        name: EditModeUI
        nameWithType: EditModeUI
        qualifiedName: Virgis.EditModeUI
    isDefinition: true
    commentId: T:Virgis.EditModeUI
  Virgis.EndEditSessionEvent:
    name:
      CSharp:
      - id: Virgis.EndEditSessionEvent
        name: EndEditSessionEvent
        nameWithType: EndEditSessionEvent
        qualifiedName: Virgis.EndEditSessionEvent
      VB:
      - id: Virgis.EndEditSessionEvent
        name: EndEditSessionEvent
        nameWithType: EndEditSessionEvent
        qualifiedName: Virgis.EndEditSessionEvent
    isDefinition: true
    commentId: T:Virgis.EndEditSessionEvent
  System.SerializableAttribute:
    name:
      CSharp:
      - id: System.SerializableAttribute
        name: SerializableAttribute
        nameWithType: SerializableAttribute
        qualifiedName: System.SerializableAttribute
        isExternal: true
      VB:
      - id: System.SerializableAttribute
        name: SerializableAttribute
        nameWithType: SerializableAttribute
        qualifiedName: System.SerializableAttribute
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.SerializableAttribute
  System.SerializableAttribute.#ctor:
    name:
      CSharp:
      - id: System.SerializableAttribute.#ctor
        name: SerializableAttribute
        nameWithType: SerializableAttribute.SerializableAttribute
        qualifiedName: System.SerializableAttribute.SerializableAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.SerializableAttribute.#ctor
        name: SerializableAttribute
        nameWithType: SerializableAttribute.SerializableAttribute
        qualifiedName: System.SerializableAttribute.SerializableAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.SerializableAttribute
    commentId: M:System.SerializableAttribute.#ctor
  Virgis.EditableLayerChangedEvent:
    name:
      CSharp:
      - id: Virgis.EditableLayerChangedEvent
        name: EditableLayerChangedEvent
        nameWithType: EditableLayerChangedEvent
        qualifiedName: Virgis.EditableLayerChangedEvent
      VB:
      - id: Virgis.EditableLayerChangedEvent
        name: EditableLayerChangedEvent
        nameWithType: EditableLayerChangedEvent
        qualifiedName: Virgis.EditableLayerChangedEvent
    isDefinition: true
    commentId: T:Virgis.EditableLayerChangedEvent
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  Virgis.EditSession.#ctor*:
    name:
      CSharp:
      - id: Virgis.EditSession.#ctor*
        name: EditSession
        nameWithType: EditSession.EditSession
        qualifiedName: Virgis.EditSession.EditSession
      VB:
      - id: Virgis.EditSession.#ctor*
        name: EditSession
        nameWithType: EditSession.EditSession
        qualifiedName: Virgis.EditSession.EditSession
    isDefinition: true
    commentId: Overload:Virgis.EditSession.#ctor
  Virgis.EditSession.editableLayer*:
    name:
      CSharp:
      - id: Virgis.EditSession.editableLayer*
        name: editableLayer
        nameWithType: EditSession.editableLayer
        qualifiedName: Virgis.EditSession.editableLayer
      VB:
      - id: Virgis.EditSession.editableLayer*
        name: editableLayer
        nameWithType: EditSession.editableLayer
        qualifiedName: Virgis.EditSession.editableLayer
    isDefinition: true
    commentId: Overload:Virgis.EditSession.editableLayer
  Virgis.EditSession.IsActive*:
    name:
      CSharp:
      - id: Virgis.EditSession.IsActive*
        name: IsActive
        nameWithType: EditSession.IsActive
        qualifiedName: Virgis.EditSession.IsActive
      VB:
      - id: Virgis.EditSession.IsActive*
        name: IsActive
        nameWithType: EditSession.IsActive
        qualifiedName: Virgis.EditSession.IsActive
    isDefinition: true
    commentId: Overload:Virgis.EditSession.IsActive
  Virgis.EditSession.Start*:
    name:
      CSharp:
      - id: Virgis.EditSession.Start*
        name: Start
        nameWithType: EditSession.Start
        qualifiedName: Virgis.EditSession.Start
      VB:
      - id: Virgis.EditSession.Start*
        name: Start
        nameWithType: EditSession.Start
        qualifiedName: Virgis.EditSession.Start
    isDefinition: true
    commentId: Overload:Virgis.EditSession.Start
  Virgis.EditSession.StopAndSave*:
    name:
      CSharp:
      - id: Virgis.EditSession.StopAndSave*
        name: StopAndSave
        nameWithType: EditSession.StopAndSave
        qualifiedName: Virgis.EditSession.StopAndSave
      VB:
      - id: Virgis.EditSession.StopAndSave*
        name: StopAndSave
        nameWithType: EditSession.StopAndSave
        qualifiedName: Virgis.EditSession.StopAndSave
    isDefinition: true
    commentId: Overload:Virgis.EditSession.StopAndSave
  Virgis.EditSession.StopAndDiscard*:
    name:
      CSharp:
      - id: Virgis.EditSession.StopAndDiscard*
        name: StopAndDiscard
        nameWithType: EditSession.StopAndDiscard
        qualifiedName: Virgis.EditSession.StopAndDiscard
      VB:
      - id: Virgis.EditSession.StopAndDiscard*
        name: StopAndDiscard
        nameWithType: EditSession.StopAndDiscard
        qualifiedName: Virgis.EditSession.StopAndDiscard
    isDefinition: true
    commentId: Overload:Virgis.EditSession.StopAndDiscard
  Virgis.EditSession.AddStartEditSessionListener*:
    name:
      CSharp:
      - id: Virgis.EditSession.AddStartEditSessionListener*
        name: AddStartEditSessionListener
        nameWithType: EditSession.AddStartEditSessionListener
        qualifiedName: Virgis.EditSession.AddStartEditSessionListener
      VB:
      - id: Virgis.EditSession.AddStartEditSessionListener*
        name: AddStartEditSessionListener
        nameWithType: EditSession.AddStartEditSessionListener
        qualifiedName: Virgis.EditSession.AddStartEditSessionListener
    isDefinition: true
    commentId: Overload:Virgis.EditSession.AddStartEditSessionListener
  Virgis.EditSession.AddEndEditSessionListener*:
    name:
      CSharp:
      - id: Virgis.EditSession.AddEndEditSessionListener*
        name: AddEndEditSessionListener
        nameWithType: EditSession.AddEndEditSessionListener
        qualifiedName: Virgis.EditSession.AddEndEditSessionListener
      VB:
      - id: Virgis.EditSession.AddEndEditSessionListener*
        name: AddEndEditSessionListener
        nameWithType: EditSession.AddEndEditSessionListener
        qualifiedName: Virgis.EditSession.AddEndEditSessionListener
    isDefinition: true
    commentId: Overload:Virgis.EditSession.AddEndEditSessionListener
  UnityAction{Virgis.IVirgisLayer}:
    name:
      CSharp:
      - id: UnityAction`1
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Virgis.IVirgisLayer
        name: IVirgisLayer
        nameWithType: IVirgisLayer
        qualifiedName: Virgis.IVirgisLayer
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: UnityAction`1
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Virgis.IVirgisLayer
        name: IVirgisLayer
        nameWithType: IVirgisLayer
        qualifiedName: Virgis.IVirgisLayer
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: UnityAction`1
    commentId: '!:UnityAction{Virgis.IVirgisLayer}'
  Virgis.EditSession.AddEditableLayerChangedListener*:
    name:
      CSharp:
      - id: Virgis.EditSession.AddEditableLayerChangedListener*
        name: AddEditableLayerChangedListener
        nameWithType: EditSession.AddEditableLayerChangedListener
        qualifiedName: Virgis.EditSession.AddEditableLayerChangedListener
      VB:
      - id: Virgis.EditSession.AddEditableLayerChangedListener*
        name: AddEditableLayerChangedListener
        nameWithType: EditSession.AddEditableLayerChangedListener
        qualifiedName: Virgis.EditSession.AddEditableLayerChangedListener
    isDefinition: true
    commentId: Overload:Virgis.EditSession.AddEditableLayerChangedListener
  Virgis.EditSession.EditMode:
    name:
      CSharp:
      - id: Virgis.EditSession.EditMode
        name: EditSession.EditMode
        nameWithType: EditSession.EditMode
        qualifiedName: Virgis.EditSession.EditMode
      VB:
      - id: Virgis.EditSession.EditMode
        name: EditSession.EditMode
        nameWithType: EditSession.EditMode
        qualifiedName: Virgis.EditSession.EditMode
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.EditSession.EditMode
  Virgis.EditSession.mode*:
    name:
      CSharp:
      - id: Virgis.EditSession.mode*
        name: mode
        nameWithType: EditSession.mode
        qualifiedName: Virgis.EditSession.mode
      VB:
      - id: Virgis.EditSession.mode*
        name: mode
        nameWithType: EditSession.mode
        qualifiedName: Virgis.EditSession.mode
    isDefinition: true
    commentId: Overload:Virgis.EditSession.mode
  Color:
    name:
      CSharp:
      - id: Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      VB:
      - id: Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
    isDefinition: true
  Vector3:
    name:
      CSharp:
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      VB:
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
    isDefinition: true
  Virgis.DataRotator.SetColor*:
    name:
      CSharp:
      - id: Virgis.DataRotator.SetColor*
        name: SetColor
        nameWithType: DataRotator.SetColor
        qualifiedName: Virgis.DataRotator.SetColor
      VB:
      - id: Virgis.DataRotator.SetColor*
        name: SetColor
        nameWithType: DataRotator.SetColor
        qualifiedName: Virgis.DataRotator.SetColor
    isDefinition: true
    commentId: Overload:Virgis.DataRotator.SetColor
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  Virgis.DataRotator.Selected*:
    name:
      CSharp:
      - id: Virgis.DataRotator.Selected*
        name: Selected
        nameWithType: DataRotator.Selected
        qualifiedName: Virgis.DataRotator.Selected
      VB:
      - id: Virgis.DataRotator.Selected*
        name: Selected
        nameWithType: DataRotator.Selected
        qualifiedName: Virgis.DataRotator.Selected
    isDefinition: true
    commentId: Overload:Virgis.DataRotator.Selected
  Virgis.DataRotator.UnSelected*:
    name:
      CSharp:
      - id: Virgis.DataRotator.UnSelected*
        name: UnSelected
        nameWithType: DataRotator.UnSelected
        qualifiedName: Virgis.DataRotator.UnSelected
      VB:
      - id: Virgis.DataRotator.UnSelected*
        name: UnSelected
        nameWithType: DataRotator.UnSelected
        qualifiedName: Virgis.DataRotator.UnSelected
    isDefinition: true
    commentId: Overload:Virgis.DataRotator.UnSelected
  Virgis.DataRotator.Translate*:
    name:
      CSharp:
      - id: Virgis.DataRotator.Translate*
        name: Translate
        nameWithType: DataRotator.Translate
        qualifiedName: Virgis.DataRotator.Translate
      VB:
      - id: Virgis.DataRotator.Translate*
        name: Translate
        nameWithType: DataRotator.Translate
        qualifiedName: Virgis.DataRotator.Translate
    isDefinition: true
    commentId: Overload:Virgis.DataRotator.Translate
  Virgis.DataRotator:
    name:
      CSharp:
      - id: Virgis.DataRotator
        name: DataRotator
        nameWithType: DataRotator
        qualifiedName: Virgis.DataRotator
      VB:
      - id: Virgis.DataRotator
        name: DataRotator
        nameWithType: DataRotator
        qualifiedName: Virgis.DataRotator
    isDefinition: true
    commentId: T:Virgis.DataRotator
  Virgis.LayersUI.HandleKeyInput*:
    name:
      CSharp:
      - id: Virgis.LayersUI.HandleKeyInput*
        name: HandleKeyInput
        nameWithType: LayersUI.HandleKeyInput
        qualifiedName: Virgis.LayersUI.HandleKeyInput
      VB:
      - id: Virgis.LayersUI.HandleKeyInput*
        name: HandleKeyInput
        nameWithType: LayersUI.HandleKeyInput
        qualifiedName: Virgis.LayersUI.HandleKeyInput
    isDefinition: true
    commentId: Overload:Virgis.LayersUI.HandleKeyInput
  Virgis.LayersUI.OnShowMenuButtonClicked*:
    name:
      CSharp:
      - id: Virgis.LayersUI.OnShowMenuButtonClicked*
        name: OnShowMenuButtonClicked
        nameWithType: LayersUI.OnShowMenuButtonClicked
        qualifiedName: Virgis.LayersUI.OnShowMenuButtonClicked
      VB:
      - id: Virgis.LayersUI.OnShowMenuButtonClicked*
        name: OnShowMenuButtonClicked
        nameWithType: LayersUI.OnShowMenuButtonClicked
        qualifiedName: Virgis.LayersUI.OnShowMenuButtonClicked
    isDefinition: true
    commentId: Overload:Virgis.LayersUI.OnShowMenuButtonClicked
  Virgis.LayersUI:
    name:
      CSharp:
      - id: Virgis.LayersUI
        name: LayersUI
        nameWithType: LayersUI
        qualifiedName: Virgis.LayersUI
      VB:
      - id: Virgis.LayersUI
        name: LayersUI
        nameWithType: LayersUI
        qualifiedName: Virgis.LayersUI
    isDefinition: true
    commentId: T:Virgis.LayersUI
  Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: GeographyCollection
        name: GeographyCollection
        nameWithType: GeographyCollection
        qualifiedName: GeographyCollection
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Virgis.ParticleData
        name: ParticleData
        nameWithType: ParticleData
        qualifiedName: Virgis.ParticleData
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: GeographyCollection
        name: GeographyCollection
        nameWithType: GeographyCollection
        qualifiedName: GeographyCollection
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Virgis.ParticleData
        name: ParticleData
        nameWithType: ParticleData
        qualifiedName: Virgis.ParticleData
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2
    parent: Virgis
    commentId: T:Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
  Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.layer:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.layer
        name: layer
        nameWithType: VirgisLayer<GeographyCollection, ParticleData>.layer
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, Virgis.ParticleData>.layer
      VB:
      - id: Virgis.VirgisLayer`2.layer
        name: layer
        nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).layer
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, Virgis.ParticleData).layer
    isDefinition: false
    definition: Virgis.VirgisLayer`2.layer
    parent: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
    commentId: F:Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.layer
  Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.features:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.features
        name: features
        nameWithType: VirgisLayer<GeographyCollection, ParticleData>.features
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, Virgis.ParticleData>.features
      VB:
      - id: Virgis.VirgisLayer`2.features
        name: features
        nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).features
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, Virgis.ParticleData).features
    isDefinition: false
    definition: Virgis.VirgisLayer`2.features
    parent: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
    commentId: F:Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.features
  Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.changed:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.changed
        name: changed
        nameWithType: VirgisLayer<GeographyCollection, ParticleData>.changed
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, Virgis.ParticleData>.changed
      VB:
      - id: Virgis.VirgisLayer`2.changed
        name: changed
        nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).changed
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, Virgis.ParticleData).changed
    isDefinition: false
    definition: Virgis.VirgisLayer`2.changed
    parent: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
    commentId: F:Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.changed
  Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}._id:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._id
        name: _id
        nameWithType: VirgisLayer<GeographyCollection, ParticleData>._id
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, Virgis.ParticleData>._id
      VB:
      - id: Virgis.VirgisLayer`2._id
        name: _id
        nameWithType: VirgisLayer(Of GeographyCollection, ParticleData)._id
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, Virgis.ParticleData)._id
    isDefinition: false
    definition: Virgis.VirgisLayer`2._id
    parent: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
    commentId: F:Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}._id
  Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}._editable:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._editable
        name: _editable
        nameWithType: VirgisLayer<GeographyCollection, ParticleData>._editable
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, Virgis.ParticleData>._editable
      VB:
      - id: Virgis.VirgisLayer`2._editable
        name: _editable
        nameWithType: VirgisLayer(Of GeographyCollection, ParticleData)._editable
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, Virgis.ParticleData)._editable
    isDefinition: false
    definition: Virgis.VirgisLayer`2._editable
    parent: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
    commentId: F:Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}._editable
  Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.Init(GeographyCollection):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Init(`0)
        name: Init
        nameWithType: VirgisLayer<GeographyCollection, ParticleData>.Init
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, Virgis.ParticleData>.Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GeographyCollection
        name: GeographyCollection
        nameWithType: GeographyCollection
        qualifiedName: GeographyCollection
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Init(`0)
        name: Init
        nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).Init
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, Virgis.ParticleData).Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GeographyCollection
        name: GeographyCollection
        nameWithType: GeographyCollection
        qualifiedName: GeographyCollection
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Init(`0)
    parent: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.Init(GeographyCollection)
  Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}._init(GeographyCollection):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._init(`0)
        name: _init
        nameWithType: VirgisLayer<GeographyCollection, ParticleData>._init
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, Virgis.ParticleData>._init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GeographyCollection
        name: GeographyCollection
        nameWithType: GeographyCollection
        qualifiedName: GeographyCollection
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2._init(`0)
        name: _init
        nameWithType: VirgisLayer(Of GeographyCollection, ParticleData)._init
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, Virgis.ParticleData)._init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GeographyCollection
        name: GeographyCollection
        nameWithType: GeographyCollection
        qualifiedName: GeographyCollection
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2._init(`0)
    parent: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}._init(GeographyCollection)
  Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.AddFeature(Vector3[]):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.AddFeature(Vector3[])
        name: AddFeature
        nameWithType: VirgisLayer<GeographyCollection, ParticleData>.AddFeature
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, Virgis.ParticleData>.AddFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.AddFeature(Vector3[])
        name: AddFeature
        nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).AddFeature
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, Virgis.ParticleData).AddFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.AddFeature(Vector3[])
    parent: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.AddFeature(Vector3[])
  Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}._addFeature(Vector3[]):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._addFeature(Vector3[])
        name: _addFeature
        nameWithType: VirgisLayer<GeographyCollection, ParticleData>._addFeature
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, Virgis.ParticleData>._addFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2._addFeature(Vector3[])
        name: _addFeature
        nameWithType: VirgisLayer(Of GeographyCollection, ParticleData)._addFeature
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, Virgis.ParticleData)._addFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2._addFeature(Vector3[])
    parent: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}._addFeature(Vector3[])
  Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.Draw:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Draw
        name: Draw
        nameWithType: VirgisLayer<GeographyCollection, ParticleData>.Draw
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, Virgis.ParticleData>.Draw
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Draw
        name: Draw
        nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).Draw
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, Virgis.ParticleData).Draw
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Draw
    parent: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.Draw
  Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}._draw:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._draw
        name: _draw
        nameWithType: VirgisLayer<GeographyCollection, ParticleData>._draw
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, Virgis.ParticleData>._draw
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2._draw
        name: _draw
        nameWithType: VirgisLayer(Of GeographyCollection, ParticleData)._draw
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, Virgis.ParticleData)._draw
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2._draw
    parent: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}._draw
  Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.CheckPoint:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.CheckPoint
        name: CheckPoint
        nameWithType: VirgisLayer<GeographyCollection, ParticleData>.CheckPoint
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, Virgis.ParticleData>.CheckPoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.CheckPoint
        name: CheckPoint
        nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).CheckPoint
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, Virgis.ParticleData).CheckPoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.CheckPoint
    parent: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.CheckPoint
  Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}._checkpoint:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._checkpoint
        name: _checkpoint
        nameWithType: VirgisLayer<GeographyCollection, ParticleData>._checkpoint
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, Virgis.ParticleData>._checkpoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2._checkpoint
        name: _checkpoint
        nameWithType: VirgisLayer(Of GeographyCollection, ParticleData)._checkpoint
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, Virgis.ParticleData)._checkpoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2._checkpoint
    parent: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}._checkpoint
  Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.Save:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Save
        name: Save
        nameWithType: VirgisLayer<GeographyCollection, ParticleData>.Save
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, Virgis.ParticleData>.Save
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Save
        name: Save
        nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).Save
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, Virgis.ParticleData).Save
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Save
    parent: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.Save
  Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}._save:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._save
        name: _save
        nameWithType: VirgisLayer<GeographyCollection, ParticleData>._save
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, Virgis.ParticleData>._save
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2._save
        name: _save
        nameWithType: VirgisLayer(Of GeographyCollection, ParticleData)._save
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, Virgis.ParticleData)._save
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2._save
    parent: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}._save
  Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.Translate(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Translate(Virgis.MoveArgs)
        name: Translate
        nameWithType: VirgisLayer<GeographyCollection, ParticleData>.Translate
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, Virgis.ParticleData>.Translate
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Translate(Virgis.MoveArgs)
        name: Translate
        nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).Translate
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, Virgis.ParticleData).Translate
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Translate(Virgis.MoveArgs)
    parent: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.Translate(Virgis.MoveArgs)
  Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.MoveAxis(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.MoveAxis(Virgis.MoveArgs)
        name: MoveAxis
        nameWithType: VirgisLayer<GeographyCollection, ParticleData>.MoveAxis
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, Virgis.ParticleData>.MoveAxis
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.MoveAxis(Virgis.MoveArgs)
        name: MoveAxis
        nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).MoveAxis
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, Virgis.ParticleData).MoveAxis
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.MoveAxis(Virgis.MoveArgs)
    parent: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.MoveAxis(Virgis.MoveArgs)
  Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.MoveTo(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.MoveTo(Virgis.MoveArgs)
        name: MoveTo
        nameWithType: VirgisLayer<GeographyCollection, ParticleData>.MoveTo
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, Virgis.ParticleData>.MoveTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.MoveTo(Virgis.MoveArgs)
        name: MoveTo
        nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).MoveTo
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, Virgis.ParticleData).MoveTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.MoveTo(Virgis.MoveArgs)
    parent: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.MoveTo(Virgis.MoveArgs)
  Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.VertexMove(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.VertexMove(Virgis.MoveArgs)
        name: VertexMove
        nameWithType: VirgisLayer<GeographyCollection, ParticleData>.VertexMove
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, Virgis.ParticleData>.VertexMove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.VertexMove(Virgis.MoveArgs)
        name: VertexMove
        nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).VertexMove
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, Virgis.ParticleData).VertexMove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.VertexMove(Virgis.MoveArgs)
    parent: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.VertexMove(Virgis.MoveArgs)
  Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.StartEditSession:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.StartEditSession
        name: StartEditSession
        nameWithType: VirgisLayer<GeographyCollection, ParticleData>.StartEditSession
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, Virgis.ParticleData>.StartEditSession
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.StartEditSession
        name: StartEditSession
        nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).StartEditSession
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, Virgis.ParticleData).StartEditSession
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.StartEditSession
    parent: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.StartEditSession
  Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.ExitEditSession(System.Boolean):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.ExitEditSession(System.Boolean)
        name: ExitEditSession
        nameWithType: VirgisLayer<GeographyCollection, ParticleData>.ExitEditSession
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, Virgis.ParticleData>.ExitEditSession
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.ExitEditSession(System.Boolean)
        name: ExitEditSession
        nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).ExitEditSession
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, Virgis.ParticleData).ExitEditSession
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.ExitEditSession(System.Boolean)
    parent: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.ExitEditSession(System.Boolean)
  Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.Selected(Virgis.SelectionTypes):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Selected(Virgis.SelectionTypes)
        name: Selected
        nameWithType: VirgisLayer<GeographyCollection, ParticleData>.Selected
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, Virgis.ParticleData>.Selected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionTypes
        name: SelectionTypes
        nameWithType: SelectionTypes
        qualifiedName: Virgis.SelectionTypes
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Selected(Virgis.SelectionTypes)
        name: Selected
        nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).Selected
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, Virgis.ParticleData).Selected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionTypes
        name: SelectionTypes
        nameWithType: SelectionTypes
        qualifiedName: Virgis.SelectionTypes
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Selected(Virgis.SelectionTypes)
    parent: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.Selected(Virgis.SelectionTypes)
  Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.UnSelected(Virgis.SelectionTypes):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.UnSelected(Virgis.SelectionTypes)
        name: UnSelected
        nameWithType: VirgisLayer<GeographyCollection, ParticleData>.UnSelected
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, Virgis.ParticleData>.UnSelected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionTypes
        name: SelectionTypes
        nameWithType: SelectionTypes
        qualifiedName: Virgis.SelectionTypes
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.UnSelected(Virgis.SelectionTypes)
        name: UnSelected
        nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).UnSelected
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, Virgis.ParticleData).UnSelected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionTypes
        name: SelectionTypes
        nameWithType: SelectionTypes
        qualifiedName: Virgis.SelectionTypes
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.UnSelected(Virgis.SelectionTypes)
    parent: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.UnSelected(Virgis.SelectionTypes)
  Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.GetClosest(Vector3,Guid[]):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetClosest(Vector3,Guid[])
        name: GetClosest
        nameWithType: VirgisLayer<GeographyCollection, ParticleData>.GetClosest
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, Virgis.ParticleData>.GetClosest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: Guid
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetClosest(Vector3,Guid[])
        name: GetClosest
        nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).GetClosest
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, Virgis.ParticleData).GetClosest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: Guid
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetClosest(Vector3,Guid[])
    parent: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.GetClosest(Vector3,Guid[])
  Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.GetFeature(Guid):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetFeature(Guid)
        name: GetFeature
        nameWithType: VirgisLayer<GeographyCollection, ParticleData>.GetFeature
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, Virgis.ParticleData>.GetFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: Guid
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetFeature(Guid)
        name: GetFeature
        nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).GetFeature
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, Virgis.ParticleData).GetFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: Guid
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetFeature(Guid)
    parent: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.GetFeature(Guid)
  Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.GetId:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetId
        name: GetId
        nameWithType: VirgisLayer<GeographyCollection, ParticleData>.GetId
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, Virgis.ParticleData>.GetId
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetId
        name: GetId
        nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).GetId
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, Virgis.ParticleData).GetId
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetId
    parent: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.GetId
  Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.GetMetadata:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetMetadata
        name: GetMetadata
        nameWithType: VirgisLayer<GeographyCollection, ParticleData>.GetMetadata
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, Virgis.ParticleData>.GetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetMetadata
        name: GetMetadata
        nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).GetMetadata
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, Virgis.ParticleData).GetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetMetadata
    parent: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.GetMetadata
  Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.GetFeatureShape:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetFeatureShape
        name: GetFeatureShape
        nameWithType: VirgisLayer<GeographyCollection, ParticleData>.GetFeatureShape
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, Virgis.ParticleData>.GetFeatureShape
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetFeatureShape
        name: GetFeatureShape
        nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).GetFeatureShape
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, Virgis.ParticleData).GetFeatureShape
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetFeatureShape
    parent: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.GetFeatureShape
  Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.SetVisible(System.Boolean):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.SetVisible(System.Boolean)
        name: SetVisible
        nameWithType: VirgisLayer<GeographyCollection, ParticleData>.SetVisible
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, Virgis.ParticleData>.SetVisible
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.SetVisible(System.Boolean)
        name: SetVisible
        nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).SetVisible
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, Virgis.ParticleData).SetVisible
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.SetVisible(System.Boolean)
    parent: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.SetVisible(System.Boolean)
  Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.IsVisible:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.IsVisible
        name: IsVisible
        nameWithType: VirgisLayer<GeographyCollection, ParticleData>.IsVisible
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, Virgis.ParticleData>.IsVisible
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.IsVisible
        name: IsVisible
        nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).IsVisible
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, Virgis.ParticleData).IsVisible
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.IsVisible
    parent: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.IsVisible
  Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.SetEditable(System.Boolean):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.SetEditable(System.Boolean)
        name: SetEditable
        nameWithType: VirgisLayer<GeographyCollection, ParticleData>.SetEditable
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, Virgis.ParticleData>.SetEditable
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.SetEditable(System.Boolean)
        name: SetEditable
        nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).SetEditable
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, Virgis.ParticleData).SetEditable
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.SetEditable(System.Boolean)
    parent: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.SetEditable(System.Boolean)
  Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.IsEditable:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.IsEditable
        name: IsEditable
        nameWithType: VirgisLayer<GeographyCollection, ParticleData>.IsEditable
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, Virgis.ParticleData>.IsEditable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.IsEditable
        name: IsEditable
        nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).IsEditable
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, Virgis.ParticleData).IsEditable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.IsEditable
    parent: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.IsEditable
  Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.Equals(System.Object):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Equals(System.Object)
        name: Equals
        nameWithType: VirgisLayer<GeographyCollection, ParticleData>.Equals
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, Virgis.ParticleData>.Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Equals(System.Object)
        name: Equals
        nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).Equals
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, Virgis.ParticleData).Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Equals(System.Object)
    parent: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.Equals(System.Object)
  Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.GetHashCode:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetHashCode
        name: GetHashCode
        nameWithType: VirgisLayer<GeographyCollection, ParticleData>.GetHashCode
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, Virgis.ParticleData>.GetHashCode
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetHashCode
        name: GetHashCode
        nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).GetHashCode
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, Virgis.ParticleData).GetHashCode
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetHashCode
    parent: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.GetHashCode
  Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.Equals(Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
        name: Equals
        nameWithType: VirgisLayer<GeographyCollection, ParticleData>.Equals
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, Virgis.ParticleData>.Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: GeographyCollection
        name: GeographyCollection
        nameWithType: GeographyCollection
        qualifiedName: GeographyCollection
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Virgis.ParticleData
        name: ParticleData
        nameWithType: ParticleData
        qualifiedName: Virgis.ParticleData
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
        name: Equals
        nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).Equals
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, Virgis.ParticleData).Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: GeographyCollection
        name: GeographyCollection
        nameWithType: GeographyCollection
        qualifiedName: GeographyCollection
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Virgis.ParticleData
        name: ParticleData
        nameWithType: ParticleData
        qualifiedName: Virgis.ParticleData
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
    parent: Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData}.Equals(Virgis.VirgisLayer{GeographyCollection,Virgis.ParticleData})
  Material:
    name:
      CSharp:
      - id: Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
      VB:
      - id: Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
    isDefinition: true
  List{GameObject}:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: List`1
    commentId: '!:List{GameObject}'
  GeographyCollection:
    name:
      CSharp:
      - id: GeographyCollection
        name: GeographyCollection
        nameWithType: GeographyCollection
        qualifiedName: GeographyCollection
        isExternal: true
      VB:
      - id: GeographyCollection
        name: GeographyCollection
        nameWithType: GeographyCollection
        qualifiedName: GeographyCollection
        isExternal: true
    isDefinition: true
  Virgis.PointCloudLayer._init*:
    name:
      CSharp:
      - id: Virgis.PointCloudLayer._init*
        name: _init
        nameWithType: PointCloudLayer._init
        qualifiedName: Virgis.PointCloudLayer._init
      VB:
      - id: Virgis.PointCloudLayer._init*
        name: _init
        nameWithType: PointCloudLayer._init
        qualifiedName: Virgis.PointCloudLayer._init
    isDefinition: true
    commentId: Overload:Virgis.PointCloudLayer._init
  Virgis.PointCloudLayer._addFeature*:
    name:
      CSharp:
      - id: Virgis.PointCloudLayer._addFeature*
        name: _addFeature
        nameWithType: PointCloudLayer._addFeature
        qualifiedName: Virgis.PointCloudLayer._addFeature
      VB:
      - id: Virgis.PointCloudLayer._addFeature*
        name: _addFeature
        nameWithType: PointCloudLayer._addFeature
        qualifiedName: Virgis.PointCloudLayer._addFeature
    isDefinition: true
    commentId: Overload:Virgis.PointCloudLayer._addFeature
  Virgis.PointCloudLayer._draw*:
    name:
      CSharp:
      - id: Virgis.PointCloudLayer._draw*
        name: _draw
        nameWithType: PointCloudLayer._draw
        qualifiedName: Virgis.PointCloudLayer._draw
      VB:
      - id: Virgis.PointCloudLayer._draw*
        name: _draw
        nameWithType: PointCloudLayer._draw
        qualifiedName: Virgis.PointCloudLayer._draw
    isDefinition: true
    commentId: Overload:Virgis.PointCloudLayer._draw
  Virgis.PointCloudLayer.Translate*:
    name:
      CSharp:
      - id: Virgis.PointCloudLayer.Translate*
        name: Translate
        nameWithType: PointCloudLayer.Translate
        qualifiedName: Virgis.PointCloudLayer.Translate
      VB:
      - id: Virgis.PointCloudLayer.Translate*
        name: Translate
        nameWithType: PointCloudLayer.Translate
        qualifiedName: Virgis.PointCloudLayer.Translate
    isDefinition: true
    commentId: Overload:Virgis.PointCloudLayer.Translate
  Virgis.PointCloudLayer.MoveAxis*:
    name:
      CSharp:
      - id: Virgis.PointCloudLayer.MoveAxis*
        name: MoveAxis
        nameWithType: PointCloudLayer.MoveAxis
        qualifiedName: Virgis.PointCloudLayer.MoveAxis
      VB:
      - id: Virgis.PointCloudLayer.MoveAxis*
        name: MoveAxis
        nameWithType: PointCloudLayer.MoveAxis
        qualifiedName: Virgis.PointCloudLayer.MoveAxis
    isDefinition: true
    commentId: Overload:Virgis.PointCloudLayer.MoveAxis
  Virgis.PointCloudLayer._checkpoint*:
    name:
      CSharp:
      - id: Virgis.PointCloudLayer._checkpoint*
        name: _checkpoint
        nameWithType: PointCloudLayer._checkpoint
        qualifiedName: Virgis.PointCloudLayer._checkpoint
      VB:
      - id: Virgis.PointCloudLayer._checkpoint*
        name: _checkpoint
        nameWithType: PointCloudLayer._checkpoint
        qualifiedName: Virgis.PointCloudLayer._checkpoint
    isDefinition: true
    commentId: Overload:Virgis.PointCloudLayer._checkpoint
  Virgis.PointCloudLayer._save*:
    name:
      CSharp:
      - id: Virgis.PointCloudLayer._save*
        name: _save
        nameWithType: PointCloudLayer._save
        qualifiedName: Virgis.PointCloudLayer._save
      VB:
      - id: Virgis.PointCloudLayer._save*
        name: _save
        nameWithType: PointCloudLayer._save
        qualifiedName: Virgis.PointCloudLayer._save
    isDefinition: true
    commentId: Overload:Virgis.PointCloudLayer._save
  Virgis.PointCloudLayer:
    name:
      CSharp:
      - id: Virgis.PointCloudLayer
        name: PointCloudLayer
        nameWithType: PointCloudLayer
        qualifiedName: Virgis.PointCloudLayer
      VB:
      - id: Virgis.PointCloudLayer
        name: PointCloudLayer
        nameWithType: PointCloudLayer
        qualifiedName: Virgis.PointCloudLayer
    isDefinition: true
    commentId: T:Virgis.PointCloudLayer
  Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: GeographyCollection
        name: GeographyCollection
        nameWithType: GeographyCollection
        qualifiedName: GeographyCollection
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: SimpleMesh
        name: SimpleMesh
        nameWithType: SimpleMesh
        qualifiedName: SimpleMesh
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: GeographyCollection
        name: GeographyCollection
        nameWithType: GeographyCollection
        qualifiedName: GeographyCollection
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: SimpleMesh
        name: SimpleMesh
        nameWithType: SimpleMesh
        qualifiedName: SimpleMesh
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2
    parent: Virgis
    commentId: T:Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
  Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.layer:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.layer
        name: layer
        nameWithType: VirgisLayer<GeographyCollection, List<SimpleMesh>>.layer
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, List<SimpleMesh>>.layer
      VB:
      - id: Virgis.VirgisLayer`2.layer
        name: layer
        nameWithType: VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).layer
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).layer
    isDefinition: false
    definition: Virgis.VirgisLayer`2.layer
    parent: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
    commentId: F:Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.layer
  Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.features:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.features
        name: features
        nameWithType: VirgisLayer<GeographyCollection, List<SimpleMesh>>.features
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, List<SimpleMesh>>.features
      VB:
      - id: Virgis.VirgisLayer`2.features
        name: features
        nameWithType: VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).features
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).features
    isDefinition: false
    definition: Virgis.VirgisLayer`2.features
    parent: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
    commentId: F:Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.features
  Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.changed:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.changed
        name: changed
        nameWithType: VirgisLayer<GeographyCollection, List<SimpleMesh>>.changed
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, List<SimpleMesh>>.changed
      VB:
      - id: Virgis.VirgisLayer`2.changed
        name: changed
        nameWithType: VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).changed
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).changed
    isDefinition: false
    definition: Virgis.VirgisLayer`2.changed
    parent: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
    commentId: F:Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.changed
  Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}._id:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._id
        name: _id
        nameWithType: VirgisLayer<GeographyCollection, List<SimpleMesh>>._id
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, List<SimpleMesh>>._id
      VB:
      - id: Virgis.VirgisLayer`2._id
        name: _id
        nameWithType: VirgisLayer(Of GeographyCollection, List(Of SimpleMesh))._id
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, List(Of SimpleMesh))._id
    isDefinition: false
    definition: Virgis.VirgisLayer`2._id
    parent: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
    commentId: F:Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}._id
  Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}._editable:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._editable
        name: _editable
        nameWithType: VirgisLayer<GeographyCollection, List<SimpleMesh>>._editable
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, List<SimpleMesh>>._editable
      VB:
      - id: Virgis.VirgisLayer`2._editable
        name: _editable
        nameWithType: VirgisLayer(Of GeographyCollection, List(Of SimpleMesh))._editable
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, List(Of SimpleMesh))._editable
    isDefinition: false
    definition: Virgis.VirgisLayer`2._editable
    parent: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
    commentId: F:Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}._editable
  Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.Init(GeographyCollection):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Init(`0)
        name: Init
        nameWithType: VirgisLayer<GeographyCollection, List<SimpleMesh>>.Init
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, List<SimpleMesh>>.Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GeographyCollection
        name: GeographyCollection
        nameWithType: GeographyCollection
        qualifiedName: GeographyCollection
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Init(`0)
        name: Init
        nameWithType: VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).Init
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GeographyCollection
        name: GeographyCollection
        nameWithType: GeographyCollection
        qualifiedName: GeographyCollection
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Init(`0)
    parent: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.Init(GeographyCollection)
  Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}._init(GeographyCollection):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._init(`0)
        name: _init
        nameWithType: VirgisLayer<GeographyCollection, List<SimpleMesh>>._init
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, List<SimpleMesh>>._init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GeographyCollection
        name: GeographyCollection
        nameWithType: GeographyCollection
        qualifiedName: GeographyCollection
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2._init(`0)
        name: _init
        nameWithType: VirgisLayer(Of GeographyCollection, List(Of SimpleMesh))._init
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, List(Of SimpleMesh))._init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GeographyCollection
        name: GeographyCollection
        nameWithType: GeographyCollection
        qualifiedName: GeographyCollection
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2._init(`0)
    parent: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}._init(GeographyCollection)
  Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.AddFeature(Vector3[]):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.AddFeature(Vector3[])
        name: AddFeature
        nameWithType: VirgisLayer<GeographyCollection, List<SimpleMesh>>.AddFeature
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, List<SimpleMesh>>.AddFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.AddFeature(Vector3[])
        name: AddFeature
        nameWithType: VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).AddFeature
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).AddFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.AddFeature(Vector3[])
    parent: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.AddFeature(Vector3[])
  Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}._addFeature(Vector3[]):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._addFeature(Vector3[])
        name: _addFeature
        nameWithType: VirgisLayer<GeographyCollection, List<SimpleMesh>>._addFeature
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, List<SimpleMesh>>._addFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2._addFeature(Vector3[])
        name: _addFeature
        nameWithType: VirgisLayer(Of GeographyCollection, List(Of SimpleMesh))._addFeature
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, List(Of SimpleMesh))._addFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2._addFeature(Vector3[])
    parent: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}._addFeature(Vector3[])
  Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.Draw:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Draw
        name: Draw
        nameWithType: VirgisLayer<GeographyCollection, List<SimpleMesh>>.Draw
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, List<SimpleMesh>>.Draw
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Draw
        name: Draw
        nameWithType: VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).Draw
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).Draw
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Draw
    parent: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.Draw
  Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}._draw:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._draw
        name: _draw
        nameWithType: VirgisLayer<GeographyCollection, List<SimpleMesh>>._draw
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, List<SimpleMesh>>._draw
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2._draw
        name: _draw
        nameWithType: VirgisLayer(Of GeographyCollection, List(Of SimpleMesh))._draw
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, List(Of SimpleMesh))._draw
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2._draw
    parent: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}._draw
  Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.CheckPoint:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.CheckPoint
        name: CheckPoint
        nameWithType: VirgisLayer<GeographyCollection, List<SimpleMesh>>.CheckPoint
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, List<SimpleMesh>>.CheckPoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.CheckPoint
        name: CheckPoint
        nameWithType: VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).CheckPoint
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).CheckPoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.CheckPoint
    parent: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.CheckPoint
  Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}._checkpoint:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._checkpoint
        name: _checkpoint
        nameWithType: VirgisLayer<GeographyCollection, List<SimpleMesh>>._checkpoint
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, List<SimpleMesh>>._checkpoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2._checkpoint
        name: _checkpoint
        nameWithType: VirgisLayer(Of GeographyCollection, List(Of SimpleMesh))._checkpoint
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, List(Of SimpleMesh))._checkpoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2._checkpoint
    parent: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}._checkpoint
  Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.Save:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Save
        name: Save
        nameWithType: VirgisLayer<GeographyCollection, List<SimpleMesh>>.Save
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, List<SimpleMesh>>.Save
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Save
        name: Save
        nameWithType: VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).Save
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).Save
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Save
    parent: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.Save
  Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}._save:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._save
        name: _save
        nameWithType: VirgisLayer<GeographyCollection, List<SimpleMesh>>._save
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, List<SimpleMesh>>._save
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2._save
        name: _save
        nameWithType: VirgisLayer(Of GeographyCollection, List(Of SimpleMesh))._save
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, List(Of SimpleMesh))._save
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2._save
    parent: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}._save
  Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.Translate(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Translate(Virgis.MoveArgs)
        name: Translate
        nameWithType: VirgisLayer<GeographyCollection, List<SimpleMesh>>.Translate
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, List<SimpleMesh>>.Translate
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Translate(Virgis.MoveArgs)
        name: Translate
        nameWithType: VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).Translate
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).Translate
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Translate(Virgis.MoveArgs)
    parent: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.Translate(Virgis.MoveArgs)
  Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.MoveAxis(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.MoveAxis(Virgis.MoveArgs)
        name: MoveAxis
        nameWithType: VirgisLayer<GeographyCollection, List<SimpleMesh>>.MoveAxis
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, List<SimpleMesh>>.MoveAxis
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.MoveAxis(Virgis.MoveArgs)
        name: MoveAxis
        nameWithType: VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).MoveAxis
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).MoveAxis
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.MoveAxis(Virgis.MoveArgs)
    parent: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.MoveAxis(Virgis.MoveArgs)
  Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.MoveTo(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.MoveTo(Virgis.MoveArgs)
        name: MoveTo
        nameWithType: VirgisLayer<GeographyCollection, List<SimpleMesh>>.MoveTo
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, List<SimpleMesh>>.MoveTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.MoveTo(Virgis.MoveArgs)
        name: MoveTo
        nameWithType: VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).MoveTo
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).MoveTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.MoveTo(Virgis.MoveArgs)
    parent: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.MoveTo(Virgis.MoveArgs)
  Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.VertexMove(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.VertexMove(Virgis.MoveArgs)
        name: VertexMove
        nameWithType: VirgisLayer<GeographyCollection, List<SimpleMesh>>.VertexMove
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, List<SimpleMesh>>.VertexMove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.VertexMove(Virgis.MoveArgs)
        name: VertexMove
        nameWithType: VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).VertexMove
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).VertexMove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.VertexMove(Virgis.MoveArgs)
    parent: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.VertexMove(Virgis.MoveArgs)
  Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.StartEditSession:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.StartEditSession
        name: StartEditSession
        nameWithType: VirgisLayer<GeographyCollection, List<SimpleMesh>>.StartEditSession
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, List<SimpleMesh>>.StartEditSession
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.StartEditSession
        name: StartEditSession
        nameWithType: VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).StartEditSession
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).StartEditSession
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.StartEditSession
    parent: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.StartEditSession
  Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.ExitEditSession(System.Boolean):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.ExitEditSession(System.Boolean)
        name: ExitEditSession
        nameWithType: VirgisLayer<GeographyCollection, List<SimpleMesh>>.ExitEditSession
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, List<SimpleMesh>>.ExitEditSession
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.ExitEditSession(System.Boolean)
        name: ExitEditSession
        nameWithType: VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).ExitEditSession
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).ExitEditSession
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.ExitEditSession(System.Boolean)
    parent: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.ExitEditSession(System.Boolean)
  Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.Selected(Virgis.SelectionTypes):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Selected(Virgis.SelectionTypes)
        name: Selected
        nameWithType: VirgisLayer<GeographyCollection, List<SimpleMesh>>.Selected
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, List<SimpleMesh>>.Selected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionTypes
        name: SelectionTypes
        nameWithType: SelectionTypes
        qualifiedName: Virgis.SelectionTypes
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Selected(Virgis.SelectionTypes)
        name: Selected
        nameWithType: VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).Selected
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).Selected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionTypes
        name: SelectionTypes
        nameWithType: SelectionTypes
        qualifiedName: Virgis.SelectionTypes
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Selected(Virgis.SelectionTypes)
    parent: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.Selected(Virgis.SelectionTypes)
  Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.UnSelected(Virgis.SelectionTypes):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.UnSelected(Virgis.SelectionTypes)
        name: UnSelected
        nameWithType: VirgisLayer<GeographyCollection, List<SimpleMesh>>.UnSelected
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, List<SimpleMesh>>.UnSelected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionTypes
        name: SelectionTypes
        nameWithType: SelectionTypes
        qualifiedName: Virgis.SelectionTypes
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.UnSelected(Virgis.SelectionTypes)
        name: UnSelected
        nameWithType: VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).UnSelected
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).UnSelected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionTypes
        name: SelectionTypes
        nameWithType: SelectionTypes
        qualifiedName: Virgis.SelectionTypes
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.UnSelected(Virgis.SelectionTypes)
    parent: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.UnSelected(Virgis.SelectionTypes)
  Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.GetClosest(Vector3,Guid[]):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetClosest(Vector3,Guid[])
        name: GetClosest
        nameWithType: VirgisLayer<GeographyCollection, List<SimpleMesh>>.GetClosest
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, List<SimpleMesh>>.GetClosest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: Guid
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetClosest(Vector3,Guid[])
        name: GetClosest
        nameWithType: VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).GetClosest
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).GetClosest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: Guid
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetClosest(Vector3,Guid[])
    parent: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.GetClosest(Vector3,Guid[])
  Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.GetFeature(Guid):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetFeature(Guid)
        name: GetFeature
        nameWithType: VirgisLayer<GeographyCollection, List<SimpleMesh>>.GetFeature
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, List<SimpleMesh>>.GetFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: Guid
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetFeature(Guid)
        name: GetFeature
        nameWithType: VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).GetFeature
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).GetFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: Guid
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetFeature(Guid)
    parent: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.GetFeature(Guid)
  Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.GetId:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetId
        name: GetId
        nameWithType: VirgisLayer<GeographyCollection, List<SimpleMesh>>.GetId
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, List<SimpleMesh>>.GetId
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetId
        name: GetId
        nameWithType: VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).GetId
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).GetId
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetId
    parent: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.GetId
  Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.GetMetadata:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetMetadata
        name: GetMetadata
        nameWithType: VirgisLayer<GeographyCollection, List<SimpleMesh>>.GetMetadata
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, List<SimpleMesh>>.GetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetMetadata
        name: GetMetadata
        nameWithType: VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).GetMetadata
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).GetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetMetadata
    parent: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.GetMetadata
  Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.GetFeatureShape:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetFeatureShape
        name: GetFeatureShape
        nameWithType: VirgisLayer<GeographyCollection, List<SimpleMesh>>.GetFeatureShape
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, List<SimpleMesh>>.GetFeatureShape
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetFeatureShape
        name: GetFeatureShape
        nameWithType: VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).GetFeatureShape
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).GetFeatureShape
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetFeatureShape
    parent: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.GetFeatureShape
  Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.SetVisible(System.Boolean):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.SetVisible(System.Boolean)
        name: SetVisible
        nameWithType: VirgisLayer<GeographyCollection, List<SimpleMesh>>.SetVisible
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, List<SimpleMesh>>.SetVisible
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.SetVisible(System.Boolean)
        name: SetVisible
        nameWithType: VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).SetVisible
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).SetVisible
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.SetVisible(System.Boolean)
    parent: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.SetVisible(System.Boolean)
  Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.IsVisible:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.IsVisible
        name: IsVisible
        nameWithType: VirgisLayer<GeographyCollection, List<SimpleMesh>>.IsVisible
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, List<SimpleMesh>>.IsVisible
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.IsVisible
        name: IsVisible
        nameWithType: VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).IsVisible
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).IsVisible
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.IsVisible
    parent: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.IsVisible
  Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.SetEditable(System.Boolean):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.SetEditable(System.Boolean)
        name: SetEditable
        nameWithType: VirgisLayer<GeographyCollection, List<SimpleMesh>>.SetEditable
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, List<SimpleMesh>>.SetEditable
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.SetEditable(System.Boolean)
        name: SetEditable
        nameWithType: VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).SetEditable
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).SetEditable
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.SetEditable(System.Boolean)
    parent: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.SetEditable(System.Boolean)
  Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.IsEditable:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.IsEditable
        name: IsEditable
        nameWithType: VirgisLayer<GeographyCollection, List<SimpleMesh>>.IsEditable
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, List<SimpleMesh>>.IsEditable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.IsEditable
        name: IsEditable
        nameWithType: VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).IsEditable
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).IsEditable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.IsEditable
    parent: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.IsEditable
  Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.Equals(System.Object):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Equals(System.Object)
        name: Equals
        nameWithType: VirgisLayer<GeographyCollection, List<SimpleMesh>>.Equals
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, List<SimpleMesh>>.Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Equals(System.Object)
        name: Equals
        nameWithType: VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).Equals
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Equals(System.Object)
    parent: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.Equals(System.Object)
  Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.GetHashCode:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetHashCode
        name: GetHashCode
        nameWithType: VirgisLayer<GeographyCollection, List<SimpleMesh>>.GetHashCode
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, List<SimpleMesh>>.GetHashCode
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetHashCode
        name: GetHashCode
        nameWithType: VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).GetHashCode
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).GetHashCode
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetHashCode
    parent: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.GetHashCode
  Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.Equals(Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
        name: Equals
        nameWithType: VirgisLayer<GeographyCollection, List<SimpleMesh>>.Equals
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, List<SimpleMesh>>.Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: GeographyCollection
        name: GeographyCollection
        nameWithType: GeographyCollection
        qualifiedName: GeographyCollection
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: SimpleMesh
        name: SimpleMesh
        nameWithType: SimpleMesh
        qualifiedName: SimpleMesh
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
        name: Equals
        nameWithType: VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).Equals
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, List(Of SimpleMesh)).Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: GeographyCollection
        name: GeographyCollection
        nameWithType: GeographyCollection
        qualifiedName: GeographyCollection
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: SimpleMesh
        name: SimpleMesh
        nameWithType: SimpleMesh
        qualifiedName: SimpleMesh
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
    parent: Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}}.Equals(Virgis.VirgisLayer{GeographyCollection,List{SimpleMesh}})
  Virgis.MeshLayer._init*:
    name:
      CSharp:
      - id: Virgis.MeshLayer._init*
        name: _init
        nameWithType: MeshLayer._init
        qualifiedName: Virgis.MeshLayer._init
      VB:
      - id: Virgis.MeshLayer._init*
        name: _init
        nameWithType: MeshLayer._init
        qualifiedName: Virgis.MeshLayer._init
    isDefinition: true
    commentId: Overload:Virgis.MeshLayer._init
  Virgis.MeshLayer._addFeature*:
    name:
      CSharp:
      - id: Virgis.MeshLayer._addFeature*
        name: _addFeature
        nameWithType: MeshLayer._addFeature
        qualifiedName: Virgis.MeshLayer._addFeature
      VB:
      - id: Virgis.MeshLayer._addFeature*
        name: _addFeature
        nameWithType: MeshLayer._addFeature
        qualifiedName: Virgis.MeshLayer._addFeature
    isDefinition: true
    commentId: Overload:Virgis.MeshLayer._addFeature
  Virgis.MeshLayer._draw*:
    name:
      CSharp:
      - id: Virgis.MeshLayer._draw*
        name: _draw
        nameWithType: MeshLayer._draw
        qualifiedName: Virgis.MeshLayer._draw
      VB:
      - id: Virgis.MeshLayer._draw*
        name: _draw
        nameWithType: MeshLayer._draw
        qualifiedName: Virgis.MeshLayer._draw
    isDefinition: true
    commentId: Overload:Virgis.MeshLayer._draw
  Virgis.MeshLayer.Translate*:
    name:
      CSharp:
      - id: Virgis.MeshLayer.Translate*
        name: Translate
        nameWithType: MeshLayer.Translate
        qualifiedName: Virgis.MeshLayer.Translate
      VB:
      - id: Virgis.MeshLayer.Translate*
        name: Translate
        nameWithType: MeshLayer.Translate
        qualifiedName: Virgis.MeshLayer.Translate
    isDefinition: true
    commentId: Overload:Virgis.MeshLayer.Translate
  Virgis.MeshLayer.MoveAxis*:
    name:
      CSharp:
      - id: Virgis.MeshLayer.MoveAxis*
        name: MoveAxis
        nameWithType: MeshLayer.MoveAxis
        qualifiedName: Virgis.MeshLayer.MoveAxis
      VB:
      - id: Virgis.MeshLayer.MoveAxis*
        name: MoveAxis
        nameWithType: MeshLayer.MoveAxis
        qualifiedName: Virgis.MeshLayer.MoveAxis
    isDefinition: true
    commentId: Overload:Virgis.MeshLayer.MoveAxis
  Virgis.MeshLayer._checkpoint*:
    name:
      CSharp:
      - id: Virgis.MeshLayer._checkpoint*
        name: _checkpoint
        nameWithType: MeshLayer._checkpoint
        qualifiedName: Virgis.MeshLayer._checkpoint
      VB:
      - id: Virgis.MeshLayer._checkpoint*
        name: _checkpoint
        nameWithType: MeshLayer._checkpoint
        qualifiedName: Virgis.MeshLayer._checkpoint
    isDefinition: true
    commentId: Overload:Virgis.MeshLayer._checkpoint
  Virgis.MeshLayer._save*:
    name:
      CSharp:
      - id: Virgis.MeshLayer._save*
        name: _save
        nameWithType: MeshLayer._save
        qualifiedName: Virgis.MeshLayer._save
      VB:
      - id: Virgis.MeshLayer._save*
        name: _save
        nameWithType: MeshLayer._save
        qualifiedName: Virgis.MeshLayer._save
    isDefinition: true
    commentId: Overload:Virgis.MeshLayer._save
  Virgis.MeshLayer:
    name:
      CSharp:
      - id: Virgis.MeshLayer
        name: MeshLayer
        nameWithType: MeshLayer
        qualifiedName: Virgis.MeshLayer
      VB:
      - id: Virgis.MeshLayer
        name: MeshLayer
        nameWithType: MeshLayer
        qualifiedName: Virgis.MeshLayer
    isDefinition: true
    commentId: T:Virgis.MeshLayer
  Virgis.VirgisLayer{GeographyCollection,FeatureCollection}:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: GeographyCollection
        name: GeographyCollection
        nameWithType: GeographyCollection
        qualifiedName: GeographyCollection
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: FeatureCollection
        name: FeatureCollection
        nameWithType: FeatureCollection
        qualifiedName: FeatureCollection
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: GeographyCollection
        name: GeographyCollection
        nameWithType: GeographyCollection
        qualifiedName: GeographyCollection
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: FeatureCollection
        name: FeatureCollection
        nameWithType: FeatureCollection
        qualifiedName: FeatureCollection
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2
    parent: Virgis
    commentId: T:Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
  Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.layer:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.layer
        name: layer
        nameWithType: VirgisLayer<GeographyCollection, FeatureCollection>.layer
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, FeatureCollection>.layer
      VB:
      - id: Virgis.VirgisLayer`2.layer
        name: layer
        nameWithType: VirgisLayer(Of GeographyCollection, FeatureCollection).layer
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, FeatureCollection).layer
    isDefinition: false
    definition: Virgis.VirgisLayer`2.layer
    parent: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    commentId: F:Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.layer
  Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.features:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.features
        name: features
        nameWithType: VirgisLayer<GeographyCollection, FeatureCollection>.features
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, FeatureCollection>.features
      VB:
      - id: Virgis.VirgisLayer`2.features
        name: features
        nameWithType: VirgisLayer(Of GeographyCollection, FeatureCollection).features
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, FeatureCollection).features
    isDefinition: false
    definition: Virgis.VirgisLayer`2.features
    parent: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    commentId: F:Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.features
  Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.changed:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.changed
        name: changed
        nameWithType: VirgisLayer<GeographyCollection, FeatureCollection>.changed
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, FeatureCollection>.changed
      VB:
      - id: Virgis.VirgisLayer`2.changed
        name: changed
        nameWithType: VirgisLayer(Of GeographyCollection, FeatureCollection).changed
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, FeatureCollection).changed
    isDefinition: false
    definition: Virgis.VirgisLayer`2.changed
    parent: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    commentId: F:Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.changed
  Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._id:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._id
        name: _id
        nameWithType: VirgisLayer<GeographyCollection, FeatureCollection>._id
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, FeatureCollection>._id
      VB:
      - id: Virgis.VirgisLayer`2._id
        name: _id
        nameWithType: VirgisLayer(Of GeographyCollection, FeatureCollection)._id
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, FeatureCollection)._id
    isDefinition: false
    definition: Virgis.VirgisLayer`2._id
    parent: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    commentId: F:Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._id
  Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._editable:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._editable
        name: _editable
        nameWithType: VirgisLayer<GeographyCollection, FeatureCollection>._editable
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, FeatureCollection>._editable
      VB:
      - id: Virgis.VirgisLayer`2._editable
        name: _editable
        nameWithType: VirgisLayer(Of GeographyCollection, FeatureCollection)._editable
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, FeatureCollection)._editable
    isDefinition: false
    definition: Virgis.VirgisLayer`2._editable
    parent: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    commentId: F:Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._editable
  Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Init(GeographyCollection):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Init(`0)
        name: Init
        nameWithType: VirgisLayer<GeographyCollection, FeatureCollection>.Init
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, FeatureCollection>.Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GeographyCollection
        name: GeographyCollection
        nameWithType: GeographyCollection
        qualifiedName: GeographyCollection
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Init(`0)
        name: Init
        nameWithType: VirgisLayer(Of GeographyCollection, FeatureCollection).Init
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, FeatureCollection).Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GeographyCollection
        name: GeographyCollection
        nameWithType: GeographyCollection
        qualifiedName: GeographyCollection
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Init(`0)
    parent: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Init(GeographyCollection)
  Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._init(GeographyCollection):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._init(`0)
        name: _init
        nameWithType: VirgisLayer<GeographyCollection, FeatureCollection>._init
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, FeatureCollection>._init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GeographyCollection
        name: GeographyCollection
        nameWithType: GeographyCollection
        qualifiedName: GeographyCollection
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2._init(`0)
        name: _init
        nameWithType: VirgisLayer(Of GeographyCollection, FeatureCollection)._init
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, FeatureCollection)._init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GeographyCollection
        name: GeographyCollection
        nameWithType: GeographyCollection
        qualifiedName: GeographyCollection
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2._init(`0)
    parent: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._init(GeographyCollection)
  Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.AddFeature(Vector3[]):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.AddFeature(Vector3[])
        name: AddFeature
        nameWithType: VirgisLayer<GeographyCollection, FeatureCollection>.AddFeature
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, FeatureCollection>.AddFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.AddFeature(Vector3[])
        name: AddFeature
        nameWithType: VirgisLayer(Of GeographyCollection, FeatureCollection).AddFeature
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, FeatureCollection).AddFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.AddFeature(Vector3[])
    parent: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.AddFeature(Vector3[])
  Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._addFeature(Vector3[]):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._addFeature(Vector3[])
        name: _addFeature
        nameWithType: VirgisLayer<GeographyCollection, FeatureCollection>._addFeature
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, FeatureCollection>._addFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2._addFeature(Vector3[])
        name: _addFeature
        nameWithType: VirgisLayer(Of GeographyCollection, FeatureCollection)._addFeature
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, FeatureCollection)._addFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2._addFeature(Vector3[])
    parent: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._addFeature(Vector3[])
  Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Draw:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Draw
        name: Draw
        nameWithType: VirgisLayer<GeographyCollection, FeatureCollection>.Draw
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, FeatureCollection>.Draw
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Draw
        name: Draw
        nameWithType: VirgisLayer(Of GeographyCollection, FeatureCollection).Draw
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, FeatureCollection).Draw
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Draw
    parent: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Draw
  Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._draw:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._draw
        name: _draw
        nameWithType: VirgisLayer<GeographyCollection, FeatureCollection>._draw
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, FeatureCollection>._draw
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2._draw
        name: _draw
        nameWithType: VirgisLayer(Of GeographyCollection, FeatureCollection)._draw
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, FeatureCollection)._draw
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2._draw
    parent: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._draw
  Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.CheckPoint:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.CheckPoint
        name: CheckPoint
        nameWithType: VirgisLayer<GeographyCollection, FeatureCollection>.CheckPoint
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, FeatureCollection>.CheckPoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.CheckPoint
        name: CheckPoint
        nameWithType: VirgisLayer(Of GeographyCollection, FeatureCollection).CheckPoint
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, FeatureCollection).CheckPoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.CheckPoint
    parent: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.CheckPoint
  Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._checkpoint:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._checkpoint
        name: _checkpoint
        nameWithType: VirgisLayer<GeographyCollection, FeatureCollection>._checkpoint
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, FeatureCollection>._checkpoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2._checkpoint
        name: _checkpoint
        nameWithType: VirgisLayer(Of GeographyCollection, FeatureCollection)._checkpoint
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, FeatureCollection)._checkpoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2._checkpoint
    parent: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._checkpoint
  Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Save:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Save
        name: Save
        nameWithType: VirgisLayer<GeographyCollection, FeatureCollection>.Save
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, FeatureCollection>.Save
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Save
        name: Save
        nameWithType: VirgisLayer(Of GeographyCollection, FeatureCollection).Save
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, FeatureCollection).Save
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Save
    parent: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Save
  Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._save:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._save
        name: _save
        nameWithType: VirgisLayer<GeographyCollection, FeatureCollection>._save
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, FeatureCollection>._save
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2._save
        name: _save
        nameWithType: VirgisLayer(Of GeographyCollection, FeatureCollection)._save
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, FeatureCollection)._save
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2._save
    parent: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,FeatureCollection}._save
  Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Translate(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Translate(Virgis.MoveArgs)
        name: Translate
        nameWithType: VirgisLayer<GeographyCollection, FeatureCollection>.Translate
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, FeatureCollection>.Translate
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Translate(Virgis.MoveArgs)
        name: Translate
        nameWithType: VirgisLayer(Of GeographyCollection, FeatureCollection).Translate
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, FeatureCollection).Translate
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Translate(Virgis.MoveArgs)
    parent: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Translate(Virgis.MoveArgs)
  Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.MoveAxis(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.MoveAxis(Virgis.MoveArgs)
        name: MoveAxis
        nameWithType: VirgisLayer<GeographyCollection, FeatureCollection>.MoveAxis
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, FeatureCollection>.MoveAxis
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.MoveAxis(Virgis.MoveArgs)
        name: MoveAxis
        nameWithType: VirgisLayer(Of GeographyCollection, FeatureCollection).MoveAxis
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, FeatureCollection).MoveAxis
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.MoveAxis(Virgis.MoveArgs)
    parent: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.MoveAxis(Virgis.MoveArgs)
  Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.MoveTo(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.MoveTo(Virgis.MoveArgs)
        name: MoveTo
        nameWithType: VirgisLayer<GeographyCollection, FeatureCollection>.MoveTo
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, FeatureCollection>.MoveTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.MoveTo(Virgis.MoveArgs)
        name: MoveTo
        nameWithType: VirgisLayer(Of GeographyCollection, FeatureCollection).MoveTo
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, FeatureCollection).MoveTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.MoveTo(Virgis.MoveArgs)
    parent: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.MoveTo(Virgis.MoveArgs)
  Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.VertexMove(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.VertexMove(Virgis.MoveArgs)
        name: VertexMove
        nameWithType: VirgisLayer<GeographyCollection, FeatureCollection>.VertexMove
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, FeatureCollection>.VertexMove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.VertexMove(Virgis.MoveArgs)
        name: VertexMove
        nameWithType: VirgisLayer(Of GeographyCollection, FeatureCollection).VertexMove
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, FeatureCollection).VertexMove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.VertexMove(Virgis.MoveArgs)
    parent: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.VertexMove(Virgis.MoveArgs)
  Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.StartEditSession:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.StartEditSession
        name: StartEditSession
        nameWithType: VirgisLayer<GeographyCollection, FeatureCollection>.StartEditSession
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, FeatureCollection>.StartEditSession
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.StartEditSession
        name: StartEditSession
        nameWithType: VirgisLayer(Of GeographyCollection, FeatureCollection).StartEditSession
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, FeatureCollection).StartEditSession
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.StartEditSession
    parent: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.StartEditSession
  Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.ExitEditSession(System.Boolean):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.ExitEditSession(System.Boolean)
        name: ExitEditSession
        nameWithType: VirgisLayer<GeographyCollection, FeatureCollection>.ExitEditSession
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, FeatureCollection>.ExitEditSession
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.ExitEditSession(System.Boolean)
        name: ExitEditSession
        nameWithType: VirgisLayer(Of GeographyCollection, FeatureCollection).ExitEditSession
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, FeatureCollection).ExitEditSession
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.ExitEditSession(System.Boolean)
    parent: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.ExitEditSession(System.Boolean)
  Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Selected(Virgis.SelectionTypes):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Selected(Virgis.SelectionTypes)
        name: Selected
        nameWithType: VirgisLayer<GeographyCollection, FeatureCollection>.Selected
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, FeatureCollection>.Selected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionTypes
        name: SelectionTypes
        nameWithType: SelectionTypes
        qualifiedName: Virgis.SelectionTypes
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Selected(Virgis.SelectionTypes)
        name: Selected
        nameWithType: VirgisLayer(Of GeographyCollection, FeatureCollection).Selected
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, FeatureCollection).Selected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionTypes
        name: SelectionTypes
        nameWithType: SelectionTypes
        qualifiedName: Virgis.SelectionTypes
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Selected(Virgis.SelectionTypes)
    parent: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Selected(Virgis.SelectionTypes)
  Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.UnSelected(Virgis.SelectionTypes):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.UnSelected(Virgis.SelectionTypes)
        name: UnSelected
        nameWithType: VirgisLayer<GeographyCollection, FeatureCollection>.UnSelected
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, FeatureCollection>.UnSelected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionTypes
        name: SelectionTypes
        nameWithType: SelectionTypes
        qualifiedName: Virgis.SelectionTypes
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.UnSelected(Virgis.SelectionTypes)
        name: UnSelected
        nameWithType: VirgisLayer(Of GeographyCollection, FeatureCollection).UnSelected
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, FeatureCollection).UnSelected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionTypes
        name: SelectionTypes
        nameWithType: SelectionTypes
        qualifiedName: Virgis.SelectionTypes
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.UnSelected(Virgis.SelectionTypes)
    parent: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.UnSelected(Virgis.SelectionTypes)
  Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.GetClosest(Vector3,Guid[]):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetClosest(Vector3,Guid[])
        name: GetClosest
        nameWithType: VirgisLayer<GeographyCollection, FeatureCollection>.GetClosest
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, FeatureCollection>.GetClosest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: Guid
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetClosest(Vector3,Guid[])
        name: GetClosest
        nameWithType: VirgisLayer(Of GeographyCollection, FeatureCollection).GetClosest
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, FeatureCollection).GetClosest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: Guid
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetClosest(Vector3,Guid[])
    parent: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.GetClosest(Vector3,Guid[])
  Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.GetFeature(Guid):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetFeature(Guid)
        name: GetFeature
        nameWithType: VirgisLayer<GeographyCollection, FeatureCollection>.GetFeature
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, FeatureCollection>.GetFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: Guid
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetFeature(Guid)
        name: GetFeature
        nameWithType: VirgisLayer(Of GeographyCollection, FeatureCollection).GetFeature
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, FeatureCollection).GetFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: Guid
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetFeature(Guid)
    parent: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.GetFeature(Guid)
  Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.GetId:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetId
        name: GetId
        nameWithType: VirgisLayer<GeographyCollection, FeatureCollection>.GetId
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, FeatureCollection>.GetId
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetId
        name: GetId
        nameWithType: VirgisLayer(Of GeographyCollection, FeatureCollection).GetId
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, FeatureCollection).GetId
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetId
    parent: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.GetId
  Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.GetMetadata:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetMetadata
        name: GetMetadata
        nameWithType: VirgisLayer<GeographyCollection, FeatureCollection>.GetMetadata
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, FeatureCollection>.GetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetMetadata
        name: GetMetadata
        nameWithType: VirgisLayer(Of GeographyCollection, FeatureCollection).GetMetadata
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, FeatureCollection).GetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetMetadata
    parent: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.GetMetadata
  Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.GetFeatureShape:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetFeatureShape
        name: GetFeatureShape
        nameWithType: VirgisLayer<GeographyCollection, FeatureCollection>.GetFeatureShape
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, FeatureCollection>.GetFeatureShape
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetFeatureShape
        name: GetFeatureShape
        nameWithType: VirgisLayer(Of GeographyCollection, FeatureCollection).GetFeatureShape
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, FeatureCollection).GetFeatureShape
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetFeatureShape
    parent: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.GetFeatureShape
  Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.SetVisible(System.Boolean):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.SetVisible(System.Boolean)
        name: SetVisible
        nameWithType: VirgisLayer<GeographyCollection, FeatureCollection>.SetVisible
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, FeatureCollection>.SetVisible
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.SetVisible(System.Boolean)
        name: SetVisible
        nameWithType: VirgisLayer(Of GeographyCollection, FeatureCollection).SetVisible
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, FeatureCollection).SetVisible
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.SetVisible(System.Boolean)
    parent: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.SetVisible(System.Boolean)
  Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.IsVisible:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.IsVisible
        name: IsVisible
        nameWithType: VirgisLayer<GeographyCollection, FeatureCollection>.IsVisible
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, FeatureCollection>.IsVisible
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.IsVisible
        name: IsVisible
        nameWithType: VirgisLayer(Of GeographyCollection, FeatureCollection).IsVisible
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, FeatureCollection).IsVisible
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.IsVisible
    parent: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.IsVisible
  Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.SetEditable(System.Boolean):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.SetEditable(System.Boolean)
        name: SetEditable
        nameWithType: VirgisLayer<GeographyCollection, FeatureCollection>.SetEditable
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, FeatureCollection>.SetEditable
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.SetEditable(System.Boolean)
        name: SetEditable
        nameWithType: VirgisLayer(Of GeographyCollection, FeatureCollection).SetEditable
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, FeatureCollection).SetEditable
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.SetEditable(System.Boolean)
    parent: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.SetEditable(System.Boolean)
  Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.IsEditable:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.IsEditable
        name: IsEditable
        nameWithType: VirgisLayer<GeographyCollection, FeatureCollection>.IsEditable
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, FeatureCollection>.IsEditable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.IsEditable
        name: IsEditable
        nameWithType: VirgisLayer(Of GeographyCollection, FeatureCollection).IsEditable
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, FeatureCollection).IsEditable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.IsEditable
    parent: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.IsEditable
  Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Equals(System.Object):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Equals(System.Object)
        name: Equals
        nameWithType: VirgisLayer<GeographyCollection, FeatureCollection>.Equals
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, FeatureCollection>.Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Equals(System.Object)
        name: Equals
        nameWithType: VirgisLayer(Of GeographyCollection, FeatureCollection).Equals
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, FeatureCollection).Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Equals(System.Object)
    parent: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Equals(System.Object)
  Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.GetHashCode:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetHashCode
        name: GetHashCode
        nameWithType: VirgisLayer<GeographyCollection, FeatureCollection>.GetHashCode
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, FeatureCollection>.GetHashCode
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetHashCode
        name: GetHashCode
        nameWithType: VirgisLayer(Of GeographyCollection, FeatureCollection).GetHashCode
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, FeatureCollection).GetHashCode
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetHashCode
    parent: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.GetHashCode
  Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Equals(Virgis.VirgisLayer{GeographyCollection,FeatureCollection}):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
        name: Equals
        nameWithType: VirgisLayer<GeographyCollection, FeatureCollection>.Equals
        qualifiedName: Virgis.VirgisLayer<GeographyCollection, FeatureCollection>.Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: GeographyCollection
        name: GeographyCollection
        nameWithType: GeographyCollection
        qualifiedName: GeographyCollection
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: FeatureCollection
        name: FeatureCollection
        nameWithType: FeatureCollection
        qualifiedName: FeatureCollection
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
        name: Equals
        nameWithType: VirgisLayer(Of GeographyCollection, FeatureCollection).Equals
        qualifiedName: Virgis.VirgisLayer(Of GeographyCollection, FeatureCollection).Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: GeographyCollection
        name: GeographyCollection
        nameWithType: GeographyCollection
        qualifiedName: GeographyCollection
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: FeatureCollection
        name: FeatureCollection
        nameWithType: FeatureCollection
        qualifiedName: FeatureCollection
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
    parent: Virgis.VirgisLayer{GeographyCollection,FeatureCollection}
    commentId: M:Virgis.VirgisLayer{GeographyCollection,FeatureCollection}.Equals(Virgis.VirgisLayer{GeographyCollection,FeatureCollection})
  Virgis.PolygonLayer._init*:
    name:
      CSharp:
      - id: Virgis.PolygonLayer._init*
        name: _init
        nameWithType: PolygonLayer._init
        qualifiedName: Virgis.PolygonLayer._init
      VB:
      - id: Virgis.PolygonLayer._init*
        name: _init
        nameWithType: PolygonLayer._init
        qualifiedName: Virgis.PolygonLayer._init
    isDefinition: true
    commentId: Overload:Virgis.PolygonLayer._init
  Virgis.PolygonLayer._addFeature*:
    name:
      CSharp:
      - id: Virgis.PolygonLayer._addFeature*
        name: _addFeature
        nameWithType: PolygonLayer._addFeature
        qualifiedName: Virgis.PolygonLayer._addFeature
      VB:
      - id: Virgis.PolygonLayer._addFeature*
        name: _addFeature
        nameWithType: PolygonLayer._addFeature
        qualifiedName: Virgis.PolygonLayer._addFeature
    isDefinition: true
    commentId: Overload:Virgis.PolygonLayer._addFeature
  Virgis.PolygonLayer._draw*:
    name:
      CSharp:
      - id: Virgis.PolygonLayer._draw*
        name: _draw
        nameWithType: PolygonLayer._draw
        qualifiedName: Virgis.PolygonLayer._draw
      VB:
      - id: Virgis.PolygonLayer._draw*
        name: _draw
        nameWithType: PolygonLayer._draw
        qualifiedName: Virgis.PolygonLayer._draw
    isDefinition: true
    commentId: Overload:Virgis.PolygonLayer._draw
  IEnumerable`1:
    name:
      CSharp:
      - id: IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  IEnumerable{LineString}:
    name:
      CSharp:
      - id: IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: LineString
        name: LineString
        nameWithType: LineString
        qualifiedName: LineString
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: LineString
        name: LineString
        nameWithType: LineString
        qualifiedName: LineString
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IEnumerable`1
    commentId: '!:IEnumerable{LineString}'
  Dictionary`2:
    name:
      CSharp:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  Dictionary{System.String,System.Object}:
    name:
      CSharp:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Dictionary`2
    commentId: '!:Dictionary{System.String,System.Object}'
  Virgis.PolygonLayer._drawFeature*:
    name:
      CSharp:
      - id: Virgis.PolygonLayer._drawFeature*
        name: _drawFeature
        nameWithType: PolygonLayer._drawFeature
        qualifiedName: Virgis.PolygonLayer._drawFeature
      VB:
      - id: Virgis.PolygonLayer._drawFeature*
        name: _drawFeature
        nameWithType: PolygonLayer._drawFeature
        qualifiedName: Virgis.PolygonLayer._drawFeature
    isDefinition: true
    commentId: Overload:Virgis.PolygonLayer._drawFeature
  Virgis.PolygonLayer._checkpoint*:
    name:
      CSharp:
      - id: Virgis.PolygonLayer._checkpoint*
        name: _checkpoint
        nameWithType: PolygonLayer._checkpoint
        qualifiedName: Virgis.PolygonLayer._checkpoint
      VB:
      - id: Virgis.PolygonLayer._checkpoint*
        name: _checkpoint
        nameWithType: PolygonLayer._checkpoint
        qualifiedName: Virgis.PolygonLayer._checkpoint
    isDefinition: true
    commentId: Overload:Virgis.PolygonLayer._checkpoint
  Virgis.PolygonLayer._save*:
    name:
      CSharp:
      - id: Virgis.PolygonLayer._save*
        name: _save
        nameWithType: PolygonLayer._save
        qualifiedName: Virgis.PolygonLayer._save
      VB:
      - id: Virgis.PolygonLayer._save*
        name: _save
        nameWithType: PolygonLayer._save
        qualifiedName: Virgis.PolygonLayer._save
    isDefinition: true
    commentId: Overload:Virgis.PolygonLayer._save
  Virgis.PolygonLayer.GetFeatureShape*:
    name:
      CSharp:
      - id: Virgis.PolygonLayer.GetFeatureShape*
        name: GetFeatureShape
        nameWithType: PolygonLayer.GetFeatureShape
        qualifiedName: Virgis.PolygonLayer.GetFeatureShape
      VB:
      - id: Virgis.PolygonLayer.GetFeatureShape*
        name: GetFeatureShape
        nameWithType: PolygonLayer.GetFeatureShape
        qualifiedName: Virgis.PolygonLayer.GetFeatureShape
    isDefinition: true
    commentId: Overload:Virgis.PolygonLayer.GetFeatureShape
  Virgis.PolygonLayer.Translate*:
    name:
      CSharp:
      - id: Virgis.PolygonLayer.Translate*
        name: Translate
        nameWithType: PolygonLayer.Translate
        qualifiedName: Virgis.PolygonLayer.Translate
      VB:
      - id: Virgis.PolygonLayer.Translate*
        name: Translate
        nameWithType: PolygonLayer.Translate
        qualifiedName: Virgis.PolygonLayer.Translate
    isDefinition: true
    commentId: Overload:Virgis.PolygonLayer.Translate
  Virgis.PolygonLayer.MoveAxis*:
    name:
      CSharp:
      - id: Virgis.PolygonLayer.MoveAxis*
        name: MoveAxis
        nameWithType: PolygonLayer.MoveAxis
        qualifiedName: Virgis.PolygonLayer.MoveAxis
      VB:
      - id: Virgis.PolygonLayer.MoveAxis*
        name: MoveAxis
        nameWithType: PolygonLayer.MoveAxis
        qualifiedName: Virgis.PolygonLayer.MoveAxis
    isDefinition: true
    commentId: Overload:Virgis.PolygonLayer.MoveAxis
  Virgis.PolygonLayer:
    name:
      CSharp:
      - id: Virgis.PolygonLayer
        name: PolygonLayer
        nameWithType: PolygonLayer
        qualifiedName: Virgis.PolygonLayer
      VB:
      - id: Virgis.PolygonLayer
        name: PolygonLayer
        nameWithType: PolygonLayer
        qualifiedName: Virgis.PolygonLayer
    isDefinition: true
    commentId: T:Virgis.PolygonLayer
  Virgis.PointLayer._init*:
    name:
      CSharp:
      - id: Virgis.PointLayer._init*
        name: _init
        nameWithType: PointLayer._init
        qualifiedName: Virgis.PointLayer._init
      VB:
      - id: Virgis.PointLayer._init*
        name: _init
        nameWithType: PointLayer._init
        qualifiedName: Virgis.PointLayer._init
    isDefinition: true
    commentId: Overload:Virgis.PointLayer._init
  Virgis.PointLayer._addFeature*:
    name:
      CSharp:
      - id: Virgis.PointLayer._addFeature*
        name: _addFeature
        nameWithType: PointLayer._addFeature
        qualifiedName: Virgis.PointLayer._addFeature
      VB:
      - id: Virgis.PointLayer._addFeature*
        name: _addFeature
        nameWithType: PointLayer._addFeature
        qualifiedName: Virgis.PointLayer._addFeature
    isDefinition: true
    commentId: Overload:Virgis.PointLayer._addFeature
  Virgis.PointLayer._draw*:
    name:
      CSharp:
      - id: Virgis.PointLayer._draw*
        name: _draw
        nameWithType: PointLayer._draw
        qualifiedName: Virgis.PointLayer._draw
      VB:
      - id: Virgis.PointLayer._draw*
        name: _draw
        nameWithType: PointLayer._draw
        qualifiedName: Virgis.PointLayer._draw
    isDefinition: true
    commentId: Overload:Virgis.PointLayer._draw
  Virgis.PointLayer._drawFeature*:
    name:
      CSharp:
      - id: Virgis.PointLayer._drawFeature*
        name: _drawFeature
        nameWithType: PointLayer._drawFeature
        qualifiedName: Virgis.PointLayer._drawFeature
      VB:
      - id: Virgis.PointLayer._drawFeature*
        name: _drawFeature
        nameWithType: PointLayer._drawFeature
        qualifiedName: Virgis.PointLayer._drawFeature
    isDefinition: true
    commentId: Overload:Virgis.PointLayer._drawFeature
  Virgis.PointLayer._checkpoint*:
    name:
      CSharp:
      - id: Virgis.PointLayer._checkpoint*
        name: _checkpoint
        nameWithType: PointLayer._checkpoint
        qualifiedName: Virgis.PointLayer._checkpoint
      VB:
      - id: Virgis.PointLayer._checkpoint*
        name: _checkpoint
        nameWithType: PointLayer._checkpoint
        qualifiedName: Virgis.PointLayer._checkpoint
    isDefinition: true
    commentId: Overload:Virgis.PointLayer._checkpoint
  Virgis.PointLayer._save*:
    name:
      CSharp:
      - id: Virgis.PointLayer._save*
        name: _save
        nameWithType: PointLayer._save
        qualifiedName: Virgis.PointLayer._save
      VB:
      - id: Virgis.PointLayer._save*
        name: _save
        nameWithType: PointLayer._save
        qualifiedName: Virgis.PointLayer._save
    isDefinition: true
    commentId: Overload:Virgis.PointLayer._save
  Virgis.PointLayer.GetFeatureShape*:
    name:
      CSharp:
      - id: Virgis.PointLayer.GetFeatureShape*
        name: GetFeatureShape
        nameWithType: PointLayer.GetFeatureShape
        qualifiedName: Virgis.PointLayer.GetFeatureShape
      VB:
      - id: Virgis.PointLayer.GetFeatureShape*
        name: GetFeatureShape
        nameWithType: PointLayer.GetFeatureShape
        qualifiedName: Virgis.PointLayer.GetFeatureShape
    isDefinition: true
    commentId: Overload:Virgis.PointLayer.GetFeatureShape
  Virgis.PointLayer.Translate*:
    name:
      CSharp:
      - id: Virgis.PointLayer.Translate*
        name: Translate
        nameWithType: PointLayer.Translate
        qualifiedName: Virgis.PointLayer.Translate
      VB:
      - id: Virgis.PointLayer.Translate*
        name: Translate
        nameWithType: PointLayer.Translate
        qualifiedName: Virgis.PointLayer.Translate
    isDefinition: true
    commentId: Overload:Virgis.PointLayer.Translate
  Virgis.PointLayer.MoveAxis*:
    name:
      CSharp:
      - id: Virgis.PointLayer.MoveAxis*
        name: MoveAxis
        nameWithType: PointLayer.MoveAxis
        qualifiedName: Virgis.PointLayer.MoveAxis
      VB:
      - id: Virgis.PointLayer.MoveAxis*
        name: MoveAxis
        nameWithType: PointLayer.MoveAxis
        qualifiedName: Virgis.PointLayer.MoveAxis
    isDefinition: true
    commentId: Overload:Virgis.PointLayer.MoveAxis
  Virgis.PointLayer.RemoveVertex*:
    name:
      CSharp:
      - id: Virgis.PointLayer.RemoveVertex*
        name: RemoveVertex
        nameWithType: PointLayer.RemoveVertex
        qualifiedName: Virgis.PointLayer.RemoveVertex
      VB:
      - id: Virgis.PointLayer.RemoveVertex*
        name: RemoveVertex
        nameWithType: PointLayer.RemoveVertex
        qualifiedName: Virgis.PointLayer.RemoveVertex
    isDefinition: true
    commentId: Overload:Virgis.PointLayer.RemoveVertex
  Virgis.PointLayer:
    name:
      CSharp:
      - id: Virgis.PointLayer
        name: PointLayer
        nameWithType: PointLayer
        qualifiedName: Virgis.PointLayer
      VB:
      - id: Virgis.PointLayer
        name: PointLayer
        nameWithType: PointLayer
        qualifiedName: Virgis.PointLayer
    isDefinition: true
    commentId: T:Virgis.PointLayer
  Virgis.LayerPanelEditSelectedEvent:
    name:
      CSharp:
      - id: Virgis.LayerPanelEditSelectedEvent
        name: LayerPanelEditSelectedEvent
        nameWithType: LayerPanelEditSelectedEvent
        qualifiedName: Virgis.LayerPanelEditSelectedEvent
      VB:
      - id: Virgis.LayerPanelEditSelectedEvent
        name: LayerPanelEditSelectedEvent
        nameWithType: LayerPanelEditSelectedEvent
        qualifiedName: Virgis.LayerPanelEditSelectedEvent
    isDefinition: true
    commentId: T:Virgis.LayerPanelEditSelectedEvent
  Virgis.LayerUIPanel.layer*:
    name:
      CSharp:
      - id: Virgis.LayerUIPanel.layer*
        name: layer
        nameWithType: LayerUIPanel.layer
        qualifiedName: Virgis.LayerUIPanel.layer
      VB:
      - id: Virgis.LayerUIPanel.layer*
        name: layer
        nameWithType: LayerUIPanel.layer
        qualifiedName: Virgis.LayerUIPanel.layer
    isDefinition: true
    commentId: Overload:Virgis.LayerUIPanel.layer
  UnityAction`2:
    name:
      CSharp:
      - id: UnityAction`2
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: UnityAction`2
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:UnityAction`2'
  UnityAction{Virgis.LayerUIPanel,System.Boolean}:
    name:
      CSharp:
      - id: UnityAction`2
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Virgis.LayerUIPanel
        name: LayerUIPanel
        nameWithType: LayerUIPanel
        qualifiedName: Virgis.LayerUIPanel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: UnityAction`2
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Virgis.LayerUIPanel
        name: LayerUIPanel
        nameWithType: LayerUIPanel
        qualifiedName: Virgis.LayerUIPanel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: UnityAction`2
    commentId: '!:UnityAction{Virgis.LayerUIPanel,System.Boolean}'
  Virgis.LayerUIPanel.AddEditSelectedListener*:
    name:
      CSharp:
      - id: Virgis.LayerUIPanel.AddEditSelectedListener*
        name: AddEditSelectedListener
        nameWithType: LayerUIPanel.AddEditSelectedListener
        qualifiedName: Virgis.LayerUIPanel.AddEditSelectedListener
      VB:
      - id: Virgis.LayerUIPanel.AddEditSelectedListener*
        name: AddEditSelectedListener
        nameWithType: LayerUIPanel.AddEditSelectedListener
        qualifiedName: Virgis.LayerUIPanel.AddEditSelectedListener
    isDefinition: true
    commentId: Overload:Virgis.LayerUIPanel.AddEditSelectedListener
  Virgis.LayerUIPanel:
    name:
      CSharp:
      - id: Virgis.LayerUIPanel
        name: LayerUIPanel
        nameWithType: LayerUIPanel
        qualifiedName: Virgis.LayerUIPanel
      VB:
      - id: Virgis.LayerUIPanel
        name: LayerUIPanel
        nameWithType: LayerUIPanel
        qualifiedName: Virgis.LayerUIPanel
    isDefinition: true
    commentId: T:Virgis.LayerUIPanel
  Virgis.LineLayer._init*:
    name:
      CSharp:
      - id: Virgis.LineLayer._init*
        name: _init
        nameWithType: LineLayer._init
        qualifiedName: Virgis.LineLayer._init
      VB:
      - id: Virgis.LineLayer._init*
        name: _init
        nameWithType: LineLayer._init
        qualifiedName: Virgis.LineLayer._init
    isDefinition: true
    commentId: Overload:Virgis.LineLayer._init
  Virgis.LineLayer._addFeature*:
    name:
      CSharp:
      - id: Virgis.LineLayer._addFeature*
        name: _addFeature
        nameWithType: LineLayer._addFeature
        qualifiedName: Virgis.LineLayer._addFeature
      VB:
      - id: Virgis.LineLayer._addFeature*
        name: _addFeature
        nameWithType: LineLayer._addFeature
        qualifiedName: Virgis.LineLayer._addFeature
    isDefinition: true
    commentId: Overload:Virgis.LineLayer._addFeature
  Virgis.LineLayer._draw*:
    name:
      CSharp:
      - id: Virgis.LineLayer._draw*
        name: _draw
        nameWithType: LineLayer._draw
        qualifiedName: Virgis.LineLayer._draw
      VB:
      - id: Virgis.LineLayer._draw*
        name: _draw
        nameWithType: LineLayer._draw
        qualifiedName: Virgis.LineLayer._draw
    isDefinition: true
    commentId: Overload:Virgis.LineLayer._draw
  Virgis.LineLayer._drawFeature*:
    name:
      CSharp:
      - id: Virgis.LineLayer._drawFeature*
        name: _drawFeature
        nameWithType: LineLayer._drawFeature
        qualifiedName: Virgis.LineLayer._drawFeature
      VB:
      - id: Virgis.LineLayer._drawFeature*
        name: _drawFeature
        nameWithType: LineLayer._drawFeature
        qualifiedName: Virgis.LineLayer._drawFeature
    isDefinition: true
    commentId: Overload:Virgis.LineLayer._drawFeature
  Virgis.LineLayer._checkpoint*:
    name:
      CSharp:
      - id: Virgis.LineLayer._checkpoint*
        name: _checkpoint
        nameWithType: LineLayer._checkpoint
        qualifiedName: Virgis.LineLayer._checkpoint
      VB:
      - id: Virgis.LineLayer._checkpoint*
        name: _checkpoint
        nameWithType: LineLayer._checkpoint
        qualifiedName: Virgis.LineLayer._checkpoint
    isDefinition: true
    commentId: Overload:Virgis.LineLayer._checkpoint
  Virgis.LineLayer._save*:
    name:
      CSharp:
      - id: Virgis.LineLayer._save*
        name: _save
        nameWithType: LineLayer._save
        qualifiedName: Virgis.LineLayer._save
      VB:
      - id: Virgis.LineLayer._save*
        name: _save
        nameWithType: LineLayer._save
        qualifiedName: Virgis.LineLayer._save
    isDefinition: true
    commentId: Overload:Virgis.LineLayer._save
  Virgis.LineLayer.GetFeatureShape*:
    name:
      CSharp:
      - id: Virgis.LineLayer.GetFeatureShape*
        name: GetFeatureShape
        nameWithType: LineLayer.GetFeatureShape
        qualifiedName: Virgis.LineLayer.GetFeatureShape
      VB:
      - id: Virgis.LineLayer.GetFeatureShape*
        name: GetFeatureShape
        nameWithType: LineLayer.GetFeatureShape
        qualifiedName: Virgis.LineLayer.GetFeatureShape
    isDefinition: true
    commentId: Overload:Virgis.LineLayer.GetFeatureShape
  Virgis.LineLayer.Translate*:
    name:
      CSharp:
      - id: Virgis.LineLayer.Translate*
        name: Translate
        nameWithType: LineLayer.Translate
        qualifiedName: Virgis.LineLayer.Translate
      VB:
      - id: Virgis.LineLayer.Translate*
        name: Translate
        nameWithType: LineLayer.Translate
        qualifiedName: Virgis.LineLayer.Translate
    isDefinition: true
    commentId: Overload:Virgis.LineLayer.Translate
  Virgis.LineLayer.MoveAxis*:
    name:
      CSharp:
      - id: Virgis.LineLayer.MoveAxis*
        name: MoveAxis
        nameWithType: LineLayer.MoveAxis
        qualifiedName: Virgis.LineLayer.MoveAxis
      VB:
      - id: Virgis.LineLayer.MoveAxis*
        name: MoveAxis
        nameWithType: LineLayer.MoveAxis
        qualifiedName: Virgis.LineLayer.MoveAxis
    isDefinition: true
    commentId: Overload:Virgis.LineLayer.MoveAxis
  Virgis.LineLayer:
    name:
      CSharp:
      - id: Virgis.LineLayer
        name: LineLayer
        nameWithType: LineLayer
        qualifiedName: Virgis.LineLayer
      VB:
      - id: Virgis.LineLayer
        name: LineLayer
        nameWithType: LineLayer
        qualifiedName: Virgis.LineLayer
    isDefinition: true
    commentId: T:Virgis.LineLayer
  Task{Virgis.ParticleData}:
    name:
      CSharp:
      - id: Task`1
        name: Task
        nameWithType: Task
        qualifiedName: Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Virgis.ParticleData
        name: ParticleData
        nameWithType: ParticleData
        qualifiedName: Virgis.ParticleData
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Task`1
        name: Task
        nameWithType: Task
        qualifiedName: Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Virgis.ParticleData
        name: ParticleData
        nameWithType: ParticleData
        qualifiedName: Virgis.ParticleData
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Task`1
    commentId: '!:Task{Virgis.ParticleData}'
  Virgis.PlyImport.Load*:
    name:
      CSharp:
      - id: Virgis.PlyImport.Load*
        name: Load
        nameWithType: PlyImport.Load
        qualifiedName: Virgis.PlyImport.Load
      VB:
      - id: Virgis.PlyImport.Load*
        name: Load
        nameWithType: PlyImport.Load
        qualifiedName: Virgis.PlyImport.Load
    isDefinition: true
    commentId: Overload:Virgis.PlyImport.Load
  Virgis.PlyImport:
    name:
      CSharp:
      - id: Virgis.PlyImport
        name: PlyImport
        nameWithType: PlyImport
        qualifiedName: Virgis.PlyImport
      VB:
      - id: Virgis.PlyImport
        name: PlyImport
        nameWithType: PlyImport
        qualifiedName: Virgis.PlyImport
    isDefinition: true
    commentId: T:Virgis.PlyImport
  Virgis.CSVRow:
    name:
      CSharp:
      - id: Virgis.CSVRow
        name: CSVRow
        nameWithType: CSVRow
        qualifiedName: Virgis.CSVRow
      VB:
      - id: Virgis.CSVRow
        name: CSVRow
        nameWithType: CSVRow
        qualifiedName: Virgis.CSVRow
    isDefinition: true
    commentId: T:Virgis.CSVRow
  Virgis.CSVData:
    name:
      CSharp:
      - id: Virgis.CSVData
        name: CSVData
        nameWithType: CSVData
        qualifiedName: Virgis.CSVData
      VB:
      - id: Virgis.CSVData
        name: CSVData
        nameWithType: CSVData
        qualifiedName: Virgis.CSVData
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.CSVData
  Virgis.CSVReader.Load*:
    name:
      CSharp:
      - id: Virgis.CSVReader.Load*
        name: Load
        nameWithType: CSVReader.Load
        qualifiedName: Virgis.CSVReader.Load
      VB:
      - id: Virgis.CSVReader.Load*
        name: Load
        nameWithType: CSVReader.Load
        qualifiedName: Virgis.CSVReader.Load
    isDefinition: true
    commentId: Overload:Virgis.CSVReader.Load
  Virgis.CSVReader.Read*:
    name:
      CSharp:
      - id: Virgis.CSVReader.Read*
        name: Read
        nameWithType: CSVReader.Read
        qualifiedName: Virgis.CSVReader.Read
      VB:
      - id: Virgis.CSVReader.Read*
        name: Read
        nameWithType: CSVReader.Read
        qualifiedName: Virgis.CSVReader.Read
    isDefinition: true
    commentId: Overload:Virgis.CSVReader.Read
  Virgis.CSVReader:
    name:
      CSharp:
      - id: Virgis.CSVReader
        name: CSVReader
        nameWithType: CSVReader
        qualifiedName: Virgis.CSVReader
      VB:
      - id: Virgis.CSVReader
        name: CSVReader
        nameWithType: CSVReader
        qualifiedName: Virgis.CSVReader
    isDefinition: true
    commentId: T:Virgis.CSVReader
  FeatureCollection:
    name:
      CSharp:
      - id: FeatureCollection
        name: FeatureCollection
        nameWithType: FeatureCollection
        qualifiedName: FeatureCollection
        isExternal: true
      VB:
      - id: FeatureCollection
        name: FeatureCollection
        nameWithType: FeatureCollection
        qualifiedName: FeatureCollection
        isExternal: true
    isDefinition: true
  Virgis.GeoJsonReader.getFeatureCollection*:
    name:
      CSharp:
      - id: Virgis.GeoJsonReader.getFeatureCollection*
        name: getFeatureCollection
        nameWithType: GeoJsonReader.getFeatureCollection
        qualifiedName: Virgis.GeoJsonReader.getFeatureCollection
      VB:
      - id: Virgis.GeoJsonReader.getFeatureCollection*
        name: getFeatureCollection
        nameWithType: GeoJsonReader.getFeatureCollection
        qualifiedName: Virgis.GeoJsonReader.getFeatureCollection
    isDefinition: true
    commentId: Overload:Virgis.GeoJsonReader.getFeatureCollection
  Virgis.GeoJsonReader.Load*:
    name:
      CSharp:
      - id: Virgis.GeoJsonReader.Load*
        name: Load
        nameWithType: GeoJsonReader.Load
        qualifiedName: Virgis.GeoJsonReader.Load
      VB:
      - id: Virgis.GeoJsonReader.Load*
        name: Load
        nameWithType: GeoJsonReader.Load
        qualifiedName: Virgis.GeoJsonReader.Load
    isDefinition: true
    commentId: Overload:Virgis.GeoJsonReader.Load
  Virgis.GeoJsonReader.GetProject*:
    name:
      CSharp:
      - id: Virgis.GeoJsonReader.GetProject*
        name: GetProject
        nameWithType: GeoJsonReader.GetProject
        qualifiedName: Virgis.GeoJsonReader.GetProject
      VB:
      - id: Virgis.GeoJsonReader.GetProject*
        name: GetProject
        nameWithType: GeoJsonReader.GetProject
        qualifiedName: Virgis.GeoJsonReader.GetProject
    isDefinition: true
    commentId: Overload:Virgis.GeoJsonReader.GetProject
  Virgis.GeoJsonReader.Save*:
    name:
      CSharp:
      - id: Virgis.GeoJsonReader.Save*
        name: Save
        nameWithType: GeoJsonReader.Save
        qualifiedName: Virgis.GeoJsonReader.Save
      VB:
      - id: Virgis.GeoJsonReader.Save*
        name: Save
        nameWithType: GeoJsonReader.Save
        qualifiedName: Virgis.GeoJsonReader.Save
    isDefinition: true
    commentId: Overload:Virgis.GeoJsonReader.Save
  Virgis.GeoJsonReader.SetFeatureCollection*:
    name:
      CSharp:
      - id: Virgis.GeoJsonReader.SetFeatureCollection*
        name: SetFeatureCollection
        nameWithType: GeoJsonReader.SetFeatureCollection
        qualifiedName: Virgis.GeoJsonReader.SetFeatureCollection
      VB:
      - id: Virgis.GeoJsonReader.SetFeatureCollection*
        name: SetFeatureCollection
        nameWithType: GeoJsonReader.SetFeatureCollection
        qualifiedName: Virgis.GeoJsonReader.SetFeatureCollection
    isDefinition: true
    commentId: Overload:Virgis.GeoJsonReader.SetFeatureCollection
  Virgis.GeoJsonReader.SetProject*:
    name:
      CSharp:
      - id: Virgis.GeoJsonReader.SetProject*
        name: SetProject
        nameWithType: GeoJsonReader.SetProject
        qualifiedName: Virgis.GeoJsonReader.SetProject
      VB:
      - id: Virgis.GeoJsonReader.SetProject*
        name: SetProject
        nameWithType: GeoJsonReader.SetProject
        qualifiedName: Virgis.GeoJsonReader.SetProject
    isDefinition: true
    commentId: Overload:Virgis.GeoJsonReader.SetProject
  Virgis.GeoJsonReader:
    name:
      CSharp:
      - id: Virgis.GeoJsonReader
        name: GeoJsonReader
        nameWithType: GeoJsonReader
        qualifiedName: Virgis.GeoJsonReader
      VB:
      - id: Virgis.GeoJsonReader
        name: GeoJsonReader
        nameWithType: GeoJsonReader
        qualifiedName: Virgis.GeoJsonReader
    isDefinition: true
    commentId: T:Virgis.GeoJsonReader
  Virgis.VirgisLayer{RecordSet,Virgis.CSVData}:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Virgis.CSVData
        name: CSVData
        nameWithType: CSVData
        qualifiedName: Virgis.CSVData
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Virgis.CSVData
        name: CSVData
        nameWithType: CSVData
        qualifiedName: Virgis.CSVData
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2
    parent: Virgis
    commentId: T:Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
  Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.layer:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.layer
        name: layer
        nameWithType: VirgisLayer<RecordSet, CSVData>.layer
        qualifiedName: Virgis.VirgisLayer<RecordSet, Virgis.CSVData>.layer
      VB:
      - id: Virgis.VirgisLayer`2.layer
        name: layer
        nameWithType: VirgisLayer(Of RecordSet, CSVData).layer
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Virgis.CSVData).layer
    isDefinition: false
    definition: Virgis.VirgisLayer`2.layer
    parent: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
    commentId: F:Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.layer
  Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.features:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.features
        name: features
        nameWithType: VirgisLayer<RecordSet, CSVData>.features
        qualifiedName: Virgis.VirgisLayer<RecordSet, Virgis.CSVData>.features
      VB:
      - id: Virgis.VirgisLayer`2.features
        name: features
        nameWithType: VirgisLayer(Of RecordSet, CSVData).features
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Virgis.CSVData).features
    isDefinition: false
    definition: Virgis.VirgisLayer`2.features
    parent: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
    commentId: F:Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.features
  Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.changed:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.changed
        name: changed
        nameWithType: VirgisLayer<RecordSet, CSVData>.changed
        qualifiedName: Virgis.VirgisLayer<RecordSet, Virgis.CSVData>.changed
      VB:
      - id: Virgis.VirgisLayer`2.changed
        name: changed
        nameWithType: VirgisLayer(Of RecordSet, CSVData).changed
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Virgis.CSVData).changed
    isDefinition: false
    definition: Virgis.VirgisLayer`2.changed
    parent: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
    commentId: F:Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.changed
  Virgis.VirgisLayer{RecordSet,Virgis.CSVData}._id:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._id
        name: _id
        nameWithType: VirgisLayer<RecordSet, CSVData>._id
        qualifiedName: Virgis.VirgisLayer<RecordSet, Virgis.CSVData>._id
      VB:
      - id: Virgis.VirgisLayer`2._id
        name: _id
        nameWithType: VirgisLayer(Of RecordSet, CSVData)._id
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Virgis.CSVData)._id
    isDefinition: false
    definition: Virgis.VirgisLayer`2._id
    parent: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
    commentId: F:Virgis.VirgisLayer{RecordSet,Virgis.CSVData}._id
  Virgis.VirgisLayer{RecordSet,Virgis.CSVData}._editable:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._editable
        name: _editable
        nameWithType: VirgisLayer<RecordSet, CSVData>._editable
        qualifiedName: Virgis.VirgisLayer<RecordSet, Virgis.CSVData>._editable
      VB:
      - id: Virgis.VirgisLayer`2._editable
        name: _editable
        nameWithType: VirgisLayer(Of RecordSet, CSVData)._editable
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Virgis.CSVData)._editable
    isDefinition: false
    definition: Virgis.VirgisLayer`2._editable
    parent: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
    commentId: F:Virgis.VirgisLayer{RecordSet,Virgis.CSVData}._editable
  Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.Init(RecordSet):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Init(`0)
        name: Init
        nameWithType: VirgisLayer<RecordSet, CSVData>.Init
        qualifiedName: Virgis.VirgisLayer<RecordSet, Virgis.CSVData>.Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Init(`0)
        name: Init
        nameWithType: VirgisLayer(Of RecordSet, CSVData).Init
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Virgis.CSVData).Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Init(`0)
    parent: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
    commentId: M:Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.Init(RecordSet)
  Virgis.VirgisLayer{RecordSet,Virgis.CSVData}._init(RecordSet):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._init(`0)
        name: _init
        nameWithType: VirgisLayer<RecordSet, CSVData>._init
        qualifiedName: Virgis.VirgisLayer<RecordSet, Virgis.CSVData>._init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2._init(`0)
        name: _init
        nameWithType: VirgisLayer(Of RecordSet, CSVData)._init
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Virgis.CSVData)._init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2._init(`0)
    parent: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
    commentId: M:Virgis.VirgisLayer{RecordSet,Virgis.CSVData}._init(RecordSet)
  Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.AddFeature(Vector3[]):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.AddFeature(Vector3[])
        name: AddFeature
        nameWithType: VirgisLayer<RecordSet, CSVData>.AddFeature
        qualifiedName: Virgis.VirgisLayer<RecordSet, Virgis.CSVData>.AddFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.AddFeature(Vector3[])
        name: AddFeature
        nameWithType: VirgisLayer(Of RecordSet, CSVData).AddFeature
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Virgis.CSVData).AddFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.AddFeature(Vector3[])
    parent: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
    commentId: M:Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.AddFeature(Vector3[])
  Virgis.VirgisLayer{RecordSet,Virgis.CSVData}._addFeature(Vector3[]):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._addFeature(Vector3[])
        name: _addFeature
        nameWithType: VirgisLayer<RecordSet, CSVData>._addFeature
        qualifiedName: Virgis.VirgisLayer<RecordSet, Virgis.CSVData>._addFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2._addFeature(Vector3[])
        name: _addFeature
        nameWithType: VirgisLayer(Of RecordSet, CSVData)._addFeature
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Virgis.CSVData)._addFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2._addFeature(Vector3[])
    parent: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
    commentId: M:Virgis.VirgisLayer{RecordSet,Virgis.CSVData}._addFeature(Vector3[])
  Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.Draw:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Draw
        name: Draw
        nameWithType: VirgisLayer<RecordSet, CSVData>.Draw
        qualifiedName: Virgis.VirgisLayer<RecordSet, Virgis.CSVData>.Draw
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Draw
        name: Draw
        nameWithType: VirgisLayer(Of RecordSet, CSVData).Draw
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Virgis.CSVData).Draw
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Draw
    parent: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
    commentId: M:Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.Draw
  Virgis.VirgisLayer{RecordSet,Virgis.CSVData}._draw:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._draw
        name: _draw
        nameWithType: VirgisLayer<RecordSet, CSVData>._draw
        qualifiedName: Virgis.VirgisLayer<RecordSet, Virgis.CSVData>._draw
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2._draw
        name: _draw
        nameWithType: VirgisLayer(Of RecordSet, CSVData)._draw
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Virgis.CSVData)._draw
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2._draw
    parent: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
    commentId: M:Virgis.VirgisLayer{RecordSet,Virgis.CSVData}._draw
  Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.CheckPoint:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.CheckPoint
        name: CheckPoint
        nameWithType: VirgisLayer<RecordSet, CSVData>.CheckPoint
        qualifiedName: Virgis.VirgisLayer<RecordSet, Virgis.CSVData>.CheckPoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.CheckPoint
        name: CheckPoint
        nameWithType: VirgisLayer(Of RecordSet, CSVData).CheckPoint
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Virgis.CSVData).CheckPoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.CheckPoint
    parent: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
    commentId: M:Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.CheckPoint
  Virgis.VirgisLayer{RecordSet,Virgis.CSVData}._checkpoint:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._checkpoint
        name: _checkpoint
        nameWithType: VirgisLayer<RecordSet, CSVData>._checkpoint
        qualifiedName: Virgis.VirgisLayer<RecordSet, Virgis.CSVData>._checkpoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2._checkpoint
        name: _checkpoint
        nameWithType: VirgisLayer(Of RecordSet, CSVData)._checkpoint
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Virgis.CSVData)._checkpoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2._checkpoint
    parent: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
    commentId: M:Virgis.VirgisLayer{RecordSet,Virgis.CSVData}._checkpoint
  Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.Save:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Save
        name: Save
        nameWithType: VirgisLayer<RecordSet, CSVData>.Save
        qualifiedName: Virgis.VirgisLayer<RecordSet, Virgis.CSVData>.Save
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Save
        name: Save
        nameWithType: VirgisLayer(Of RecordSet, CSVData).Save
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Virgis.CSVData).Save
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Save
    parent: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
    commentId: M:Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.Save
  Virgis.VirgisLayer{RecordSet,Virgis.CSVData}._save:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._save
        name: _save
        nameWithType: VirgisLayer<RecordSet, CSVData>._save
        qualifiedName: Virgis.VirgisLayer<RecordSet, Virgis.CSVData>._save
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2._save
        name: _save
        nameWithType: VirgisLayer(Of RecordSet, CSVData)._save
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Virgis.CSVData)._save
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2._save
    parent: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
    commentId: M:Virgis.VirgisLayer{RecordSet,Virgis.CSVData}._save
  Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.Translate(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Translate(Virgis.MoveArgs)
        name: Translate
        nameWithType: VirgisLayer<RecordSet, CSVData>.Translate
        qualifiedName: Virgis.VirgisLayer<RecordSet, Virgis.CSVData>.Translate
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Translate(Virgis.MoveArgs)
        name: Translate
        nameWithType: VirgisLayer(Of RecordSet, CSVData).Translate
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Virgis.CSVData).Translate
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Translate(Virgis.MoveArgs)
    parent: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
    commentId: M:Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.Translate(Virgis.MoveArgs)
  Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.MoveAxis(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.MoveAxis(Virgis.MoveArgs)
        name: MoveAxis
        nameWithType: VirgisLayer<RecordSet, CSVData>.MoveAxis
        qualifiedName: Virgis.VirgisLayer<RecordSet, Virgis.CSVData>.MoveAxis
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.MoveAxis(Virgis.MoveArgs)
        name: MoveAxis
        nameWithType: VirgisLayer(Of RecordSet, CSVData).MoveAxis
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Virgis.CSVData).MoveAxis
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.MoveAxis(Virgis.MoveArgs)
    parent: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
    commentId: M:Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.MoveAxis(Virgis.MoveArgs)
  Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.MoveTo(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.MoveTo(Virgis.MoveArgs)
        name: MoveTo
        nameWithType: VirgisLayer<RecordSet, CSVData>.MoveTo
        qualifiedName: Virgis.VirgisLayer<RecordSet, Virgis.CSVData>.MoveTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.MoveTo(Virgis.MoveArgs)
        name: MoveTo
        nameWithType: VirgisLayer(Of RecordSet, CSVData).MoveTo
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Virgis.CSVData).MoveTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.MoveTo(Virgis.MoveArgs)
    parent: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
    commentId: M:Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.MoveTo(Virgis.MoveArgs)
  Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.VertexMove(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.VertexMove(Virgis.MoveArgs)
        name: VertexMove
        nameWithType: VirgisLayer<RecordSet, CSVData>.VertexMove
        qualifiedName: Virgis.VirgisLayer<RecordSet, Virgis.CSVData>.VertexMove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.VertexMove(Virgis.MoveArgs)
        name: VertexMove
        nameWithType: VirgisLayer(Of RecordSet, CSVData).VertexMove
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Virgis.CSVData).VertexMove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.VertexMove(Virgis.MoveArgs)
    parent: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
    commentId: M:Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.VertexMove(Virgis.MoveArgs)
  Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.StartEditSession:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.StartEditSession
        name: StartEditSession
        nameWithType: VirgisLayer<RecordSet, CSVData>.StartEditSession
        qualifiedName: Virgis.VirgisLayer<RecordSet, Virgis.CSVData>.StartEditSession
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.StartEditSession
        name: StartEditSession
        nameWithType: VirgisLayer(Of RecordSet, CSVData).StartEditSession
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Virgis.CSVData).StartEditSession
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.StartEditSession
    parent: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
    commentId: M:Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.StartEditSession
  Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.ExitEditSession(System.Boolean):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.ExitEditSession(System.Boolean)
        name: ExitEditSession
        nameWithType: VirgisLayer<RecordSet, CSVData>.ExitEditSession
        qualifiedName: Virgis.VirgisLayer<RecordSet, Virgis.CSVData>.ExitEditSession
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.ExitEditSession(System.Boolean)
        name: ExitEditSession
        nameWithType: VirgisLayer(Of RecordSet, CSVData).ExitEditSession
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Virgis.CSVData).ExitEditSession
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.ExitEditSession(System.Boolean)
    parent: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
    commentId: M:Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.ExitEditSession(System.Boolean)
  Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.Selected(Virgis.SelectionTypes):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Selected(Virgis.SelectionTypes)
        name: Selected
        nameWithType: VirgisLayer<RecordSet, CSVData>.Selected
        qualifiedName: Virgis.VirgisLayer<RecordSet, Virgis.CSVData>.Selected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionTypes
        name: SelectionTypes
        nameWithType: SelectionTypes
        qualifiedName: Virgis.SelectionTypes
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Selected(Virgis.SelectionTypes)
        name: Selected
        nameWithType: VirgisLayer(Of RecordSet, CSVData).Selected
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Virgis.CSVData).Selected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionTypes
        name: SelectionTypes
        nameWithType: SelectionTypes
        qualifiedName: Virgis.SelectionTypes
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Selected(Virgis.SelectionTypes)
    parent: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
    commentId: M:Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.Selected(Virgis.SelectionTypes)
  Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.UnSelected(Virgis.SelectionTypes):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.UnSelected(Virgis.SelectionTypes)
        name: UnSelected
        nameWithType: VirgisLayer<RecordSet, CSVData>.UnSelected
        qualifiedName: Virgis.VirgisLayer<RecordSet, Virgis.CSVData>.UnSelected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionTypes
        name: SelectionTypes
        nameWithType: SelectionTypes
        qualifiedName: Virgis.SelectionTypes
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.UnSelected(Virgis.SelectionTypes)
        name: UnSelected
        nameWithType: VirgisLayer(Of RecordSet, CSVData).UnSelected
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Virgis.CSVData).UnSelected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionTypes
        name: SelectionTypes
        nameWithType: SelectionTypes
        qualifiedName: Virgis.SelectionTypes
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.UnSelected(Virgis.SelectionTypes)
    parent: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
    commentId: M:Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.UnSelected(Virgis.SelectionTypes)
  Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.GetClosest(Vector3,Guid[]):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetClosest(Vector3,Guid[])
        name: GetClosest
        nameWithType: VirgisLayer<RecordSet, CSVData>.GetClosest
        qualifiedName: Virgis.VirgisLayer<RecordSet, Virgis.CSVData>.GetClosest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: Guid
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetClosest(Vector3,Guid[])
        name: GetClosest
        nameWithType: VirgisLayer(Of RecordSet, CSVData).GetClosest
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Virgis.CSVData).GetClosest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: Guid
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetClosest(Vector3,Guid[])
    parent: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
    commentId: M:Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.GetClosest(Vector3,Guid[])
  Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.GetFeature(Guid):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetFeature(Guid)
        name: GetFeature
        nameWithType: VirgisLayer<RecordSet, CSVData>.GetFeature
        qualifiedName: Virgis.VirgisLayer<RecordSet, Virgis.CSVData>.GetFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: Guid
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetFeature(Guid)
        name: GetFeature
        nameWithType: VirgisLayer(Of RecordSet, CSVData).GetFeature
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Virgis.CSVData).GetFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: Guid
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetFeature(Guid)
    parent: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
    commentId: M:Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.GetFeature(Guid)
  Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.GetId:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetId
        name: GetId
        nameWithType: VirgisLayer<RecordSet, CSVData>.GetId
        qualifiedName: Virgis.VirgisLayer<RecordSet, Virgis.CSVData>.GetId
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetId
        name: GetId
        nameWithType: VirgisLayer(Of RecordSet, CSVData).GetId
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Virgis.CSVData).GetId
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetId
    parent: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
    commentId: M:Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.GetId
  Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.GetMetadata:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetMetadata
        name: GetMetadata
        nameWithType: VirgisLayer<RecordSet, CSVData>.GetMetadata
        qualifiedName: Virgis.VirgisLayer<RecordSet, Virgis.CSVData>.GetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetMetadata
        name: GetMetadata
        nameWithType: VirgisLayer(Of RecordSet, CSVData).GetMetadata
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Virgis.CSVData).GetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetMetadata
    parent: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
    commentId: M:Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.GetMetadata
  Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.GetFeatureShape:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetFeatureShape
        name: GetFeatureShape
        nameWithType: VirgisLayer<RecordSet, CSVData>.GetFeatureShape
        qualifiedName: Virgis.VirgisLayer<RecordSet, Virgis.CSVData>.GetFeatureShape
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetFeatureShape
        name: GetFeatureShape
        nameWithType: VirgisLayer(Of RecordSet, CSVData).GetFeatureShape
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Virgis.CSVData).GetFeatureShape
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetFeatureShape
    parent: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
    commentId: M:Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.GetFeatureShape
  Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.SetVisible(System.Boolean):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.SetVisible(System.Boolean)
        name: SetVisible
        nameWithType: VirgisLayer<RecordSet, CSVData>.SetVisible
        qualifiedName: Virgis.VirgisLayer<RecordSet, Virgis.CSVData>.SetVisible
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.SetVisible(System.Boolean)
        name: SetVisible
        nameWithType: VirgisLayer(Of RecordSet, CSVData).SetVisible
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Virgis.CSVData).SetVisible
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.SetVisible(System.Boolean)
    parent: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
    commentId: M:Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.SetVisible(System.Boolean)
  Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.IsVisible:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.IsVisible
        name: IsVisible
        nameWithType: VirgisLayer<RecordSet, CSVData>.IsVisible
        qualifiedName: Virgis.VirgisLayer<RecordSet, Virgis.CSVData>.IsVisible
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.IsVisible
        name: IsVisible
        nameWithType: VirgisLayer(Of RecordSet, CSVData).IsVisible
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Virgis.CSVData).IsVisible
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.IsVisible
    parent: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
    commentId: M:Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.IsVisible
  Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.SetEditable(System.Boolean):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.SetEditable(System.Boolean)
        name: SetEditable
        nameWithType: VirgisLayer<RecordSet, CSVData>.SetEditable
        qualifiedName: Virgis.VirgisLayer<RecordSet, Virgis.CSVData>.SetEditable
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.SetEditable(System.Boolean)
        name: SetEditable
        nameWithType: VirgisLayer(Of RecordSet, CSVData).SetEditable
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Virgis.CSVData).SetEditable
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.SetEditable(System.Boolean)
    parent: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
    commentId: M:Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.SetEditable(System.Boolean)
  Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.IsEditable:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.IsEditable
        name: IsEditable
        nameWithType: VirgisLayer<RecordSet, CSVData>.IsEditable
        qualifiedName: Virgis.VirgisLayer<RecordSet, Virgis.CSVData>.IsEditable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.IsEditable
        name: IsEditable
        nameWithType: VirgisLayer(Of RecordSet, CSVData).IsEditable
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Virgis.CSVData).IsEditable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.IsEditable
    parent: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
    commentId: M:Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.IsEditable
  Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.Equals(System.Object):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Equals(System.Object)
        name: Equals
        nameWithType: VirgisLayer<RecordSet, CSVData>.Equals
        qualifiedName: Virgis.VirgisLayer<RecordSet, Virgis.CSVData>.Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Equals(System.Object)
        name: Equals
        nameWithType: VirgisLayer(Of RecordSet, CSVData).Equals
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Virgis.CSVData).Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Equals(System.Object)
    parent: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
    commentId: M:Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.Equals(System.Object)
  Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.GetHashCode:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetHashCode
        name: GetHashCode
        nameWithType: VirgisLayer<RecordSet, CSVData>.GetHashCode
        qualifiedName: Virgis.VirgisLayer<RecordSet, Virgis.CSVData>.GetHashCode
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetHashCode
        name: GetHashCode
        nameWithType: VirgisLayer(Of RecordSet, CSVData).GetHashCode
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Virgis.CSVData).GetHashCode
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetHashCode
    parent: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
    commentId: M:Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.GetHashCode
  Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.Equals(Virgis.VirgisLayer{RecordSet,Virgis.CSVData}):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
        name: Equals
        nameWithType: VirgisLayer<RecordSet, CSVData>.Equals
        qualifiedName: Virgis.VirgisLayer<RecordSet, Virgis.CSVData>.Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Virgis.CSVData
        name: CSVData
        nameWithType: CSVData
        qualifiedName: Virgis.CSVData
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
        name: Equals
        nameWithType: VirgisLayer(Of RecordSet, CSVData).Equals
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Virgis.CSVData).Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Virgis.CSVData
        name: CSVData
        nameWithType: CSVData
        qualifiedName: Virgis.CSVData
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
    parent: Virgis.VirgisLayer{RecordSet,Virgis.CSVData}
    commentId: M:Virgis.VirgisLayer{RecordSet,Virgis.CSVData}.Equals(Virgis.VirgisLayer{RecordSet,Virgis.CSVData})
  Virgis.DataPlotter._init*:
    name:
      CSharp:
      - id: Virgis.DataPlotter._init*
        name: _init
        nameWithType: DataPlotter._init
        qualifiedName: Virgis.DataPlotter._init
      VB:
      - id: Virgis.DataPlotter._init*
        name: _init
        nameWithType: DataPlotter._init
        qualifiedName: Virgis.DataPlotter._init
    isDefinition: true
    commentId: Overload:Virgis.DataPlotter._init
  Virgis.DataPlotter._checkpoint*:
    name:
      CSharp:
      - id: Virgis.DataPlotter._checkpoint*
        name: _checkpoint
        nameWithType: DataPlotter._checkpoint
        qualifiedName: Virgis.DataPlotter._checkpoint
      VB:
      - id: Virgis.DataPlotter._checkpoint*
        name: _checkpoint
        nameWithType: DataPlotter._checkpoint
        qualifiedName: Virgis.DataPlotter._checkpoint
    isDefinition: true
    commentId: Overload:Virgis.DataPlotter._checkpoint
  Virgis.DataPlotter._draw*:
    name:
      CSharp:
      - id: Virgis.DataPlotter._draw*
        name: _draw
        nameWithType: DataPlotter._draw
        qualifiedName: Virgis.DataPlotter._draw
      VB:
      - id: Virgis.DataPlotter._draw*
        name: _draw
        nameWithType: DataPlotter._draw
        qualifiedName: Virgis.DataPlotter._draw
    isDefinition: true
    commentId: Overload:Virgis.DataPlotter._draw
  Virgis.DataPlotter._addFeature*:
    name:
      CSharp:
      - id: Virgis.DataPlotter._addFeature*
        name: _addFeature
        nameWithType: DataPlotter._addFeature
        qualifiedName: Virgis.DataPlotter._addFeature
      VB:
      - id: Virgis.DataPlotter._addFeature*
        name: _addFeature
        nameWithType: DataPlotter._addFeature
        qualifiedName: Virgis.DataPlotter._addFeature
    isDefinition: true
    commentId: Overload:Virgis.DataPlotter._addFeature
  Virgis.DataPlotter._save*:
    name:
      CSharp:
      - id: Virgis.DataPlotter._save*
        name: _save
        nameWithType: DataPlotter._save
        qualifiedName: Virgis.DataPlotter._save
      VB:
      - id: Virgis.DataPlotter._save*
        name: _save
        nameWithType: DataPlotter._save
        qualifiedName: Virgis.DataPlotter._save
    isDefinition: true
    commentId: Overload:Virgis.DataPlotter._save
  Virgis.DataPlotter.MoveAxis*:
    name:
      CSharp:
      - id: Virgis.DataPlotter.MoveAxis*
        name: MoveAxis
        nameWithType: DataPlotter.MoveAxis
        qualifiedName: Virgis.DataPlotter.MoveAxis
      VB:
      - id: Virgis.DataPlotter.MoveAxis*
        name: MoveAxis
        nameWithType: DataPlotter.MoveAxis
        qualifiedName: Virgis.DataPlotter.MoveAxis
    isDefinition: true
    commentId: Overload:Virgis.DataPlotter.MoveAxis
  Virgis.DataPlotter.Translate*:
    name:
      CSharp:
      - id: Virgis.DataPlotter.Translate*
        name: Translate
        nameWithType: DataPlotter.Translate
        qualifiedName: Virgis.DataPlotter.Translate
      VB:
      - id: Virgis.DataPlotter.Translate*
        name: Translate
        nameWithType: DataPlotter.Translate
        qualifiedName: Virgis.DataPlotter.Translate
    isDefinition: true
    commentId: Overload:Virgis.DataPlotter.Translate
  Virgis.DataPlotter.GetFeatureShape*:
    name:
      CSharp:
      - id: Virgis.DataPlotter.GetFeatureShape*
        name: GetFeatureShape
        nameWithType: DataPlotter.GetFeatureShape
        qualifiedName: Virgis.DataPlotter.GetFeatureShape
      VB:
      - id: Virgis.DataPlotter.GetFeatureShape*
        name: GetFeatureShape
        nameWithType: DataPlotter.GetFeatureShape
        qualifiedName: Virgis.DataPlotter.GetFeatureShape
    isDefinition: true
    commentId: Overload:Virgis.DataPlotter.GetFeatureShape
  Virgis.DataPlotter:
    name:
      CSharp:
      - id: Virgis.DataPlotter
        name: DataPlotter
        nameWithType: DataPlotter
        qualifiedName: Virgis.DataPlotter
      VB:
      - id: Virgis.DataPlotter
        name: DataPlotter
        nameWithType: DataPlotter
        qualifiedName: Virgis.DataPlotter
    isDefinition: true
    commentId: T:Virgis.DataPlotter
  Virgis.VirgisFeature.mainMat:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.mainMat
        name: mainMat
        nameWithType: VirgisFeature.mainMat
        qualifiedName: Virgis.VirgisFeature.mainMat
      VB:
      - id: Virgis.VirgisFeature.mainMat
        name: mainMat
        nameWithType: VirgisFeature.mainMat
        qualifiedName: Virgis.VirgisFeature.mainMat
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: F:Virgis.VirgisFeature.mainMat
  Virgis.VirgisFeature.selectedMat:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.selectedMat
        name: selectedMat
        nameWithType: VirgisFeature.selectedMat
        qualifiedName: Virgis.VirgisFeature.selectedMat
      VB:
      - id: Virgis.VirgisFeature.selectedMat
        name: selectedMat
        nameWithType: VirgisFeature.selectedMat
        qualifiedName: Virgis.VirgisFeature.selectedMat
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: F:Virgis.VirgisFeature.selectedMat
  Virgis.VirgisFeature.gisId:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.gisId
        name: gisId
        nameWithType: VirgisFeature.gisId
        qualifiedName: Virgis.VirgisFeature.gisId
      VB:
      - id: Virgis.VirgisFeature.gisId
        name: gisId
        nameWithType: VirgisFeature.gisId
        qualifiedName: Virgis.VirgisFeature.gisId
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: F:Virgis.VirgisFeature.gisId
  Virgis.VirgisFeature.gisProperties:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.gisProperties
        name: gisProperties
        nameWithType: VirgisFeature.gisProperties
        qualifiedName: Virgis.VirgisFeature.gisProperties
      VB:
      - id: Virgis.VirgisFeature.gisProperties
        name: gisProperties
        nameWithType: VirgisFeature.gisProperties
        qualifiedName: Virgis.VirgisFeature.gisProperties
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: F:Virgis.VirgisFeature.gisProperties
  Virgis.VirgisFeature.label:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.label
        name: label
        nameWithType: VirgisFeature.label
        qualifiedName: Virgis.VirgisFeature.label
      VB:
      - id: Virgis.VirgisFeature.label
        name: label
        nameWithType: VirgisFeature.label
        qualifiedName: Virgis.VirgisFeature.label
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: F:Virgis.VirgisFeature.label
  Virgis.VirgisFeature.SetMaterial(Material,Material):
    name:
      CSharp:
      - id: Virgis.VirgisFeature.SetMaterial(Material,Material)
        name: SetMaterial
        nameWithType: VirgisFeature.SetMaterial
        qualifiedName: Virgis.VirgisFeature.SetMaterial
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.SetMaterial(Material,Material)
        name: SetMaterial
        nameWithType: VirgisFeature.SetMaterial
        qualifiedName: Virgis.VirgisFeature.SetMaterial
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.SetMaterial(Material,Material)
  Virgis.VirgisFeature.StartEditSession:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.StartEditSession
        name: StartEditSession
        nameWithType: VirgisFeature.StartEditSession
        qualifiedName: Virgis.VirgisFeature.StartEditSession
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.StartEditSession
        name: StartEditSession
        nameWithType: VirgisFeature.StartEditSession
        qualifiedName: Virgis.VirgisFeature.StartEditSession
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.StartEditSession
  Virgis.VirgisFeature.ExitEditSession(System.Boolean):
    name:
      CSharp:
      - id: Virgis.VirgisFeature.ExitEditSession(System.Boolean)
        name: ExitEditSession
        nameWithType: VirgisFeature.ExitEditSession
        qualifiedName: Virgis.VirgisFeature.ExitEditSession
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.ExitEditSession(System.Boolean)
        name: ExitEditSession
        nameWithType: VirgisFeature.ExitEditSession
        qualifiedName: Virgis.VirgisFeature.ExitEditSession
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.ExitEditSession(System.Boolean)
  Virgis.VirgisFeature.GetClosest(Vector3,Guid[]):
    name:
      CSharp:
      - id: Virgis.VirgisFeature.GetClosest(Vector3,Guid[])
        name: GetClosest
        nameWithType: VirgisFeature.GetClosest
        qualifiedName: Virgis.VirgisFeature.GetClosest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: Guid
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.GetClosest(Vector3,Guid[])
        name: GetClosest
        nameWithType: VirgisFeature.GetClosest
        qualifiedName: Virgis.VirgisFeature.GetClosest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: Guid
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.GetClosest(Vector3,Guid[])
  Virgis.VirgisFeature.GetGeometry``1:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.GetGeometry``1
        name: GetGeometry<T>
        nameWithType: VirgisFeature.GetGeometry<T>
        qualifiedName: Virgis.VirgisFeature.GetGeometry<T>
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.GetGeometry``1
        name: GetGeometry(Of T)
        nameWithType: VirgisFeature.GetGeometry(Of T)
        qualifiedName: Virgis.VirgisFeature.GetGeometry(Of T)
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.GetGeometry``1
  Virgis.VirgisFeature.GetId:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.GetId
        name: GetId
        nameWithType: VirgisFeature.GetId
        qualifiedName: Virgis.VirgisFeature.GetId
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.GetId
        name: GetId
        nameWithType: VirgisFeature.GetId
        qualifiedName: Virgis.VirgisFeature.GetId
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.GetId
  Virgis.VirgisFeature.GetMetadata:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.GetMetadata
        name: GetMetadata
        nameWithType: VirgisFeature.GetMetadata
        qualifiedName: Virgis.VirgisFeature.GetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.GetMetadata
        name: GetMetadata
        nameWithType: VirgisFeature.GetMetadata
        qualifiedName: Virgis.VirgisFeature.GetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.GetMetadata
  Virgis.VirgisFeature.Equals(System.Object):
    name:
      CSharp:
      - id: Virgis.VirgisFeature.Equals(System.Object)
        name: Equals
        nameWithType: VirgisFeature.Equals
        qualifiedName: Virgis.VirgisFeature.Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.Equals(System.Object)
        name: Equals
        nameWithType: VirgisFeature.Equals
        qualifiedName: Virgis.VirgisFeature.Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.Equals(System.Object)
  Virgis.VirgisFeature.GetHashCode:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.GetHashCode
        name: GetHashCode
        nameWithType: VirgisFeature.GetHashCode
        qualifiedName: Virgis.VirgisFeature.GetHashCode
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.GetHashCode
        name: GetHashCode
        nameWithType: VirgisFeature.GetHashCode
        qualifiedName: Virgis.VirgisFeature.GetHashCode
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.GetHashCode
  Virgis.VirgisFeature.Equals(Virgis.VirgisFeature):
    name:
      CSharp:
      - id: Virgis.VirgisFeature.Equals(Virgis.VirgisFeature)
        name: Equals
        nameWithType: VirgisFeature.Equals
        qualifiedName: Virgis.VirgisFeature.Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisFeature
        name: VirgisFeature
        nameWithType: VirgisFeature
        qualifiedName: Virgis.VirgisFeature
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.Equals(Virgis.VirgisFeature)
        name: Equals
        nameWithType: VirgisFeature.Equals
        qualifiedName: Virgis.VirgisFeature.Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisFeature
        name: VirgisFeature
        nameWithType: VirgisFeature
        qualifiedName: Virgis.VirgisFeature
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.Equals(Virgis.VirgisFeature)
  Virgis.IVirgisFeature:
    name:
      CSharp:
      - id: Virgis.IVirgisFeature
        name: IVirgisFeature
        nameWithType: IVirgisFeature
        qualifiedName: Virgis.IVirgisFeature
      VB:
      - id: Virgis.IVirgisFeature
        name: IVirgisFeature
        nameWithType: IVirgisFeature
        qualifiedName: Virgis.IVirgisFeature
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.IVirgisFeature
  List{Virgis.VertexLookup}:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Virgis.VertexLookup
        name: VertexLookup
        nameWithType: VertexLookup
        qualifiedName: Virgis.VertexLookup
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Virgis.VertexLookup
        name: VertexLookup
        nameWithType: VertexLookup
        qualifiedName: Virgis.VertexLookup
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: List`1
    commentId: '!:List{Virgis.VertexLookup}'
  List{Virgis.Dataline}:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Virgis.Dataline
        name: Dataline
        nameWithType: Dataline
        qualifiedName: Virgis.Dataline
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Virgis.Dataline
        name: Dataline
        nameWithType: Dataline
        qualifiedName: Virgis.Dataline
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: List`1
    commentId: '!:List{Virgis.Dataline}'
  Virgis.SelectionTypes:
    name:
      CSharp:
      - id: Virgis.SelectionTypes
        name: SelectionTypes
        nameWithType: SelectionTypes
        qualifiedName: Virgis.SelectionTypes
      VB:
      - id: Virgis.SelectionTypes
        name: SelectionTypes
        nameWithType: SelectionTypes
        qualifiedName: Virgis.SelectionTypes
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.SelectionTypes
  Virgis.VirgisFeature.Selected(Virgis.SelectionTypes):
    name:
      CSharp:
      - id: Virgis.VirgisFeature.Selected(Virgis.SelectionTypes)
        name: Selected
        nameWithType: VirgisFeature.Selected
        qualifiedName: Virgis.VirgisFeature.Selected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionTypes
        name: SelectionTypes
        nameWithType: SelectionTypes
        qualifiedName: Virgis.SelectionTypes
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.Selected(Virgis.SelectionTypes)
        name: Selected
        nameWithType: VirgisFeature.Selected
        qualifiedName: Virgis.VirgisFeature.Selected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionTypes
        name: SelectionTypes
        nameWithType: SelectionTypes
        qualifiedName: Virgis.SelectionTypes
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.Selected(Virgis.SelectionTypes)
  Virgis.Datapolygon.Selected*:
    name:
      CSharp:
      - id: Virgis.Datapolygon.Selected*
        name: Selected
        nameWithType: Datapolygon.Selected
        qualifiedName: Virgis.Datapolygon.Selected
      VB:
      - id: Virgis.Datapolygon.Selected*
        name: Selected
        nameWithType: Datapolygon.Selected
        qualifiedName: Virgis.Datapolygon.Selected
    isDefinition: true
    commentId: Overload:Virgis.Datapolygon.Selected
  Virgis.VirgisFeature.UnSelected(Virgis.SelectionTypes):
    name:
      CSharp:
      - id: Virgis.VirgisFeature.UnSelected(Virgis.SelectionTypes)
        name: UnSelected
        nameWithType: VirgisFeature.UnSelected
        qualifiedName: Virgis.VirgisFeature.UnSelected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionTypes
        name: SelectionTypes
        nameWithType: SelectionTypes
        qualifiedName: Virgis.SelectionTypes
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.UnSelected(Virgis.SelectionTypes)
        name: UnSelected
        nameWithType: VirgisFeature.UnSelected
        qualifiedName: Virgis.VirgisFeature.UnSelected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionTypes
        name: SelectionTypes
        nameWithType: SelectionTypes
        qualifiedName: Virgis.SelectionTypes
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.UnSelected(Virgis.SelectionTypes)
  Virgis.Datapolygon.UnSelected*:
    name:
      CSharp:
      - id: Virgis.Datapolygon.UnSelected*
        name: UnSelected
        nameWithType: Datapolygon.UnSelected
        qualifiedName: Virgis.Datapolygon.UnSelected
      VB:
      - id: Virgis.Datapolygon.UnSelected*
        name: UnSelected
        nameWithType: Datapolygon.UnSelected
        qualifiedName: Virgis.Datapolygon.UnSelected
    isDefinition: true
    commentId: Overload:Virgis.Datapolygon.UnSelected
  Virgis.VirgisFeature.VertexMove(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.VirgisFeature.VertexMove(Virgis.MoveArgs)
        name: VertexMove
        nameWithType: VirgisFeature.VertexMove
        qualifiedName: Virgis.VirgisFeature.VertexMove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.VertexMove(Virgis.MoveArgs)
        name: VertexMove
        nameWithType: VirgisFeature.VertexMove
        qualifiedName: Virgis.VirgisFeature.VertexMove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.VertexMove(Virgis.MoveArgs)
  Virgis.Datapolygon.VertexMove*:
    name:
      CSharp:
      - id: Virgis.Datapolygon.VertexMove*
        name: VertexMove
        nameWithType: Datapolygon.VertexMove
        qualifiedName: Virgis.Datapolygon.VertexMove
      VB:
      - id: Virgis.Datapolygon.VertexMove*
        name: VertexMove
        nameWithType: Datapolygon.VertexMove
        qualifiedName: Virgis.Datapolygon.VertexMove
    isDefinition: true
    commentId: Overload:Virgis.Datapolygon.VertexMove
  Virgis.VirgisFeature.Translate(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.VirgisFeature.Translate(Virgis.MoveArgs)
        name: Translate
        nameWithType: VirgisFeature.Translate
        qualifiedName: Virgis.VirgisFeature.Translate
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.Translate(Virgis.MoveArgs)
        name: Translate
        nameWithType: VirgisFeature.Translate
        qualifiedName: Virgis.VirgisFeature.Translate
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.Translate(Virgis.MoveArgs)
  Virgis.Datapolygon.Translate*:
    name:
      CSharp:
      - id: Virgis.Datapolygon.Translate*
        name: Translate
        nameWithType: Datapolygon.Translate
        qualifiedName: Virgis.Datapolygon.Translate
      VB:
      - id: Virgis.Datapolygon.Translate*
        name: Translate
        nameWithType: Datapolygon.Translate
        qualifiedName: Virgis.Datapolygon.Translate
    isDefinition: true
    commentId: Overload:Virgis.Datapolygon.Translate
  Virgis.VirgisFeature.MoveAxis(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.VirgisFeature.MoveAxis(Virgis.MoveArgs)
        name: MoveAxis
        nameWithType: VirgisFeature.MoveAxis
        qualifiedName: Virgis.VirgisFeature.MoveAxis
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.MoveAxis(Virgis.MoveArgs)
        name: MoveAxis
        nameWithType: VirgisFeature.MoveAxis
        qualifiedName: Virgis.VirgisFeature.MoveAxis
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.MoveAxis(Virgis.MoveArgs)
  Virgis.Datapolygon.MoveAxis*:
    name:
      CSharp:
      - id: Virgis.Datapolygon.MoveAxis*
        name: MoveAxis
        nameWithType: Datapolygon.MoveAxis
        qualifiedName: Virgis.Datapolygon.MoveAxis
      VB:
      - id: Virgis.Datapolygon.MoveAxis*
        name: MoveAxis
        nameWithType: Datapolygon.MoveAxis
        qualifiedName: Virgis.Datapolygon.MoveAxis
    isDefinition: true
    commentId: Overload:Virgis.Datapolygon.MoveAxis
  Virgis.VirgisFeature.MoveTo(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.VirgisFeature.MoveTo(Virgis.MoveArgs)
        name: MoveTo
        nameWithType: VirgisFeature.MoveTo
        qualifiedName: Virgis.VirgisFeature.MoveTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.MoveTo(Virgis.MoveArgs)
        name: MoveTo
        nameWithType: VirgisFeature.MoveTo
        qualifiedName: Virgis.VirgisFeature.MoveTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.MoveTo(Virgis.MoveArgs)
  Virgis.Datapolygon.MoveTo*:
    name:
      CSharp:
      - id: Virgis.Datapolygon.MoveTo*
        name: MoveTo
        nameWithType: Datapolygon.MoveTo
        qualifiedName: Virgis.Datapolygon.MoveTo
      VB:
      - id: Virgis.Datapolygon.MoveTo*
        name: MoveTo
        nameWithType: Datapolygon.MoveTo
        qualifiedName: Virgis.Datapolygon.MoveTo
    isDefinition: true
    commentId: Overload:Virgis.Datapolygon.MoveTo
  Virgis.Datapolygon.Draw*:
    name:
      CSharp:
      - id: Virgis.Datapolygon.Draw*
        name: Draw
        nameWithType: Datapolygon.Draw
        qualifiedName: Virgis.Datapolygon.Draw
      VB:
      - id: Virgis.Datapolygon.Draw*
        name: Draw
        nameWithType: Datapolygon.Draw
        qualifiedName: Virgis.Datapolygon.Draw
    isDefinition: true
    commentId: Overload:Virgis.Datapolygon.Draw
  Virgis.Datapolygon.ShapeMoveVertex*:
    name:
      CSharp:
      - id: Virgis.Datapolygon.ShapeMoveVertex*
        name: ShapeMoveVertex
        nameWithType: Datapolygon.ShapeMoveVertex
        qualifiedName: Virgis.Datapolygon.ShapeMoveVertex
      VB:
      - id: Virgis.Datapolygon.ShapeMoveVertex*
        name: ShapeMoveVertex
        nameWithType: Datapolygon.ShapeMoveVertex
        qualifiedName: Virgis.Datapolygon.ShapeMoveVertex
    isDefinition: true
    commentId: Overload:Virgis.Datapolygon.ShapeMoveVertex
  Virgis.VirgisFeature.AddVertex(Vector3):
    name:
      CSharp:
      - id: Virgis.VirgisFeature.AddVertex(Vector3)
        name: AddVertex
        nameWithType: VirgisFeature.AddVertex
        qualifiedName: Virgis.VirgisFeature.AddVertex
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.AddVertex(Vector3)
        name: AddVertex
        nameWithType: VirgisFeature.AddVertex
        qualifiedName: Virgis.VirgisFeature.AddVertex
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.AddVertex(Vector3)
  Virgis.Datapolygon.AddVertex*:
    name:
      CSharp:
      - id: Virgis.Datapolygon.AddVertex*
        name: AddVertex
        nameWithType: Datapolygon.AddVertex
        qualifiedName: Virgis.Datapolygon.AddVertex
      VB:
      - id: Virgis.Datapolygon.AddVertex*
        name: AddVertex
        nameWithType: Datapolygon.AddVertex
        qualifiedName: Virgis.Datapolygon.AddVertex
    isDefinition: true
    commentId: Overload:Virgis.Datapolygon.AddVertex
  Virgis.VirgisFeature.RemoveVertex(Virgis.VirgisFeature):
    name:
      CSharp:
      - id: Virgis.VirgisFeature.RemoveVertex(Virgis.VirgisFeature)
        name: RemoveVertex
        nameWithType: VirgisFeature.RemoveVertex
        qualifiedName: Virgis.VirgisFeature.RemoveVertex
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisFeature
        name: VirgisFeature
        nameWithType: VirgisFeature
        qualifiedName: Virgis.VirgisFeature
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.RemoveVertex(Virgis.VirgisFeature)
        name: RemoveVertex
        nameWithType: VirgisFeature.RemoveVertex
        qualifiedName: Virgis.VirgisFeature.RemoveVertex
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisFeature
        name: VirgisFeature
        nameWithType: VirgisFeature
        qualifiedName: Virgis.VirgisFeature
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.RemoveVertex(Virgis.VirgisFeature)
  Virgis.Datapolygon.RemoveVertex*:
    name:
      CSharp:
      - id: Virgis.Datapolygon.RemoveVertex*
        name: RemoveVertex
        nameWithType: Datapolygon.RemoveVertex
        qualifiedName: Virgis.Datapolygon.RemoveVertex
      VB:
      - id: Virgis.Datapolygon.RemoveVertex*
        name: RemoveVertex
        nameWithType: Datapolygon.RemoveVertex
        qualifiedName: Virgis.Datapolygon.RemoveVertex
    isDefinition: true
    commentId: Overload:Virgis.Datapolygon.RemoveVertex
  Virgis.Datapoint[]:
    name:
      CSharp:
      - id: Virgis.Datapoint
        name: Datapoint
        nameWithType: Datapoint
        qualifiedName: Virgis.Datapoint
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Virgis.Datapoint
        name: Datapoint
        nameWithType: Datapoint
        qualifiedName: Virgis.Datapoint
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Virgis.Datapolygon.GetVertexes*:
    name:
      CSharp:
      - id: Virgis.Datapolygon.GetVertexes*
        name: GetVertexes
        nameWithType: Datapolygon.GetVertexes
        qualifiedName: Virgis.Datapolygon.GetVertexes
      VB:
      - id: Virgis.Datapolygon.GetVertexes*
        name: GetVertexes
        nameWithType: Datapolygon.GetVertexes
        qualifiedName: Virgis.Datapolygon.GetVertexes
    isDefinition: true
    commentId: Overload:Virgis.Datapolygon.GetVertexes
  Virgis.Datapolygon:
    name:
      CSharp:
      - id: Virgis.Datapolygon
        name: Datapolygon
        nameWithType: Datapolygon
        qualifiedName: Virgis.Datapolygon
      VB:
      - id: Virgis.Datapolygon
        name: Datapolygon
        nameWithType: Datapolygon
        qualifiedName: Virgis.Datapolygon
    isDefinition: true
    commentId: T:Virgis.Datapolygon
  Virgis.Datapoint.Selected*:
    name:
      CSharp:
      - id: Virgis.Datapoint.Selected*
        name: Selected
        nameWithType: Datapoint.Selected
        qualifiedName: Virgis.Datapoint.Selected
      VB:
      - id: Virgis.Datapoint.Selected*
        name: Selected
        nameWithType: Datapoint.Selected
        qualifiedName: Virgis.Datapoint.Selected
    isDefinition: true
    commentId: Overload:Virgis.Datapoint.Selected
  Virgis.Datapoint.UnSelected*:
    name:
      CSharp:
      - id: Virgis.Datapoint.UnSelected*
        name: UnSelected
        nameWithType: Datapoint.UnSelected
        qualifiedName: Virgis.Datapoint.UnSelected
      VB:
      - id: Virgis.Datapoint.UnSelected*
        name: UnSelected
        nameWithType: Datapoint.UnSelected
        qualifiedName: Virgis.Datapoint.UnSelected
    isDefinition: true
    commentId: Overload:Virgis.Datapoint.UnSelected
  Virgis.Datapoint.SetMaterial*:
    name:
      CSharp:
      - id: Virgis.Datapoint.SetMaterial*
        name: SetMaterial
        nameWithType: Datapoint.SetMaterial
        qualifiedName: Virgis.Datapoint.SetMaterial
      VB:
      - id: Virgis.Datapoint.SetMaterial*
        name: SetMaterial
        nameWithType: Datapoint.SetMaterial
        qualifiedName: Virgis.Datapoint.SetMaterial
    isDefinition: true
    commentId: Overload:Virgis.Datapoint.SetMaterial
  Virgis.Datapoint.MoveTo*:
    name:
      CSharp:
      - id: Virgis.Datapoint.MoveTo*
        name: MoveTo
        nameWithType: Datapoint.MoveTo
        qualifiedName: Virgis.Datapoint.MoveTo
      VB:
      - id: Virgis.Datapoint.MoveTo*
        name: MoveTo
        nameWithType: Datapoint.MoveTo
        qualifiedName: Virgis.Datapoint.MoveTo
    isDefinition: true
    commentId: Overload:Virgis.Datapoint.MoveTo
  Virgis.Datapoint.MoveAxis*:
    name:
      CSharp:
      - id: Virgis.Datapoint.MoveAxis*
        name: MoveAxis
        nameWithType: Datapoint.MoveAxis
        qualifiedName: Virgis.Datapoint.MoveAxis
      VB:
      - id: Virgis.Datapoint.MoveAxis*
        name: MoveAxis
        nameWithType: Datapoint.MoveAxis
        qualifiedName: Virgis.Datapoint.MoveAxis
    isDefinition: true
    commentId: Overload:Virgis.Datapoint.MoveAxis
  Guid[]:
    name:
      CSharp:
      - id: Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: Guid
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: Guid
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Virgis.Datapoint.GetClosest*:
    name:
      CSharp:
      - id: Virgis.Datapoint.GetClosest*
        name: GetClosest
        nameWithType: Datapoint.GetClosest
        qualifiedName: Virgis.Datapoint.GetClosest
      VB:
      - id: Virgis.Datapoint.GetClosest*
        name: GetClosest
        nameWithType: Datapoint.GetClosest
        qualifiedName: Virgis.Datapoint.GetClosest
    isDefinition: true
    commentId: Overload:Virgis.Datapoint.GetClosest
  Virgis.Datapoint.Delete*:
    name:
      CSharp:
      - id: Virgis.Datapoint.Delete*
        name: Delete
        nameWithType: Datapoint.Delete
        qualifiedName: Virgis.Datapoint.Delete
      VB:
      - id: Virgis.Datapoint.Delete*
        name: Delete
        nameWithType: Datapoint.Delete
        qualifiedName: Virgis.Datapoint.Delete
    isDefinition: true
    commentId: Overload:Virgis.Datapoint.Delete
  T:
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: true
  '{T}':
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: false
    definition: T
    commentId: '!:T'
  Virgis.Datapoint.GetGeometry*:
    name:
      CSharp:
      - id: Virgis.Datapoint.GetGeometry*
        name: GetGeometry
        nameWithType: Datapoint.GetGeometry
        qualifiedName: Virgis.Datapoint.GetGeometry
      VB:
      - id: Virgis.Datapoint.GetGeometry*
        name: GetGeometry
        nameWithType: Datapoint.GetGeometry
        qualifiedName: Virgis.Datapoint.GetGeometry
    isDefinition: true
    commentId: Overload:Virgis.Datapoint.GetGeometry
  Virgis.Datapoint:
    name:
      CSharp:
      - id: Virgis.Datapoint
        name: Datapoint
        nameWithType: Datapoint
        qualifiedName: Virgis.Datapoint
      VB:
      - id: Virgis.Datapoint
        name: Datapoint
        nameWithType: Datapoint
        qualifiedName: Virgis.Datapoint
    isDefinition: true
    commentId: T:Virgis.Datapoint
  Virgis.LineSegment.Draw*:
    name:
      CSharp:
      - id: Virgis.LineSegment.Draw*
        name: Draw
        nameWithType: LineSegment.Draw
        qualifiedName: Virgis.LineSegment.Draw
      VB:
      - id: Virgis.LineSegment.Draw*
        name: Draw
        nameWithType: LineSegment.Draw
        qualifiedName: Virgis.LineSegment.Draw
    isDefinition: true
    commentId: Overload:Virgis.LineSegment.Draw
  Virgis.LineSegment.Selected*:
    name:
      CSharp:
      - id: Virgis.LineSegment.Selected*
        name: Selected
        nameWithType: LineSegment.Selected
        qualifiedName: Virgis.LineSegment.Selected
      VB:
      - id: Virgis.LineSegment.Selected*
        name: Selected
        nameWithType: LineSegment.Selected
        qualifiedName: Virgis.LineSegment.Selected
    isDefinition: true
    commentId: Overload:Virgis.LineSegment.Selected
  Virgis.LineSegment.UnSelected*:
    name:
      CSharp:
      - id: Virgis.LineSegment.UnSelected*
        name: UnSelected
        nameWithType: LineSegment.UnSelected
        qualifiedName: Virgis.LineSegment.UnSelected
      VB:
      - id: Virgis.LineSegment.UnSelected*
        name: UnSelected
        nameWithType: LineSegment.UnSelected
        qualifiedName: Virgis.LineSegment.UnSelected
    isDefinition: true
    commentId: Overload:Virgis.LineSegment.UnSelected
  Virgis.LineSegment.SetMaterial*:
    name:
      CSharp:
      - id: Virgis.LineSegment.SetMaterial*
        name: SetMaterial
        nameWithType: LineSegment.SetMaterial
        qualifiedName: Virgis.LineSegment.SetMaterial
      VB:
      - id: Virgis.LineSegment.SetMaterial*
        name: SetMaterial
        nameWithType: LineSegment.SetMaterial
        qualifiedName: Virgis.LineSegment.SetMaterial
    isDefinition: true
    commentId: Overload:Virgis.LineSegment.SetMaterial
  Virgis.LineSegment.MoveStart*:
    name:
      CSharp:
      - id: Virgis.LineSegment.MoveStart*
        name: MoveStart
        nameWithType: LineSegment.MoveStart
        qualifiedName: Virgis.LineSegment.MoveStart
      VB:
      - id: Virgis.LineSegment.MoveStart*
        name: MoveStart
        nameWithType: LineSegment.MoveStart
        qualifiedName: Virgis.LineSegment.MoveStart
    isDefinition: true
    commentId: Overload:Virgis.LineSegment.MoveStart
  Virgis.LineSegment.MoveEnd*:
    name:
      CSharp:
      - id: Virgis.LineSegment.MoveEnd*
        name: MoveEnd
        nameWithType: LineSegment.MoveEnd
        qualifiedName: Virgis.LineSegment.MoveEnd
      VB:
      - id: Virgis.LineSegment.MoveEnd*
        name: MoveEnd
        nameWithType: LineSegment.MoveEnd
        qualifiedName: Virgis.LineSegment.MoveEnd
    isDefinition: true
    commentId: Overload:Virgis.LineSegment.MoveEnd
  Virgis.LineSegment.MoveAxis*:
    name:
      CSharp:
      - id: Virgis.LineSegment.MoveAxis*
        name: MoveAxis
        nameWithType: LineSegment.MoveAxis
        qualifiedName: Virgis.LineSegment.MoveAxis
      VB:
      - id: Virgis.LineSegment.MoveAxis*
        name: MoveAxis
        nameWithType: LineSegment.MoveAxis
        qualifiedName: Virgis.LineSegment.MoveAxis
    isDefinition: true
    commentId: Overload:Virgis.LineSegment.MoveAxis
  Virgis.LineSegment.MoveTo*:
    name:
      CSharp:
      - id: Virgis.LineSegment.MoveTo*
        name: MoveTo
        nameWithType: LineSegment.MoveTo
        qualifiedName: Virgis.LineSegment.MoveTo
      VB:
      - id: Virgis.LineSegment.MoveTo*
        name: MoveTo
        nameWithType: LineSegment.MoveTo
        qualifiedName: Virgis.LineSegment.MoveTo
    isDefinition: true
    commentId: Overload:Virgis.LineSegment.MoveTo
  Virgis.LineSegment.AddVertex*:
    name:
      CSharp:
      - id: Virgis.LineSegment.AddVertex*
        name: AddVertex
        nameWithType: LineSegment.AddVertex
        qualifiedName: Virgis.LineSegment.AddVertex
      VB:
      - id: Virgis.LineSegment.AddVertex*
        name: AddVertex
        nameWithType: LineSegment.AddVertex
        qualifiedName: Virgis.LineSegment.AddVertex
    isDefinition: true
    commentId: Overload:Virgis.LineSegment.AddVertex
  Virgis.LineSegment.Delete*:
    name:
      CSharp:
      - id: Virgis.LineSegment.Delete*
        name: Delete
        nameWithType: LineSegment.Delete
        qualifiedName: Virgis.LineSegment.Delete
      VB:
      - id: Virgis.LineSegment.Delete*
        name: Delete
        nameWithType: LineSegment.Delete
        qualifiedName: Virgis.LineSegment.Delete
    isDefinition: true
    commentId: Overload:Virgis.LineSegment.Delete
  Virgis.LineSegment:
    name:
      CSharp:
      - id: Virgis.LineSegment
        name: LineSegment
        nameWithType: LineSegment
        qualifiedName: Virgis.LineSegment
      VB:
      - id: Virgis.LineSegment
        name: LineSegment
        nameWithType: LineSegment
        qualifiedName: Virgis.LineSegment
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.LineSegment
  Virgis.Dataline.VertexMove*:
    name:
      CSharp:
      - id: Virgis.Dataline.VertexMove*
        name: VertexMove
        nameWithType: Dataline.VertexMove
        qualifiedName: Virgis.Dataline.VertexMove
      VB:
      - id: Virgis.Dataline.VertexMove*
        name: VertexMove
        nameWithType: Dataline.VertexMove
        qualifiedName: Virgis.Dataline.VertexMove
    isDefinition: true
    commentId: Overload:Virgis.Dataline.VertexMove
  Virgis.Dataline.MoveAxis*:
    name:
      CSharp:
      - id: Virgis.Dataline.MoveAxis*
        name: MoveAxis
        nameWithType: Dataline.MoveAxis
        qualifiedName: Virgis.Dataline.MoveAxis
      VB:
      - id: Virgis.Dataline.MoveAxis*
        name: MoveAxis
        nameWithType: Dataline.MoveAxis
        qualifiedName: Virgis.Dataline.MoveAxis
    isDefinition: true
    commentId: Overload:Virgis.Dataline.MoveAxis
  Dictionary{System.String,Unit}:
    name:
      CSharp:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Unit
        name: Unit
        nameWithType: Unit
        qualifiedName: Unit
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Unit
        name: Unit
        nameWithType: Unit
        qualifiedName: Unit
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Dictionary`2
    commentId: '!:Dictionary{System.String,Unit}'
  Virgis.Dataline.Draw*:
    name:
      CSharp:
      - id: Virgis.Dataline.Draw*
        name: Draw
        nameWithType: Dataline.Draw
        qualifiedName: Virgis.Dataline.Draw
      VB:
      - id: Virgis.Dataline.Draw*
        name: Draw
        nameWithType: Dataline.Draw
        qualifiedName: Virgis.Dataline.Draw
    isDefinition: true
    commentId: Overload:Virgis.Dataline.Draw
  Virgis.Dataline.MakeLinearRing*:
    name:
      CSharp:
      - id: Virgis.Dataline.MakeLinearRing*
        name: MakeLinearRing
        nameWithType: Dataline.MakeLinearRing
        qualifiedName: Virgis.Dataline.MakeLinearRing
      VB:
      - id: Virgis.Dataline.MakeLinearRing*
        name: MakeLinearRing
        nameWithType: Dataline.MakeLinearRing
        qualifiedName: Virgis.Dataline.MakeLinearRing
    isDefinition: true
    commentId: Overload:Virgis.Dataline.MakeLinearRing
  Virgis.Dataline.GetVertexPositions*:
    name:
      CSharp:
      - id: Virgis.Dataline.GetVertexPositions*
        name: GetVertexPositions
        nameWithType: Dataline.GetVertexPositions
        qualifiedName: Virgis.Dataline.GetVertexPositions
      VB:
      - id: Virgis.Dataline.GetVertexPositions*
        name: GetVertexPositions
        nameWithType: Dataline.GetVertexPositions
        qualifiedName: Virgis.Dataline.GetVertexPositions
    isDefinition: true
    commentId: Overload:Virgis.Dataline.GetVertexPositions
  Virgis.Dataline.GetVertexes*:
    name:
      CSharp:
      - id: Virgis.Dataline.GetVertexes*
        name: GetVertexes
        nameWithType: Dataline.GetVertexes
        qualifiedName: Virgis.Dataline.GetVertexes
      VB:
      - id: Virgis.Dataline.GetVertexes*
        name: GetVertexes
        nameWithType: Dataline.GetVertexes
        qualifiedName: Virgis.Dataline.GetVertexes
    isDefinition: true
    commentId: Overload:Virgis.Dataline.GetVertexes
  Virgis.Dataline.Selected*:
    name:
      CSharp:
      - id: Virgis.Dataline.Selected*
        name: Selected
        nameWithType: Dataline.Selected
        qualifiedName: Virgis.Dataline.Selected
      VB:
      - id: Virgis.Dataline.Selected*
        name: Selected
        nameWithType: Dataline.Selected
        qualifiedName: Virgis.Dataline.Selected
    isDefinition: true
    commentId: Overload:Virgis.Dataline.Selected
  Virgis.Dataline.UnSelected*:
    name:
      CSharp:
      - id: Virgis.Dataline.UnSelected*
        name: UnSelected
        nameWithType: Dataline.UnSelected
        qualifiedName: Virgis.Dataline.UnSelected
      VB:
      - id: Virgis.Dataline.UnSelected*
        name: UnSelected
        nameWithType: Dataline.UnSelected
        qualifiedName: Virgis.Dataline.UnSelected
    isDefinition: true
    commentId: Overload:Virgis.Dataline.UnSelected
  Virgis.Dataline.Translate*:
    name:
      CSharp:
      - id: Virgis.Dataline.Translate*
        name: Translate
        nameWithType: Dataline.Translate
        qualifiedName: Virgis.Dataline.Translate
      VB:
      - id: Virgis.Dataline.Translate*
        name: Translate
        nameWithType: Dataline.Translate
        qualifiedName: Virgis.Dataline.Translate
    isDefinition: true
    commentId: Overload:Virgis.Dataline.Translate
  Virgis.Dataline.GetWkt*:
    name:
      CSharp:
      - id: Virgis.Dataline.GetWkt*
        name: GetWkt
        nameWithType: Dataline.GetWkt
        qualifiedName: Virgis.Dataline.GetWkt
      VB:
      - id: Virgis.Dataline.GetWkt*
        name: GetWkt
        nameWithType: Dataline.GetWkt
        qualifiedName: Virgis.Dataline.GetWkt
    isDefinition: true
    commentId: Overload:Virgis.Dataline.GetWkt
  Virgis.Dataline.GetWktCoords*:
    name:
      CSharp:
      - id: Virgis.Dataline.GetWktCoords*
        name: GetWktCoords
        nameWithType: Dataline.GetWktCoords
        qualifiedName: Virgis.Dataline.GetWktCoords
      VB:
      - id: Virgis.Dataline.GetWktCoords*
        name: GetWktCoords
        nameWithType: Dataline.GetWktCoords
        qualifiedName: Virgis.Dataline.GetWktCoords
    isDefinition: true
    commentId: Overload:Virgis.Dataline.GetWktCoords
  Virgis.Dataline.MoveTo*:
    name:
      CSharp:
      - id: Virgis.Dataline.MoveTo*
        name: MoveTo
        nameWithType: Dataline.MoveTo
        qualifiedName: Virgis.Dataline.MoveTo
      VB:
      - id: Virgis.Dataline.MoveTo*
        name: MoveTo
        nameWithType: Dataline.MoveTo
        qualifiedName: Virgis.Dataline.MoveTo
    isDefinition: true
    commentId: Overload:Virgis.Dataline.MoveTo
  Virgis.Dataline.AddVertex*:
    name:
      CSharp:
      - id: Virgis.Dataline.AddVertex*
        name: AddVertex
        nameWithType: Dataline.AddVertex
        qualifiedName: Virgis.Dataline.AddVertex
      VB:
      - id: Virgis.Dataline.AddVertex*
        name: AddVertex
        nameWithType: Dataline.AddVertex
        qualifiedName: Virgis.Dataline.AddVertex
    isDefinition: true
    commentId: Overload:Virgis.Dataline.AddVertex
  Virgis.Dataline.RemoveVertex*:
    name:
      CSharp:
      - id: Virgis.Dataline.RemoveVertex*
        name: RemoveVertex
        nameWithType: Dataline.RemoveVertex
        qualifiedName: Virgis.Dataline.RemoveVertex
      VB:
      - id: Virgis.Dataline.RemoveVertex*
        name: RemoveVertex
        nameWithType: Dataline.RemoveVertex
        qualifiedName: Virgis.Dataline.RemoveVertex
    isDefinition: true
    commentId: Overload:Virgis.Dataline.RemoveVertex
  Virgis.Dataline:
    name:
      CSharp:
      - id: Virgis.Dataline
        name: Dataline
        nameWithType: Dataline
        qualifiedName: Virgis.Dataline
      VB:
      - id: Virgis.Dataline
        name: Dataline
        nameWithType: Dataline
        qualifiedName: Virgis.Dataline
    isDefinition: true
    commentId: T:Virgis.Dataline
  System.ValueType:
    name:
      CSharp:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
      VB:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.ValueType
  System.ValueType.Equals(System.Object):
    name:
      CSharp:
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        nameWithType: ValueType.Equals
        qualifiedName: System.ValueType.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        nameWithType: ValueType.Equals
        qualifiedName: System.ValueType.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.Equals(System.Object)
  System.ValueType.GetHashCode:
    name:
      CSharp:
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        nameWithType: ValueType.GetHashCode
        qualifiedName: System.ValueType.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        nameWithType: ValueType.GetHashCode
        qualifiedName: System.ValueType.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.GetHashCode
  System.ValueType.ToString:
    name:
      CSharp:
      - id: System.ValueType.ToString
        name: ToString
        nameWithType: ValueType.ToString
        qualifiedName: System.ValueType.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.ToString
        name: ToString
        nameWithType: ValueType.ToString
        qualifiedName: System.ValueType.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.ToString
  Guid:
    name:
      CSharp:
      - id: Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: Guid
        isExternal: true
      VB:
      - id: Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: Guid
        isExternal: true
    isDefinition: true
  Quaternion:
    name:
      CSharp:
      - id: Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: Quaternion
        isExternal: true
      VB:
      - id: Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: Quaternion
        isExternal: true
    isDefinition: true
  LayerMask:
    name:
      CSharp:
      - id: LayerMask
        name: LayerMask
        nameWithType: LayerMask
        qualifiedName: LayerMask
        isExternal: true
      VB:
      - id: LayerMask
        name: LayerMask
        nameWithType: LayerMask
        qualifiedName: LayerMask
        isExternal: true
    isDefinition: true
  Virgis.UnityLayers.POINT*:
    name:
      CSharp:
      - id: Virgis.UnityLayers.POINT*
        name: POINT
        nameWithType: UnityLayers.POINT
        qualifiedName: Virgis.UnityLayers.POINT
      VB:
      - id: Virgis.UnityLayers.POINT*
        name: POINT
        nameWithType: UnityLayers.POINT
        qualifiedName: Virgis.UnityLayers.POINT
    isDefinition: true
    commentId: Overload:Virgis.UnityLayers.POINT
  Virgis.UnityLayers.LINE*:
    name:
      CSharp:
      - id: Virgis.UnityLayers.LINE*
        name: LINE
        nameWithType: UnityLayers.LINE
        qualifiedName: Virgis.UnityLayers.LINE
      VB:
      - id: Virgis.UnityLayers.LINE*
        name: LINE
        nameWithType: UnityLayers.LINE
        qualifiedName: Virgis.UnityLayers.LINE
    isDefinition: true
    commentId: Overload:Virgis.UnityLayers.LINE
  Virgis.UnityLayers.SHAPE*:
    name:
      CSharp:
      - id: Virgis.UnityLayers.SHAPE*
        name: SHAPE
        nameWithType: UnityLayers.SHAPE
        qualifiedName: Virgis.UnityLayers.SHAPE
      VB:
      - id: Virgis.UnityLayers.SHAPE*
        name: SHAPE
        nameWithType: UnityLayers.SHAPE
        qualifiedName: Virgis.UnityLayers.SHAPE
    isDefinition: true
    commentId: Overload:Virgis.UnityLayers.SHAPE
  Virgis.UnityLayers.MESH*:
    name:
      CSharp:
      - id: Virgis.UnityLayers.MESH*
        name: MESH
        nameWithType: UnityLayers.MESH
        qualifiedName: Virgis.UnityLayers.MESH
      VB:
      - id: Virgis.UnityLayers.MESH*
        name: MESH
        nameWithType: UnityLayers.MESH
        qualifiedName: Virgis.UnityLayers.MESH
    isDefinition: true
    commentId: Overload:Virgis.UnityLayers.MESH
  Virgis.UnityLayers:
    name:
      CSharp:
      - id: Virgis.UnityLayers
        name: UnityLayers
        nameWithType: UnityLayers
        qualifiedName: Virgis.UnityLayers
      VB:
      - id: Virgis.UnityLayers
        name: UnityLayers
        nameWithType: UnityLayers
        qualifiedName: Virgis.UnityLayers
    isDefinition: true
    commentId: T:Virgis.UnityLayers
  IPosition:
    name:
      CSharp:
      - id: IPosition
        name: IPosition
        nameWithType: IPosition
        qualifiedName: IPosition
        isExternal: true
      VB:
      - id: IPosition
        name: IPosition
        nameWithType: IPosition
        qualifiedName: IPosition
        isExternal: true
    isDefinition: true
  Virgis.Vector3ExtensionMethods.ToPosition*:
    name:
      CSharp:
      - id: Virgis.Vector3ExtensionMethods.ToPosition*
        name: ToPosition
        nameWithType: Vector3ExtensionMethods.ToPosition
        qualifiedName: Virgis.Vector3ExtensionMethods.ToPosition
      VB:
      - id: Virgis.Vector3ExtensionMethods.ToPosition*
        name: ToPosition
        nameWithType: Vector3ExtensionMethods.ToPosition
        qualifiedName: Virgis.Vector3ExtensionMethods.ToPosition
    isDefinition: true
    commentId: Overload:Virgis.Vector3ExtensionMethods.ToPosition
  Point:
    name:
      CSharp:
      - id: Point
        name: Point
        nameWithType: Point
        qualifiedName: Point
        isExternal: true
      VB:
      - id: Point
        name: Point
        nameWithType: Point
        qualifiedName: Point
        isExternal: true
    isDefinition: true
  Virgis.Vector3ExtensionMethods.ToPoint*:
    name:
      CSharp:
      - id: Virgis.Vector3ExtensionMethods.ToPoint*
        name: ToPoint
        nameWithType: Vector3ExtensionMethods.ToPoint
        qualifiedName: Virgis.Vector3ExtensionMethods.ToPoint
      VB:
      - id: Virgis.Vector3ExtensionMethods.ToPoint*
        name: ToPoint
        nameWithType: Vector3ExtensionMethods.ToPoint
        qualifiedName: Virgis.Vector3ExtensionMethods.ToPoint
    isDefinition: true
    commentId: Overload:Virgis.Vector3ExtensionMethods.ToPoint
  Virgis.Vector3ExtensionMethods:
    name:
      CSharp:
      - id: Virgis.Vector3ExtensionMethods
        name: Vector3ExtensionMethods
        nameWithType: Vector3ExtensionMethods
        qualifiedName: Virgis.Vector3ExtensionMethods
      VB:
      - id: Virgis.Vector3ExtensionMethods
        name: Vector3ExtensionMethods
        nameWithType: Vector3ExtensionMethods
        qualifiedName: Virgis.Vector3ExtensionMethods
    isDefinition: true
    commentId: T:Virgis.Vector3ExtensionMethods
  Mapbox.Utils.Vector2d:
    name:
      CSharp:
      - id: Mapbox.Utils.Vector2d
        name: Mapbox.Utils.Vector2d
        nameWithType: Mapbox.Utils.Vector2d
        qualifiedName: Mapbox.Utils.Vector2d
        isExternal: true
      VB:
      - id: Mapbox.Utils.Vector2d
        name: Mapbox.Utils.Vector2d
        nameWithType: Mapbox.Utils.Vector2d
        qualifiedName: Mapbox.Utils.Vector2d
        isExternal: true
    isDefinition: true
    commentId: '!:Mapbox.Utils.Vector2d'
  Virgis.PositionExtensionMethods.Vector2d*:
    name:
      CSharp:
      - id: Virgis.PositionExtensionMethods.Vector2d*
        name: Vector2d
        nameWithType: PositionExtensionMethods.Vector2d
        qualifiedName: Virgis.PositionExtensionMethods.Vector2d
      VB:
      - id: Virgis.PositionExtensionMethods.Vector2d*
        name: Vector2d
        nameWithType: PositionExtensionMethods.Vector2d
        qualifiedName: Virgis.PositionExtensionMethods.Vector2d
    isDefinition: true
    commentId: Overload:Virgis.PositionExtensionMethods.Vector2d
  Virgis.PositionExtensionMethods.Vector2*:
    name:
      CSharp:
      - id: Virgis.PositionExtensionMethods.Vector2*
        name: Vector2
        nameWithType: PositionExtensionMethods.Vector2
        qualifiedName: Virgis.PositionExtensionMethods.Vector2
      VB:
      - id: Virgis.PositionExtensionMethods.Vector2*
        name: Vector2
        nameWithType: PositionExtensionMethods.Vector2
        qualifiedName: Virgis.PositionExtensionMethods.Vector2
    isDefinition: true
    commentId: Overload:Virgis.PositionExtensionMethods.Vector2
  Position:
    name:
      CSharp:
      - id: Position
        name: Position
        nameWithType: Position
        qualifiedName: Position
        isExternal: true
      VB:
      - id: Position
        name: Position
        nameWithType: Position
        qualifiedName: Position
        isExternal: true
    isDefinition: true
  Virgis.PositionExtensionMethods.Point*:
    name:
      CSharp:
      - id: Virgis.PositionExtensionMethods.Point*
        name: Point
        nameWithType: PositionExtensionMethods.Point
        qualifiedName: Virgis.PositionExtensionMethods.Point
      VB:
      - id: Virgis.PositionExtensionMethods.Point*
        name: Point
        nameWithType: PositionExtensionMethods.Point
        qualifiedName: Virgis.PositionExtensionMethods.Point
    isDefinition: true
    commentId: Overload:Virgis.PositionExtensionMethods.Point
  Virgis.PositionExtensionMethods.Vector3*:
    name:
      CSharp:
      - id: Virgis.PositionExtensionMethods.Vector3*
        name: Vector3
        nameWithType: PositionExtensionMethods.Vector3
        qualifiedName: Virgis.PositionExtensionMethods.Vector3
      VB:
      - id: Virgis.PositionExtensionMethods.Vector3*
        name: Vector3
        nameWithType: PositionExtensionMethods.Vector3
        qualifiedName: Virgis.PositionExtensionMethods.Vector3
    isDefinition: true
    commentId: Overload:Virgis.PositionExtensionMethods.Vector3
  Virgis.PositionExtensionMethods:
    name:
      CSharp:
      - id: Virgis.PositionExtensionMethods
        name: PositionExtensionMethods
        nameWithType: PositionExtensionMethods
        qualifiedName: Virgis.PositionExtensionMethods
      VB:
      - id: Virgis.PositionExtensionMethods
        name: PositionExtensionMethods
        nameWithType: PositionExtensionMethods
        qualifiedName: Virgis.PositionExtensionMethods
    isDefinition: true
    commentId: T:Virgis.PositionExtensionMethods
  LineString:
    name:
      CSharp:
      - id: LineString
        name: LineString
        nameWithType: LineString
        qualifiedName: LineString
        isExternal: true
      VB:
      - id: LineString
        name: LineString
        nameWithType: LineString
        qualifiedName: LineString
        isExternal: true
    isDefinition: true
  Virgis.LineExtensionMethods.Point*:
    name:
      CSharp:
      - id: Virgis.LineExtensionMethods.Point*
        name: Point
        nameWithType: LineExtensionMethods.Point
        qualifiedName: Virgis.LineExtensionMethods.Point
      VB:
      - id: Virgis.LineExtensionMethods.Point*
        name: Point
        nameWithType: LineExtensionMethods.Point
        qualifiedName: Virgis.LineExtensionMethods.Point
    isDefinition: true
    commentId: Overload:Virgis.LineExtensionMethods.Point
  Position[]:
    name:
      CSharp:
      - id: Position
        name: Position
        nameWithType: Position
        qualifiedName: Position
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Position
        name: Position
        nameWithType: Position
        qualifiedName: Position
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Virgis.LineExtensionMethods.Points*:
    name:
      CSharp:
      - id: Virgis.LineExtensionMethods.Points*
        name: Points
        nameWithType: LineExtensionMethods.Points
        qualifiedName: Virgis.LineExtensionMethods.Points
      VB:
      - id: Virgis.LineExtensionMethods.Points*
        name: Points
        nameWithType: LineExtensionMethods.Points
        qualifiedName: Virgis.LineExtensionMethods.Points
    isDefinition: true
    commentId: Overload:Virgis.LineExtensionMethods.Points
  Virgis.LineExtensionMethods.Vector3*:
    name:
      CSharp:
      - id: Virgis.LineExtensionMethods.Vector3*
        name: Vector3
        nameWithType: LineExtensionMethods.Vector3
        qualifiedName: Virgis.LineExtensionMethods.Vector3
      VB:
      - id: Virgis.LineExtensionMethods.Vector3*
        name: Vector3
        nameWithType: LineExtensionMethods.Vector3
        qualifiedName: Virgis.LineExtensionMethods.Vector3
    isDefinition: true
    commentId: Overload:Virgis.LineExtensionMethods.Vector3
  Virgis.LineExtensionMethods:
    name:
      CSharp:
      - id: Virgis.LineExtensionMethods
        name: LineExtensionMethods
        nameWithType: LineExtensionMethods
        qualifiedName: Virgis.LineExtensionMethods
      VB:
      - id: Virgis.LineExtensionMethods
        name: LineExtensionMethods
        nameWithType: LineExtensionMethods
        qualifiedName: Virgis.LineExtensionMethods
    isDefinition: true
    commentId: T:Virgis.LineExtensionMethods
  g3.DCurve3:
    name:
      CSharp:
      - id: g3.DCurve3
        name: g3.DCurve3
        nameWithType: g3.DCurve3
        qualifiedName: g3.DCurve3
        isExternal: true
      VB:
      - id: g3.DCurve3
        name: g3.DCurve3
        nameWithType: g3.DCurve3
        qualifiedName: g3.DCurve3
        isExternal: true
    isDefinition: true
    commentId: '!:g3.DCurve3'
  Virgis.DcurveExtensions.Vector3*:
    name:
      CSharp:
      - id: Virgis.DcurveExtensions.Vector3*
        name: Vector3
        nameWithType: DcurveExtensions.Vector3
        qualifiedName: Virgis.DcurveExtensions.Vector3
      VB:
      - id: Virgis.DcurveExtensions.Vector3*
        name: Vector3
        nameWithType: DcurveExtensions.Vector3
        qualifiedName: Virgis.DcurveExtensions.Vector3
    isDefinition: true
    commentId: Overload:Virgis.DcurveExtensions.Vector3
  Vector3d:
    name:
      CSharp:
      - id: Vector3d
        name: Vector3d
        nameWithType: Vector3d
        qualifiedName: Vector3d
        isExternal: true
      VB:
      - id: Vector3d
        name: Vector3d
        nameWithType: Vector3d
        qualifiedName: Vector3d
        isExternal: true
    isDefinition: true
  DCurve3:
    name:
      CSharp:
      - id: DCurve3
        name: DCurve3
        nameWithType: DCurve3
        qualifiedName: DCurve3
        isExternal: true
      VB:
      - id: DCurve3
        name: DCurve3
        nameWithType: DCurve3
        qualifiedName: DCurve3
        isExternal: true
    isDefinition: true
  Virgis.DcurveExtensions.Center*:
    name:
      CSharp:
      - id: Virgis.DcurveExtensions.Center*
        name: Center
        nameWithType: DcurveExtensions.Center
        qualifiedName: Virgis.DcurveExtensions.Center
      VB:
      - id: Virgis.DcurveExtensions.Center*
        name: Center
        nameWithType: DcurveExtensions.Center
        qualifiedName: Virgis.DcurveExtensions.Center
    isDefinition: true
    commentId: Overload:Virgis.DcurveExtensions.Center
  Virgis.DcurveExtensions.CenterMark*:
    name:
      CSharp:
      - id: Virgis.DcurveExtensions.CenterMark*
        name: CenterMark
        nameWithType: DcurveExtensions.CenterMark
        qualifiedName: Virgis.DcurveExtensions.CenterMark
      VB:
      - id: Virgis.DcurveExtensions.CenterMark*
        name: CenterMark
        nameWithType: DcurveExtensions.CenterMark
        qualifiedName: Virgis.DcurveExtensions.CenterMark
    isDefinition: true
    commentId: Overload:Virgis.DcurveExtensions.CenterMark
  Virgis.DcurveExtensions.NearestSegment*:
    name:
      CSharp:
      - id: Virgis.DcurveExtensions.NearestSegment*
        name: NearestSegment
        nameWithType: DcurveExtensions.NearestSegment
        qualifiedName: Virgis.DcurveExtensions.NearestSegment
      VB:
      - id: Virgis.DcurveExtensions.NearestSegment*
        name: NearestSegment
        nameWithType: DcurveExtensions.NearestSegment
        qualifiedName: Virgis.DcurveExtensions.NearestSegment
    isDefinition: true
    commentId: Overload:Virgis.DcurveExtensions.NearestSegment
  Virgis.DcurveExtensions:
    name:
      CSharp:
      - id: Virgis.DcurveExtensions
        name: DcurveExtensions
        nameWithType: DcurveExtensions
        qualifiedName: Virgis.DcurveExtensions
      VB:
      - id: Virgis.DcurveExtensions
        name: DcurveExtensions
        nameWithType: DcurveExtensions
        qualifiedName: Virgis.DcurveExtensions
    isDefinition: true
    commentId: T:Virgis.DcurveExtensions
  GeneralPolygon2d:
    name:
      CSharp:
      - id: GeneralPolygon2d
        name: GeneralPolygon2d
        nameWithType: GeneralPolygon2d
        qualifiedName: GeneralPolygon2d
        isExternal: true
      VB:
      - id: GeneralPolygon2d
        name: GeneralPolygon2d
        nameWithType: GeneralPolygon2d
        qualifiedName: GeneralPolygon2d
        isExternal: true
    isDefinition: true
    commentId: '!:GeneralPolygon2d'
  Frame3f:
    name:
      CSharp:
      - id: Frame3f
        name: Frame3f
        nameWithType: Frame3f
        qualifiedName: Frame3f
        isExternal: true
      VB:
      - id: Frame3f
        name: Frame3f
        nameWithType: Frame3f
        qualifiedName: Frame3f
        isExternal: true
    isDefinition: true
    commentId: '!:Frame3f'
  Virgis.PolygonExtensions.ToPolygon*:
    name:
      CSharp:
      - id: Virgis.PolygonExtensions.ToPolygon*
        name: ToPolygon
        nameWithType: PolygonExtensions.ToPolygon
        qualifiedName: Virgis.PolygonExtensions.ToPolygon
      VB:
      - id: Virgis.PolygonExtensions.ToPolygon*
        name: ToPolygon
        nameWithType: PolygonExtensions.ToPolygon
        qualifiedName: Virgis.PolygonExtensions.ToPolygon
    isDefinition: true
    commentId: Overload:Virgis.PolygonExtensions.ToPolygon
  Virgis.PolygonExtensions:
    name:
      CSharp:
      - id: Virgis.PolygonExtensions
        name: PolygonExtensions
        nameWithType: PolygonExtensions
        qualifiedName: Virgis.PolygonExtensions
      VB:
      - id: Virgis.PolygonExtensions
        name: PolygonExtensions
        nameWithType: PolygonExtensions
        qualifiedName: Virgis.PolygonExtensions
    isDefinition: true
    commentId: T:Virgis.PolygonExtensions
  Mesh:
    name:
      CSharp:
      - id: Mesh
        name: Mesh
        nameWithType: Mesh
        qualifiedName: Mesh
        isExternal: true
      VB:
      - id: Mesh
        name: Mesh
        nameWithType: Mesh
        qualifiedName: Mesh
        isExternal: true
    isDefinition: true
    commentId: '!:Mesh'
  SimpleMesh:
    name:
      CSharp:
      - id: SimpleMesh
        name: SimpleMesh
        nameWithType: SimpleMesh
        qualifiedName: SimpleMesh
        isExternal: true
      VB:
      - id: SimpleMesh
        name: SimpleMesh
        nameWithType: SimpleMesh
        qualifiedName: SimpleMesh
        isExternal: true
    isDefinition: true
    commentId: '!:SimpleMesh'
  Virgis.SimpleMeshExtensions.ToMesh*:
    name:
      CSharp:
      - id: Virgis.SimpleMeshExtensions.ToMesh*
        name: ToMesh
        nameWithType: SimpleMeshExtensions.ToMesh
        qualifiedName: Virgis.SimpleMeshExtensions.ToMesh
      VB:
      - id: Virgis.SimpleMeshExtensions.ToMesh*
        name: ToMesh
        nameWithType: SimpleMeshExtensions.ToMesh
        qualifiedName: Virgis.SimpleMeshExtensions.ToMesh
    isDefinition: true
    commentId: Overload:Virgis.SimpleMeshExtensions.ToMesh
  Virgis.SimpleMeshExtensions:
    name:
      CSharp:
      - id: Virgis.SimpleMeshExtensions
        name: SimpleMeshExtensions
        nameWithType: SimpleMeshExtensions
        qualifiedName: Virgis.SimpleMeshExtensions
      VB:
      - id: Virgis.SimpleMeshExtensions
        name: SimpleMeshExtensions
        nameWithType: SimpleMeshExtensions
        qualifiedName: Virgis.SimpleMeshExtensions
    isDefinition: true
    commentId: T:Virgis.SimpleMeshExtensions
  Virgis.VirgisVectorExtensions.Round*:
    name:
      CSharp:
      - id: Virgis.VirgisVectorExtensions.Round*
        name: Round
        nameWithType: VirgisVectorExtensions.Round
        qualifiedName: Virgis.VirgisVectorExtensions.Round
      VB:
      - id: Virgis.VirgisVectorExtensions.Round*
        name: Round
        nameWithType: VirgisVectorExtensions.Round
        qualifiedName: Virgis.VirgisVectorExtensions.Round
    isDefinition: true
    commentId: Overload:Virgis.VirgisVectorExtensions.Round
  Virgis.VirgisVectorExtensions:
    name:
      CSharp:
      - id: Virgis.VirgisVectorExtensions
        name: VirgisVectorExtensions
        nameWithType: VirgisVectorExtensions
        qualifiedName: Virgis.VirgisVectorExtensions
      VB:
      - id: Virgis.VirgisVectorExtensions
        name: VirgisVectorExtensions
        nameWithType: VirgisVectorExtensions
        qualifiedName: Virgis.VirgisVectorExtensions
    isDefinition: true
    commentId: T:Virgis.VirgisVectorExtensions
  Virgis.VertexLookup.Equals*:
    name:
      CSharp:
      - id: Virgis.VertexLookup.Equals*
        name: Equals
        nameWithType: VertexLookup.Equals
        qualifiedName: Virgis.VertexLookup.Equals
      VB:
      - id: Virgis.VertexLookup.Equals*
        name: Equals
        nameWithType: VertexLookup.Equals
        qualifiedName: Virgis.VertexLookup.Equals
    isDefinition: true
    commentId: Overload:Virgis.VertexLookup.Equals
  Virgis.VertexLookup.GetHashCode*:
    name:
      CSharp:
      - id: Virgis.VertexLookup.GetHashCode*
        name: GetHashCode
        nameWithType: VertexLookup.GetHashCode
        qualifiedName: Virgis.VertexLookup.GetHashCode
      VB:
      - id: Virgis.VertexLookup.GetHashCode*
        name: GetHashCode
        nameWithType: VertexLookup.GetHashCode
        qualifiedName: Virgis.VertexLookup.GetHashCode
    isDefinition: true
    commentId: Overload:Virgis.VertexLookup.GetHashCode
  Virgis.VertexLookup:
    name:
      CSharp:
      - id: Virgis.VertexLookup
        name: VertexLookup
        nameWithType: VertexLookup
        qualifiedName: Virgis.VertexLookup
      VB:
      - id: Virgis.VertexLookup
        name: VertexLookup
        nameWithType: VertexLookup
        qualifiedName: Virgis.VertexLookup
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.VertexLookup
  Virgis.VertexLookup.CompareTo*:
    name:
      CSharp:
      - id: Virgis.VertexLookup.CompareTo*
        name: CompareTo
        nameWithType: VertexLookup.CompareTo
        qualifiedName: Virgis.VertexLookup.CompareTo
      VB:
      - id: Virgis.VertexLookup.CompareTo*
        name: CompareTo
        nameWithType: VertexLookup.CompareTo
        qualifiedName: Virgis.VertexLookup.CompareTo
    isDefinition: true
    commentId: Overload:Virgis.VertexLookup.CompareTo
  Virgis.IVirgisEntity.Selected*:
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.Selected*
        name: Selected
        nameWithType: IVirgisEntity.Selected
        qualifiedName: Virgis.IVirgisEntity.Selected
      VB:
      - id: Virgis.IVirgisEntity.Selected*
        name: Selected
        nameWithType: IVirgisEntity.Selected
        qualifiedName: Virgis.IVirgisEntity.Selected
    isDefinition: true
    commentId: Overload:Virgis.IVirgisEntity.Selected
  Virgis.IVirgisEntity.UnSelected*:
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.UnSelected*
        name: UnSelected
        nameWithType: IVirgisEntity.UnSelected
        qualifiedName: Virgis.IVirgisEntity.UnSelected
      VB:
      - id: Virgis.IVirgisEntity.UnSelected*
        name: UnSelected
        nameWithType: IVirgisEntity.UnSelected
        qualifiedName: Virgis.IVirgisEntity.UnSelected
    isDefinition: true
    commentId: Overload:Virgis.IVirgisEntity.UnSelected
  Virgis.IVirgisEntity.StartEditSession*:
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.StartEditSession*
        name: StartEditSession
        nameWithType: IVirgisEntity.StartEditSession
        qualifiedName: Virgis.IVirgisEntity.StartEditSession
      VB:
      - id: Virgis.IVirgisEntity.StartEditSession*
        name: StartEditSession
        nameWithType: IVirgisEntity.StartEditSession
        qualifiedName: Virgis.IVirgisEntity.StartEditSession
    isDefinition: true
    commentId: Overload:Virgis.IVirgisEntity.StartEditSession
  Virgis.IVirgisEntity.ExitEditSession*:
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.ExitEditSession*
        name: ExitEditSession
        nameWithType: IVirgisEntity.ExitEditSession
        qualifiedName: Virgis.IVirgisEntity.ExitEditSession
      VB:
      - id: Virgis.IVirgisEntity.ExitEditSession*
        name: ExitEditSession
        nameWithType: IVirgisEntity.ExitEditSession
        qualifiedName: Virgis.IVirgisEntity.ExitEditSession
    isDefinition: true
    commentId: Overload:Virgis.IVirgisEntity.ExitEditSession
  Virgis.IVirgisEntity.GetId*:
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.GetId*
        name: GetId
        nameWithType: IVirgisEntity.GetId
        qualifiedName: Virgis.IVirgisEntity.GetId
      VB:
      - id: Virgis.IVirgisEntity.GetId*
        name: GetId
        nameWithType: IVirgisEntity.GetId
        qualifiedName: Virgis.IVirgisEntity.GetId
    isDefinition: true
    commentId: Overload:Virgis.IVirgisEntity.GetId
  Virgis.IVirgisEntity.GetMetadata*:
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.GetMetadata*
        name: GetMetadata
        nameWithType: IVirgisEntity.GetMetadata
        qualifiedName: Virgis.IVirgisEntity.GetMetadata
      VB:
      - id: Virgis.IVirgisEntity.GetMetadata*
        name: GetMetadata
        nameWithType: IVirgisEntity.GetMetadata
        qualifiedName: Virgis.IVirgisEntity.GetMetadata
    isDefinition: true
    commentId: Overload:Virgis.IVirgisEntity.GetMetadata
  Virgis.IVirgisEntity.GetClosest*:
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.GetClosest*
        name: GetClosest
        nameWithType: IVirgisEntity.GetClosest
        qualifiedName: Virgis.IVirgisEntity.GetClosest
      VB:
      - id: Virgis.IVirgisEntity.GetClosest*
        name: GetClosest
        nameWithType: IVirgisEntity.GetClosest
        qualifiedName: Virgis.IVirgisEntity.GetClosest
    isDefinition: true
    commentId: Overload:Virgis.IVirgisEntity.GetClosest
  Virgis.IVirgisEntity.MoveAxis*:
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.MoveAxis*
        name: MoveAxis
        nameWithType: IVirgisEntity.MoveAxis
        qualifiedName: Virgis.IVirgisEntity.MoveAxis
      VB:
      - id: Virgis.IVirgisEntity.MoveAxis*
        name: MoveAxis
        nameWithType: IVirgisEntity.MoveAxis
        qualifiedName: Virgis.IVirgisEntity.MoveAxis
    isDefinition: true
    commentId: Overload:Virgis.IVirgisEntity.MoveAxis
  Virgis.IVirgisEntity.Translate*:
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.Translate*
        name: Translate
        nameWithType: IVirgisEntity.Translate
        qualifiedName: Virgis.IVirgisEntity.Translate
      VB:
      - id: Virgis.IVirgisEntity.Translate*
        name: Translate
        nameWithType: IVirgisEntity.Translate
        qualifiedName: Virgis.IVirgisEntity.Translate
    isDefinition: true
    commentId: Overload:Virgis.IVirgisEntity.Translate
  Virgis.IVirgisEntity.MoveTo*:
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.MoveTo*
        name: MoveTo
        nameWithType: IVirgisEntity.MoveTo
        qualifiedName: Virgis.IVirgisEntity.MoveTo
      VB:
      - id: Virgis.IVirgisEntity.MoveTo*
        name: MoveTo
        nameWithType: IVirgisEntity.MoveTo
        qualifiedName: Virgis.IVirgisEntity.MoveTo
    isDefinition: true
    commentId: Overload:Virgis.IVirgisEntity.MoveTo
  Virgis.IVirgisEntity.VertexMove*:
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.VertexMove*
        name: VertexMove
        nameWithType: IVirgisEntity.VertexMove
        qualifiedName: Virgis.IVirgisEntity.VertexMove
      VB:
      - id: Virgis.IVirgisEntity.VertexMove*
        name: VertexMove
        nameWithType: IVirgisEntity.VertexMove
        qualifiedName: Virgis.IVirgisEntity.VertexMove
    isDefinition: true
    commentId: Overload:Virgis.IVirgisEntity.VertexMove
  Virgis.IVirgisEntity.Selected(Virgis.SelectionTypes):
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.Selected(Virgis.SelectionTypes)
        name: Selected
        nameWithType: IVirgisEntity.Selected
        qualifiedName: Virgis.IVirgisEntity.Selected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionTypes
        name: SelectionTypes
        nameWithType: SelectionTypes
        qualifiedName: Virgis.SelectionTypes
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisEntity.Selected(Virgis.SelectionTypes)
        name: Selected
        nameWithType: IVirgisEntity.Selected
        qualifiedName: Virgis.IVirgisEntity.Selected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionTypes
        name: SelectionTypes
        nameWithType: SelectionTypes
        qualifiedName: Virgis.SelectionTypes
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisEntity
    commentId: M:Virgis.IVirgisEntity.Selected(Virgis.SelectionTypes)
  Virgis.IVirgisEntity.UnSelected(Virgis.SelectionTypes):
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.UnSelected(Virgis.SelectionTypes)
        name: UnSelected
        nameWithType: IVirgisEntity.UnSelected
        qualifiedName: Virgis.IVirgisEntity.UnSelected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionTypes
        name: SelectionTypes
        nameWithType: SelectionTypes
        qualifiedName: Virgis.SelectionTypes
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisEntity.UnSelected(Virgis.SelectionTypes)
        name: UnSelected
        nameWithType: IVirgisEntity.UnSelected
        qualifiedName: Virgis.IVirgisEntity.UnSelected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionTypes
        name: SelectionTypes
        nameWithType: SelectionTypes
        qualifiedName: Virgis.SelectionTypes
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisEntity
    commentId: M:Virgis.IVirgisEntity.UnSelected(Virgis.SelectionTypes)
  Virgis.IVirgisEntity.StartEditSession:
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.StartEditSession
        name: StartEditSession
        nameWithType: IVirgisEntity.StartEditSession
        qualifiedName: Virgis.IVirgisEntity.StartEditSession
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisEntity.StartEditSession
        name: StartEditSession
        nameWithType: IVirgisEntity.StartEditSession
        qualifiedName: Virgis.IVirgisEntity.StartEditSession
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisEntity
    commentId: M:Virgis.IVirgisEntity.StartEditSession
  Virgis.IVirgisEntity.ExitEditSession(System.Boolean):
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.ExitEditSession(System.Boolean)
        name: ExitEditSession
        nameWithType: IVirgisEntity.ExitEditSession
        qualifiedName: Virgis.IVirgisEntity.ExitEditSession
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisEntity.ExitEditSession(System.Boolean)
        name: ExitEditSession
        nameWithType: IVirgisEntity.ExitEditSession
        qualifiedName: Virgis.IVirgisEntity.ExitEditSession
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisEntity
    commentId: M:Virgis.IVirgisEntity.ExitEditSession(System.Boolean)
  Virgis.IVirgisEntity.GetId:
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.GetId
        name: GetId
        nameWithType: IVirgisEntity.GetId
        qualifiedName: Virgis.IVirgisEntity.GetId
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisEntity.GetId
        name: GetId
        nameWithType: IVirgisEntity.GetId
        qualifiedName: Virgis.IVirgisEntity.GetId
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisEntity
    commentId: M:Virgis.IVirgisEntity.GetId
  Virgis.IVirgisEntity.GetMetadata:
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.GetMetadata
        name: GetMetadata
        nameWithType: IVirgisEntity.GetMetadata
        qualifiedName: Virgis.IVirgisEntity.GetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisEntity.GetMetadata
        name: GetMetadata
        nameWithType: IVirgisEntity.GetMetadata
        qualifiedName: Virgis.IVirgisEntity.GetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisEntity
    commentId: M:Virgis.IVirgisEntity.GetMetadata
  Virgis.IVirgisEntity.GetClosest(Vector3,Guid[]):
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.GetClosest(Vector3,Guid[])
        name: GetClosest
        nameWithType: IVirgisEntity.GetClosest
        qualifiedName: Virgis.IVirgisEntity.GetClosest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: Guid
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisEntity.GetClosest(Vector3,Guid[])
        name: GetClosest
        nameWithType: IVirgisEntity.GetClosest
        qualifiedName: Virgis.IVirgisEntity.GetClosest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: Guid
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisEntity
    commentId: M:Virgis.IVirgisEntity.GetClosest(Vector3,Guid[])
  Virgis.IVirgisEntity.MoveAxis(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.MoveAxis(Virgis.MoveArgs)
        name: MoveAxis
        nameWithType: IVirgisEntity.MoveAxis
        qualifiedName: Virgis.IVirgisEntity.MoveAxis
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisEntity.MoveAxis(Virgis.MoveArgs)
        name: MoveAxis
        nameWithType: IVirgisEntity.MoveAxis
        qualifiedName: Virgis.IVirgisEntity.MoveAxis
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisEntity
    commentId: M:Virgis.IVirgisEntity.MoveAxis(Virgis.MoveArgs)
  Virgis.IVirgisEntity.Translate(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.Translate(Virgis.MoveArgs)
        name: Translate
        nameWithType: IVirgisEntity.Translate
        qualifiedName: Virgis.IVirgisEntity.Translate
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisEntity.Translate(Virgis.MoveArgs)
        name: Translate
        nameWithType: IVirgisEntity.Translate
        qualifiedName: Virgis.IVirgisEntity.Translate
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisEntity
    commentId: M:Virgis.IVirgisEntity.Translate(Virgis.MoveArgs)
  Virgis.IVirgisEntity.MoveTo(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.MoveTo(Virgis.MoveArgs)
        name: MoveTo
        nameWithType: IVirgisEntity.MoveTo
        qualifiedName: Virgis.IVirgisEntity.MoveTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisEntity.MoveTo(Virgis.MoveArgs)
        name: MoveTo
        nameWithType: IVirgisEntity.MoveTo
        qualifiedName: Virgis.IVirgisEntity.MoveTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisEntity
    commentId: M:Virgis.IVirgisEntity.MoveTo(Virgis.MoveArgs)
  Virgis.IVirgisEntity.VertexMove(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.VertexMove(Virgis.MoveArgs)
        name: VertexMove
        nameWithType: IVirgisEntity.VertexMove
        qualifiedName: Virgis.IVirgisEntity.VertexMove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisEntity.VertexMove(Virgis.MoveArgs)
        name: VertexMove
        nameWithType: IVirgisEntity.VertexMove
        qualifiedName: Virgis.IVirgisEntity.VertexMove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisEntity
    commentId: M:Virgis.IVirgisEntity.VertexMove(Virgis.MoveArgs)
  Virgis.IVirgisFeature.SetMaterial*:
    name:
      CSharp:
      - id: Virgis.IVirgisFeature.SetMaterial*
        name: SetMaterial
        nameWithType: IVirgisFeature.SetMaterial
        qualifiedName: Virgis.IVirgisFeature.SetMaterial
      VB:
      - id: Virgis.IVirgisFeature.SetMaterial*
        name: SetMaterial
        nameWithType: IVirgisFeature.SetMaterial
        qualifiedName: Virgis.IVirgisFeature.SetMaterial
    isDefinition: true
    commentId: Overload:Virgis.IVirgisFeature.SetMaterial
  Virgis.IVirgisFeature.AddVertex*:
    name:
      CSharp:
      - id: Virgis.IVirgisFeature.AddVertex*
        name: AddVertex
        nameWithType: IVirgisFeature.AddVertex
        qualifiedName: Virgis.IVirgisFeature.AddVertex
      VB:
      - id: Virgis.IVirgisFeature.AddVertex*
        name: AddVertex
        nameWithType: IVirgisFeature.AddVertex
        qualifiedName: Virgis.IVirgisFeature.AddVertex
    isDefinition: true
    commentId: Overload:Virgis.IVirgisFeature.AddVertex
  Virgis.IVirgisFeature.RemoveVertex*:
    name:
      CSharp:
      - id: Virgis.IVirgisFeature.RemoveVertex*
        name: RemoveVertex
        nameWithType: IVirgisFeature.RemoveVertex
        qualifiedName: Virgis.IVirgisFeature.RemoveVertex
      VB:
      - id: Virgis.IVirgisFeature.RemoveVertex*
        name: RemoveVertex
        nameWithType: IVirgisFeature.RemoveVertex
        qualifiedName: Virgis.IVirgisFeature.RemoveVertex
    isDefinition: true
    commentId: Overload:Virgis.IVirgisFeature.RemoveVertex
  Virgis.IVirgisFeature.GetGeometry*:
    name:
      CSharp:
      - id: Virgis.IVirgisFeature.GetGeometry*
        name: GetGeometry
        nameWithType: IVirgisFeature.GetGeometry
        qualifiedName: Virgis.IVirgisFeature.GetGeometry
      VB:
      - id: Virgis.IVirgisFeature.GetGeometry*
        name: GetGeometry
        nameWithType: IVirgisFeature.GetGeometry
        qualifiedName: Virgis.IVirgisFeature.GetGeometry
    isDefinition: true
    commentId: Overload:Virgis.IVirgisFeature.GetGeometry
  Transform:
    name:
      CSharp:
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      VB:
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
    isDefinition: true
    commentId: '!:Transform'
  Virgis.VirgisFeature.SetMaterial*:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.SetMaterial*
        name: SetMaterial
        nameWithType: VirgisFeature.SetMaterial
        qualifiedName: Virgis.VirgisFeature.SetMaterial
      VB:
      - id: Virgis.VirgisFeature.SetMaterial*
        name: SetMaterial
        nameWithType: VirgisFeature.SetMaterial
        qualifiedName: Virgis.VirgisFeature.SetMaterial
    isDefinition: true
    commentId: Overload:Virgis.VirgisFeature.SetMaterial
  Virgis.IVirgisFeature.SetMaterial(Material,Material):
    name:
      CSharp:
      - id: Virgis.IVirgisFeature.SetMaterial(Material,Material)
        name: SetMaterial
        nameWithType: IVirgisFeature.SetMaterial
        qualifiedName: Virgis.IVirgisFeature.SetMaterial
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisFeature.SetMaterial(Material,Material)
        name: SetMaterial
        nameWithType: IVirgisFeature.SetMaterial
        qualifiedName: Virgis.IVirgisFeature.SetMaterial
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisFeature
    commentId: M:Virgis.IVirgisFeature.SetMaterial(Material,Material)
  Virgis.VirgisFeature.Selected*:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.Selected*
        name: Selected
        nameWithType: VirgisFeature.Selected
        qualifiedName: Virgis.VirgisFeature.Selected
      VB:
      - id: Virgis.VirgisFeature.Selected*
        name: Selected
        nameWithType: VirgisFeature.Selected
        qualifiedName: Virgis.VirgisFeature.Selected
    isDefinition: true
    commentId: Overload:Virgis.VirgisFeature.Selected
  Virgis.VirgisFeature.UnSelected*:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.UnSelected*
        name: UnSelected
        nameWithType: VirgisFeature.UnSelected
        qualifiedName: Virgis.VirgisFeature.UnSelected
      VB:
      - id: Virgis.VirgisFeature.UnSelected*
        name: UnSelected
        nameWithType: VirgisFeature.UnSelected
        qualifiedName: Virgis.VirgisFeature.UnSelected
    isDefinition: true
    commentId: Overload:Virgis.VirgisFeature.UnSelected
  Virgis.VirgisFeature.StartEditSession*:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.StartEditSession*
        name: StartEditSession
        nameWithType: VirgisFeature.StartEditSession
        qualifiedName: Virgis.VirgisFeature.StartEditSession
      VB:
      - id: Virgis.VirgisFeature.StartEditSession*
        name: StartEditSession
        nameWithType: VirgisFeature.StartEditSession
        qualifiedName: Virgis.VirgisFeature.StartEditSession
    isDefinition: true
    commentId: Overload:Virgis.VirgisFeature.StartEditSession
  Virgis.VirgisFeature.ExitEditSession*:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.ExitEditSession*
        name: ExitEditSession
        nameWithType: VirgisFeature.ExitEditSession
        qualifiedName: Virgis.VirgisFeature.ExitEditSession
      VB:
      - id: Virgis.VirgisFeature.ExitEditSession*
        name: ExitEditSession
        nameWithType: VirgisFeature.ExitEditSession
        qualifiedName: Virgis.VirgisFeature.ExitEditSession
    isDefinition: true
    commentId: Overload:Virgis.VirgisFeature.ExitEditSession
  Virgis.VirgisFeature.MoveTo*:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.MoveTo*
        name: MoveTo
        nameWithType: VirgisFeature.MoveTo
        qualifiedName: Virgis.VirgisFeature.MoveTo
      VB:
      - id: Virgis.VirgisFeature.MoveTo*
        name: MoveTo
        nameWithType: VirgisFeature.MoveTo
        qualifiedName: Virgis.VirgisFeature.MoveTo
    isDefinition: true
    commentId: Overload:Virgis.VirgisFeature.MoveTo
  Virgis.VirgisFeature.MoveAxis*:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.MoveAxis*
        name: MoveAxis
        nameWithType: VirgisFeature.MoveAxis
        qualifiedName: Virgis.VirgisFeature.MoveAxis
      VB:
      - id: Virgis.VirgisFeature.MoveAxis*
        name: MoveAxis
        nameWithType: VirgisFeature.MoveAxis
        qualifiedName: Virgis.VirgisFeature.MoveAxis
    isDefinition: true
    commentId: Overload:Virgis.VirgisFeature.MoveAxis
  Virgis.VirgisFeature.Translate*:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.Translate*
        name: Translate
        nameWithType: VirgisFeature.Translate
        qualifiedName: Virgis.VirgisFeature.Translate
      VB:
      - id: Virgis.VirgisFeature.Translate*
        name: Translate
        nameWithType: VirgisFeature.Translate
        qualifiedName: Virgis.VirgisFeature.Translate
    isDefinition: true
    commentId: Overload:Virgis.VirgisFeature.Translate
  Virgis.VirgisFeature.VertexMove*:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.VertexMove*
        name: VertexMove
        nameWithType: VirgisFeature.VertexMove
        qualifiedName: Virgis.VirgisFeature.VertexMove
      VB:
      - id: Virgis.VirgisFeature.VertexMove*
        name: VertexMove
        nameWithType: VirgisFeature.VertexMove
        qualifiedName: Virgis.VirgisFeature.VertexMove
    isDefinition: true
    commentId: Overload:Virgis.VirgisFeature.VertexMove
  Virgis.VirgisFeature.GetClosest*:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.GetClosest*
        name: GetClosest
        nameWithType: VirgisFeature.GetClosest
        qualifiedName: Virgis.VirgisFeature.GetClosest
      VB:
      - id: Virgis.VirgisFeature.GetClosest*
        name: GetClosest
        nameWithType: VirgisFeature.GetClosest
        qualifiedName: Virgis.VirgisFeature.GetClosest
    isDefinition: true
    commentId: Overload:Virgis.VirgisFeature.GetClosest
  Virgis.VirgisFeature.AddVertex*:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.AddVertex*
        name: AddVertex
        nameWithType: VirgisFeature.AddVertex
        qualifiedName: Virgis.VirgisFeature.AddVertex
      VB:
      - id: Virgis.VirgisFeature.AddVertex*
        name: AddVertex
        nameWithType: VirgisFeature.AddVertex
        qualifiedName: Virgis.VirgisFeature.AddVertex
    isDefinition: true
    commentId: Overload:Virgis.VirgisFeature.AddVertex
  Virgis.IVirgisFeature.AddVertex(Vector3):
    name:
      CSharp:
      - id: Virgis.IVirgisFeature.AddVertex(Vector3)
        name: AddVertex
        nameWithType: IVirgisFeature.AddVertex
        qualifiedName: Virgis.IVirgisFeature.AddVertex
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisFeature.AddVertex(Vector3)
        name: AddVertex
        nameWithType: IVirgisFeature.AddVertex
        qualifiedName: Virgis.IVirgisFeature.AddVertex
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisFeature
    commentId: M:Virgis.IVirgisFeature.AddVertex(Vector3)
  Virgis.VirgisFeature.RemoveVertex*:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.RemoveVertex*
        name: RemoveVertex
        nameWithType: VirgisFeature.RemoveVertex
        qualifiedName: Virgis.VirgisFeature.RemoveVertex
      VB:
      - id: Virgis.VirgisFeature.RemoveVertex*
        name: RemoveVertex
        nameWithType: VirgisFeature.RemoveVertex
        qualifiedName: Virgis.VirgisFeature.RemoveVertex
    isDefinition: true
    commentId: Overload:Virgis.VirgisFeature.RemoveVertex
  Virgis.IVirgisFeature.RemoveVertex(Virgis.VirgisFeature):
    name:
      CSharp:
      - id: Virgis.IVirgisFeature.RemoveVertex(Virgis.VirgisFeature)
        name: RemoveVertex
        nameWithType: IVirgisFeature.RemoveVertex
        qualifiedName: Virgis.IVirgisFeature.RemoveVertex
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisFeature
        name: VirgisFeature
        nameWithType: VirgisFeature
        qualifiedName: Virgis.VirgisFeature
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisFeature.RemoveVertex(Virgis.VirgisFeature)
        name: RemoveVertex
        nameWithType: IVirgisFeature.RemoveVertex
        qualifiedName: Virgis.IVirgisFeature.RemoveVertex
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisFeature
        name: VirgisFeature
        nameWithType: VirgisFeature
        qualifiedName: Virgis.VirgisFeature
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisFeature
    commentId: M:Virgis.IVirgisFeature.RemoveVertex(Virgis.VirgisFeature)
  Virgis.VirgisFeature.GetGeometry*:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.GetGeometry*
        name: GetGeometry
        nameWithType: VirgisFeature.GetGeometry
        qualifiedName: Virgis.VirgisFeature.GetGeometry
      VB:
      - id: Virgis.VirgisFeature.GetGeometry*
        name: GetGeometry
        nameWithType: VirgisFeature.GetGeometry
        qualifiedName: Virgis.VirgisFeature.GetGeometry
    isDefinition: true
    commentId: Overload:Virgis.VirgisFeature.GetGeometry
  Virgis.IVirgisFeature.GetGeometry``1:
    name:
      CSharp:
      - id: Virgis.IVirgisFeature.GetGeometry``1
        name: GetGeometry<T>
        nameWithType: IVirgisFeature.GetGeometry<T>
        qualifiedName: Virgis.IVirgisFeature.GetGeometry<T>
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisFeature.GetGeometry``1
        name: GetGeometry(Of T)
        nameWithType: IVirgisFeature.GetGeometry(Of T)
        qualifiedName: Virgis.IVirgisFeature.GetGeometry(Of T)
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisFeature
    commentId: M:Virgis.IVirgisFeature.GetGeometry``1
  Virgis.VirgisFeature.GetId*:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.GetId*
        name: GetId
        nameWithType: VirgisFeature.GetId
        qualifiedName: Virgis.VirgisFeature.GetId
      VB:
      - id: Virgis.VirgisFeature.GetId*
        name: GetId
        nameWithType: VirgisFeature.GetId
        qualifiedName: Virgis.VirgisFeature.GetId
    isDefinition: true
    commentId: Overload:Virgis.VirgisFeature.GetId
  Virgis.VirgisFeature.GetMetadata*:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.GetMetadata*
        name: GetMetadata
        nameWithType: VirgisFeature.GetMetadata
        qualifiedName: Virgis.VirgisFeature.GetMetadata
      VB:
      - id: Virgis.VirgisFeature.GetMetadata*
        name: GetMetadata
        nameWithType: VirgisFeature.GetMetadata
        qualifiedName: Virgis.VirgisFeature.GetMetadata
    isDefinition: true
    commentId: Overload:Virgis.VirgisFeature.GetMetadata
  Virgis.VirgisFeature.Equals*:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.Equals*
        name: Equals
        nameWithType: VirgisFeature.Equals
        qualifiedName: Virgis.VirgisFeature.Equals
      VB:
      - id: Virgis.VirgisFeature.Equals*
        name: Equals
        nameWithType: VirgisFeature.Equals
        qualifiedName: Virgis.VirgisFeature.Equals
    isDefinition: true
    commentId: Overload:Virgis.VirgisFeature.Equals
  Virgis.VirgisFeature.GetHashCode*:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.GetHashCode*
        name: GetHashCode
        nameWithType: VirgisFeature.GetHashCode
        qualifiedName: Virgis.VirgisFeature.GetHashCode
      VB:
      - id: Virgis.VirgisFeature.GetHashCode*
        name: GetHashCode
        nameWithType: VirgisFeature.GetHashCode
        qualifiedName: Virgis.VirgisFeature.GetHashCode
    isDefinition: true
    commentId: Overload:Virgis.VirgisFeature.GetHashCode
  List{Vector3}:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: List`1
    commentId: '!:List{Vector3}'
  List{Color32}:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Color32
        name: Color32
        nameWithType: Color32
        qualifiedName: Color32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Color32
        name: Color32
        nameWithType: Color32
        qualifiedName: Color32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: List`1
    commentId: '!:List{Color32}'
  Bounds:
    name:
      CSharp:
      - id: Bounds
        name: Bounds
        nameWithType: Bounds
        qualifiedName: Bounds
        isExternal: true
      VB:
      - id: Bounds
        name: Bounds
        nameWithType: Bounds
        qualifiedName: Bounds
        isExternal: true
    isDefinition: true
    commentId: '!:Bounds'
  Virgis.ParticleData:
    name:
      CSharp:
      - id: Virgis.ParticleData
        name: ParticleData
        nameWithType: ParticleData
        qualifiedName: Virgis.ParticleData
      VB:
      - id: Virgis.ParticleData
        name: ParticleData
        nameWithType: ParticleData
        qualifiedName: Virgis.ParticleData
    isDefinition: true
    commentId: T:Virgis.ParticleData
  Virgis.IVirgisLayer.AddFeature*:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.AddFeature*
        name: AddFeature
        nameWithType: IVirgisLayer.AddFeature
        qualifiedName: Virgis.IVirgisLayer.AddFeature
      VB:
      - id: Virgis.IVirgisLayer.AddFeature*
        name: AddFeature
        nameWithType: IVirgisLayer.AddFeature
        qualifiedName: Virgis.IVirgisLayer.AddFeature
    isDefinition: true
    commentId: Overload:Virgis.IVirgisLayer.AddFeature
  Virgis.IVirgisLayer.Draw*:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.Draw*
        name: Draw
        nameWithType: IVirgisLayer.Draw
        qualifiedName: Virgis.IVirgisLayer.Draw
      VB:
      - id: Virgis.IVirgisLayer.Draw*
        name: Draw
        nameWithType: IVirgisLayer.Draw
        qualifiedName: Virgis.IVirgisLayer.Draw
    isDefinition: true
    commentId: Overload:Virgis.IVirgisLayer.Draw
  Virgis.IVirgisLayer.CheckPoint*:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.CheckPoint*
        name: CheckPoint
        nameWithType: IVirgisLayer.CheckPoint
        qualifiedName: Virgis.IVirgisLayer.CheckPoint
      VB:
      - id: Virgis.IVirgisLayer.CheckPoint*
        name: CheckPoint
        nameWithType: IVirgisLayer.CheckPoint
        qualifiedName: Virgis.IVirgisLayer.CheckPoint
    isDefinition: true
    commentId: Overload:Virgis.IVirgisLayer.CheckPoint
  Virgis.IVirgisLayer.Save*:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.Save*
        name: Save
        nameWithType: IVirgisLayer.Save
        qualifiedName: Virgis.IVirgisLayer.Save
      VB:
      - id: Virgis.IVirgisLayer.Save*
        name: Save
        nameWithType: IVirgisLayer.Save
        qualifiedName: Virgis.IVirgisLayer.Save
    isDefinition: true
    commentId: Overload:Virgis.IVirgisLayer.Save
  Virgis.IVirgisLayer.GetFeature*:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.GetFeature*
        name: GetFeature
        nameWithType: IVirgisLayer.GetFeature
        qualifiedName: Virgis.IVirgisLayer.GetFeature
      VB:
      - id: Virgis.IVirgisLayer.GetFeature*
        name: GetFeature
        nameWithType: IVirgisLayer.GetFeature
        qualifiedName: Virgis.IVirgisLayer.GetFeature
    isDefinition: true
    commentId: Overload:Virgis.IVirgisLayer.GetFeature
  Virgis.IVirgisLayer.GetFeatureShape*:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.GetFeatureShape*
        name: GetFeatureShape
        nameWithType: IVirgisLayer.GetFeatureShape
        qualifiedName: Virgis.IVirgisLayer.GetFeatureShape
      VB:
      - id: Virgis.IVirgisLayer.GetFeatureShape*
        name: GetFeatureShape
        nameWithType: IVirgisLayer.GetFeatureShape
        qualifiedName: Virgis.IVirgisLayer.GetFeatureShape
    isDefinition: true
    commentId: Overload:Virgis.IVirgisLayer.GetFeatureShape
  Virgis.IVirgisLayer.SetVisible*:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.SetVisible*
        name: SetVisible
        nameWithType: IVirgisLayer.SetVisible
        qualifiedName: Virgis.IVirgisLayer.SetVisible
      VB:
      - id: Virgis.IVirgisLayer.SetVisible*
        name: SetVisible
        nameWithType: IVirgisLayer.SetVisible
        qualifiedName: Virgis.IVirgisLayer.SetVisible
    isDefinition: true
    commentId: Overload:Virgis.IVirgisLayer.SetVisible
  Virgis.IVirgisLayer.IsVisible*:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.IsVisible*
        name: IsVisible
        nameWithType: IVirgisLayer.IsVisible
        qualifiedName: Virgis.IVirgisLayer.IsVisible
      VB:
      - id: Virgis.IVirgisLayer.IsVisible*
        name: IsVisible
        nameWithType: IVirgisLayer.IsVisible
        qualifiedName: Virgis.IVirgisLayer.IsVisible
    isDefinition: true
    commentId: Overload:Virgis.IVirgisLayer.IsVisible
  Virgis.IVirgisLayer.SetEditable*:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.SetEditable*
        name: SetEditable
        nameWithType: IVirgisLayer.SetEditable
        qualifiedName: Virgis.IVirgisLayer.SetEditable
      VB:
      - id: Virgis.IVirgisLayer.SetEditable*
        name: SetEditable
        nameWithType: IVirgisLayer.SetEditable
        qualifiedName: Virgis.IVirgisLayer.SetEditable
    isDefinition: true
    commentId: Overload:Virgis.IVirgisLayer.SetEditable
  Virgis.IVirgisLayer.IsEditable*:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.IsEditable*
        name: IsEditable
        nameWithType: IVirgisLayer.IsEditable
        qualifiedName: Virgis.IVirgisLayer.IsEditable
      VB:
      - id: Virgis.IVirgisLayer.IsEditable*
        name: IsEditable
        nameWithType: IVirgisLayer.IsEditable
        qualifiedName: Virgis.IVirgisLayer.IsEditable
    isDefinition: true
    commentId: Overload:Virgis.IVirgisLayer.IsEditable
  S:
    name:
      CSharp:
      - name: S
        nameWithType: S
        qualifiedName: S
      VB:
      - name: S
        nameWithType: S
        qualifiedName: S
    isDefinition: true
    commentId: '!:S'
  '{S}':
    name:
      CSharp:
      - name: S
        nameWithType: S
        qualifiedName: S
      VB:
      - name: S
        nameWithType: S
        qualifiedName: S
    isDefinition: false
    definition: S
    commentId: '!:S'
  Task{Virgis.VirgisLayer`2}:
    name:
      CSharp:
      - id: Task`1
        name: Task
        nameWithType: Task
        qualifiedName: Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: S
        nameWithType: S
        qualifiedName: S
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Task`1
        name: Task
        nameWithType: Task
        qualifiedName: Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: S
        nameWithType: S
        qualifiedName: S
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Task`1
    commentId: '!:Task{Virgis.VirgisLayer`2}'
  Virgis.VirgisLayer`2.Init*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Init*
        name: Init
        nameWithType: VirgisLayer<T, S>.Init
        qualifiedName: Virgis.VirgisLayer<T, S>.Init
      VB:
      - id: Virgis.VirgisLayer`2.Init*
        name: Init
        nameWithType: VirgisLayer(Of T, S).Init
        qualifiedName: Virgis.VirgisLayer(Of T, S).Init
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer`2.Init
  Virgis.VirgisLayer`2._init*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._init*
        name: _init
        nameWithType: VirgisLayer<T, S>._init
        qualifiedName: Virgis.VirgisLayer<T, S>._init
      VB:
      - id: Virgis.VirgisLayer`2._init*
        name: _init
        nameWithType: VirgisLayer(Of T, S)._init
        qualifiedName: Virgis.VirgisLayer(Of T, S)._init
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer`2._init
  Virgis.VirgisLayer`2.AddFeature*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.AddFeature*
        name: AddFeature
        nameWithType: VirgisLayer<T, S>.AddFeature
        qualifiedName: Virgis.VirgisLayer<T, S>.AddFeature
      VB:
      - id: Virgis.VirgisLayer`2.AddFeature*
        name: AddFeature
        nameWithType: VirgisLayer(Of T, S).AddFeature
        qualifiedName: Virgis.VirgisLayer(Of T, S).AddFeature
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer`2.AddFeature
  Virgis.IVirgisLayer.AddFeature(Vector3[]):
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.AddFeature(Vector3[])
        name: AddFeature
        nameWithType: IVirgisLayer.AddFeature
        qualifiedName: Virgis.IVirgisLayer.AddFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisLayer.AddFeature(Vector3[])
        name: AddFeature
        nameWithType: IVirgisLayer.AddFeature
        qualifiedName: Virgis.IVirgisLayer.AddFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisLayer
    commentId: M:Virgis.IVirgisLayer.AddFeature(Vector3[])
  Virgis.VirgisLayer`2._addFeature*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._addFeature*
        name: _addFeature
        nameWithType: VirgisLayer<T, S>._addFeature
        qualifiedName: Virgis.VirgisLayer<T, S>._addFeature
      VB:
      - id: Virgis.VirgisLayer`2._addFeature*
        name: _addFeature
        nameWithType: VirgisLayer(Of T, S)._addFeature
        qualifiedName: Virgis.VirgisLayer(Of T, S)._addFeature
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer`2._addFeature
  Virgis.VirgisLayer`2.Draw*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Draw*
        name: Draw
        nameWithType: VirgisLayer<T, S>.Draw
        qualifiedName: Virgis.VirgisLayer<T, S>.Draw
      VB:
      - id: Virgis.VirgisLayer`2.Draw*
        name: Draw
        nameWithType: VirgisLayer(Of T, S).Draw
        qualifiedName: Virgis.VirgisLayer(Of T, S).Draw
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer`2.Draw
  Virgis.IVirgisLayer.Draw:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.Draw
        name: Draw
        nameWithType: IVirgisLayer.Draw
        qualifiedName: Virgis.IVirgisLayer.Draw
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisLayer.Draw
        name: Draw
        nameWithType: IVirgisLayer.Draw
        qualifiedName: Virgis.IVirgisLayer.Draw
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisLayer
    commentId: M:Virgis.IVirgisLayer.Draw
  Virgis.VirgisLayer`2._draw*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._draw*
        name: _draw
        nameWithType: VirgisLayer<T, S>._draw
        qualifiedName: Virgis.VirgisLayer<T, S>._draw
      VB:
      - id: Virgis.VirgisLayer`2._draw*
        name: _draw
        nameWithType: VirgisLayer(Of T, S)._draw
        qualifiedName: Virgis.VirgisLayer(Of T, S)._draw
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer`2._draw
  Virgis.VirgisLayer`2.CheckPoint*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.CheckPoint*
        name: CheckPoint
        nameWithType: VirgisLayer<T, S>.CheckPoint
        qualifiedName: Virgis.VirgisLayer<T, S>.CheckPoint
      VB:
      - id: Virgis.VirgisLayer`2.CheckPoint*
        name: CheckPoint
        nameWithType: VirgisLayer(Of T, S).CheckPoint
        qualifiedName: Virgis.VirgisLayer(Of T, S).CheckPoint
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer`2.CheckPoint
  Virgis.IVirgisLayer.CheckPoint:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.CheckPoint
        name: CheckPoint
        nameWithType: IVirgisLayer.CheckPoint
        qualifiedName: Virgis.IVirgisLayer.CheckPoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisLayer.CheckPoint
        name: CheckPoint
        nameWithType: IVirgisLayer.CheckPoint
        qualifiedName: Virgis.IVirgisLayer.CheckPoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisLayer
    commentId: M:Virgis.IVirgisLayer.CheckPoint
  Virgis.VirgisLayer`2._checkpoint*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._checkpoint*
        name: _checkpoint
        nameWithType: VirgisLayer<T, S>._checkpoint
        qualifiedName: Virgis.VirgisLayer<T, S>._checkpoint
      VB:
      - id: Virgis.VirgisLayer`2._checkpoint*
        name: _checkpoint
        nameWithType: VirgisLayer(Of T, S)._checkpoint
        qualifiedName: Virgis.VirgisLayer(Of T, S)._checkpoint
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer`2._checkpoint
  Virgis.VirgisLayer`2.Save*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Save*
        name: Save
        nameWithType: VirgisLayer<T, S>.Save
        qualifiedName: Virgis.VirgisLayer<T, S>.Save
      VB:
      - id: Virgis.VirgisLayer`2.Save*
        name: Save
        nameWithType: VirgisLayer(Of T, S).Save
        qualifiedName: Virgis.VirgisLayer(Of T, S).Save
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer`2.Save
  Virgis.IVirgisLayer.Save:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.Save
        name: Save
        nameWithType: IVirgisLayer.Save
        qualifiedName: Virgis.IVirgisLayer.Save
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisLayer.Save
        name: Save
        nameWithType: IVirgisLayer.Save
        qualifiedName: Virgis.IVirgisLayer.Save
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisLayer
    commentId: M:Virgis.IVirgisLayer.Save
  Virgis.VirgisLayer`2._save*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._save*
        name: _save
        nameWithType: VirgisLayer<T, S>._save
        qualifiedName: Virgis.VirgisLayer<T, S>._save
      VB:
      - id: Virgis.VirgisLayer`2._save*
        name: _save
        nameWithType: VirgisLayer(Of T, S)._save
        qualifiedName: Virgis.VirgisLayer(Of T, S)._save
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer`2._save
  Virgis.VirgisLayer`2.Translate*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Translate*
        name: Translate
        nameWithType: VirgisLayer<T, S>.Translate
        qualifiedName: Virgis.VirgisLayer<T, S>.Translate
      VB:
      - id: Virgis.VirgisLayer`2.Translate*
        name: Translate
        nameWithType: VirgisLayer(Of T, S).Translate
        qualifiedName: Virgis.VirgisLayer(Of T, S).Translate
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer`2.Translate
  Virgis.VirgisLayer`2.MoveAxis*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.MoveAxis*
        name: MoveAxis
        nameWithType: VirgisLayer<T, S>.MoveAxis
        qualifiedName: Virgis.VirgisLayer<T, S>.MoveAxis
      VB:
      - id: Virgis.VirgisLayer`2.MoveAxis*
        name: MoveAxis
        nameWithType: VirgisLayer(Of T, S).MoveAxis
        qualifiedName: Virgis.VirgisLayer(Of T, S).MoveAxis
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer`2.MoveAxis
  Virgis.VirgisLayer`2.MoveTo*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.MoveTo*
        name: MoveTo
        nameWithType: VirgisLayer<T, S>.MoveTo
        qualifiedName: Virgis.VirgisLayer<T, S>.MoveTo
      VB:
      - id: Virgis.VirgisLayer`2.MoveTo*
        name: MoveTo
        nameWithType: VirgisLayer(Of T, S).MoveTo
        qualifiedName: Virgis.VirgisLayer(Of T, S).MoveTo
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer`2.MoveTo
  Virgis.VirgisLayer`2.VertexMove*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.VertexMove*
        name: VertexMove
        nameWithType: VirgisLayer<T, S>.VertexMove
        qualifiedName: Virgis.VirgisLayer<T, S>.VertexMove
      VB:
      - id: Virgis.VirgisLayer`2.VertexMove*
        name: VertexMove
        nameWithType: VirgisLayer(Of T, S).VertexMove
        qualifiedName: Virgis.VirgisLayer(Of T, S).VertexMove
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer`2.VertexMove
  Virgis.VirgisLayer`2.StartEditSession*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.StartEditSession*
        name: StartEditSession
        nameWithType: VirgisLayer<T, S>.StartEditSession
        qualifiedName: Virgis.VirgisLayer<T, S>.StartEditSession
      VB:
      - id: Virgis.VirgisLayer`2.StartEditSession*
        name: StartEditSession
        nameWithType: VirgisLayer(Of T, S).StartEditSession
        qualifiedName: Virgis.VirgisLayer(Of T, S).StartEditSession
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer`2.StartEditSession
  Virgis.VirgisLayer`2.ExitEditSession*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.ExitEditSession*
        name: ExitEditSession
        nameWithType: VirgisLayer<T, S>.ExitEditSession
        qualifiedName: Virgis.VirgisLayer<T, S>.ExitEditSession
      VB:
      - id: Virgis.VirgisLayer`2.ExitEditSession*
        name: ExitEditSession
        nameWithType: VirgisLayer(Of T, S).ExitEditSession
        qualifiedName: Virgis.VirgisLayer(Of T, S).ExitEditSession
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer`2.ExitEditSession
  Virgis.VirgisLayer`2.Selected*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Selected*
        name: Selected
        nameWithType: VirgisLayer<T, S>.Selected
        qualifiedName: Virgis.VirgisLayer<T, S>.Selected
      VB:
      - id: Virgis.VirgisLayer`2.Selected*
        name: Selected
        nameWithType: VirgisLayer(Of T, S).Selected
        qualifiedName: Virgis.VirgisLayer(Of T, S).Selected
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer`2.Selected
  Virgis.VirgisLayer`2.UnSelected*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.UnSelected*
        name: UnSelected
        nameWithType: VirgisLayer<T, S>.UnSelected
        qualifiedName: Virgis.VirgisLayer<T, S>.UnSelected
      VB:
      - id: Virgis.VirgisLayer`2.UnSelected*
        name: UnSelected
        nameWithType: VirgisLayer(Of T, S).UnSelected
        qualifiedName: Virgis.VirgisLayer(Of T, S).UnSelected
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer`2.UnSelected
  Virgis.VirgisLayer`2.GetClosest*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetClosest*
        name: GetClosest
        nameWithType: VirgisLayer<T, S>.GetClosest
        qualifiedName: Virgis.VirgisLayer<T, S>.GetClosest
      VB:
      - id: Virgis.VirgisLayer`2.GetClosest*
        name: GetClosest
        nameWithType: VirgisLayer(Of T, S).GetClosest
        qualifiedName: Virgis.VirgisLayer(Of T, S).GetClosest
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer`2.GetClosest
  Virgis.VirgisLayer`2.GetFeature*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetFeature*
        name: GetFeature
        nameWithType: VirgisLayer<T, S>.GetFeature
        qualifiedName: Virgis.VirgisLayer<T, S>.GetFeature
      VB:
      - id: Virgis.VirgisLayer`2.GetFeature*
        name: GetFeature
        nameWithType: VirgisLayer(Of T, S).GetFeature
        qualifiedName: Virgis.VirgisLayer(Of T, S).GetFeature
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer`2.GetFeature
  Virgis.IVirgisLayer.GetFeature(Guid):
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.GetFeature(Guid)
        name: GetFeature
        nameWithType: IVirgisLayer.GetFeature
        qualifiedName: Virgis.IVirgisLayer.GetFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: Guid
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisLayer.GetFeature(Guid)
        name: GetFeature
        nameWithType: IVirgisLayer.GetFeature
        qualifiedName: Virgis.IVirgisLayer.GetFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: Guid
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisLayer
    commentId: M:Virgis.IVirgisLayer.GetFeature(Guid)
  Virgis.VirgisLayer`2.GetId*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetId*
        name: GetId
        nameWithType: VirgisLayer<T, S>.GetId
        qualifiedName: Virgis.VirgisLayer<T, S>.GetId
      VB:
      - id: Virgis.VirgisLayer`2.GetId*
        name: GetId
        nameWithType: VirgisLayer(Of T, S).GetId
        qualifiedName: Virgis.VirgisLayer(Of T, S).GetId
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer`2.GetId
  Virgis.VirgisLayer`2.GetMetadata*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetMetadata*
        name: GetMetadata
        nameWithType: VirgisLayer<T, S>.GetMetadata
        qualifiedName: Virgis.VirgisLayer<T, S>.GetMetadata
      VB:
      - id: Virgis.VirgisLayer`2.GetMetadata*
        name: GetMetadata
        nameWithType: VirgisLayer(Of T, S).GetMetadata
        qualifiedName: Virgis.VirgisLayer(Of T, S).GetMetadata
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer`2.GetMetadata
  Virgis.VirgisLayer`2.GetFeatureShape*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetFeatureShape*
        name: GetFeatureShape
        nameWithType: VirgisLayer<T, S>.GetFeatureShape
        qualifiedName: Virgis.VirgisLayer<T, S>.GetFeatureShape
      VB:
      - id: Virgis.VirgisLayer`2.GetFeatureShape*
        name: GetFeatureShape
        nameWithType: VirgisLayer(Of T, S).GetFeatureShape
        qualifiedName: Virgis.VirgisLayer(Of T, S).GetFeatureShape
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer`2.GetFeatureShape
  Virgis.IVirgisLayer.GetFeatureShape:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.GetFeatureShape
        name: GetFeatureShape
        nameWithType: IVirgisLayer.GetFeatureShape
        qualifiedName: Virgis.IVirgisLayer.GetFeatureShape
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisLayer.GetFeatureShape
        name: GetFeatureShape
        nameWithType: IVirgisLayer.GetFeatureShape
        qualifiedName: Virgis.IVirgisLayer.GetFeatureShape
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisLayer
    commentId: M:Virgis.IVirgisLayer.GetFeatureShape
  Virgis.VirgisLayer`2.SetVisible*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.SetVisible*
        name: SetVisible
        nameWithType: VirgisLayer<T, S>.SetVisible
        qualifiedName: Virgis.VirgisLayer<T, S>.SetVisible
      VB:
      - id: Virgis.VirgisLayer`2.SetVisible*
        name: SetVisible
        nameWithType: VirgisLayer(Of T, S).SetVisible
        qualifiedName: Virgis.VirgisLayer(Of T, S).SetVisible
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer`2.SetVisible
  Virgis.IVirgisLayer.SetVisible(System.Boolean):
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.SetVisible(System.Boolean)
        name: SetVisible
        nameWithType: IVirgisLayer.SetVisible
        qualifiedName: Virgis.IVirgisLayer.SetVisible
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisLayer.SetVisible(System.Boolean)
        name: SetVisible
        nameWithType: IVirgisLayer.SetVisible
        qualifiedName: Virgis.IVirgisLayer.SetVisible
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisLayer
    commentId: M:Virgis.IVirgisLayer.SetVisible(System.Boolean)
  Virgis.VirgisLayer`2.IsVisible*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.IsVisible*
        name: IsVisible
        nameWithType: VirgisLayer<T, S>.IsVisible
        qualifiedName: Virgis.VirgisLayer<T, S>.IsVisible
      VB:
      - id: Virgis.VirgisLayer`2.IsVisible*
        name: IsVisible
        nameWithType: VirgisLayer(Of T, S).IsVisible
        qualifiedName: Virgis.VirgisLayer(Of T, S).IsVisible
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer`2.IsVisible
  Virgis.IVirgisLayer.IsVisible:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.IsVisible
        name: IsVisible
        nameWithType: IVirgisLayer.IsVisible
        qualifiedName: Virgis.IVirgisLayer.IsVisible
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisLayer.IsVisible
        name: IsVisible
        nameWithType: IVirgisLayer.IsVisible
        qualifiedName: Virgis.IVirgisLayer.IsVisible
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisLayer
    commentId: M:Virgis.IVirgisLayer.IsVisible
  Virgis.VirgisLayer`2.SetEditable*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.SetEditable*
        name: SetEditable
        nameWithType: VirgisLayer<T, S>.SetEditable
        qualifiedName: Virgis.VirgisLayer<T, S>.SetEditable
      VB:
      - id: Virgis.VirgisLayer`2.SetEditable*
        name: SetEditable
        nameWithType: VirgisLayer(Of T, S).SetEditable
        qualifiedName: Virgis.VirgisLayer(Of T, S).SetEditable
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer`2.SetEditable
  Virgis.IVirgisLayer.SetEditable(System.Boolean):
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.SetEditable(System.Boolean)
        name: SetEditable
        nameWithType: IVirgisLayer.SetEditable
        qualifiedName: Virgis.IVirgisLayer.SetEditable
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisLayer.SetEditable(System.Boolean)
        name: SetEditable
        nameWithType: IVirgisLayer.SetEditable
        qualifiedName: Virgis.IVirgisLayer.SetEditable
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisLayer
    commentId: M:Virgis.IVirgisLayer.SetEditable(System.Boolean)
  Virgis.VirgisLayer`2.IsEditable*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.IsEditable*
        name: IsEditable
        nameWithType: VirgisLayer<T, S>.IsEditable
        qualifiedName: Virgis.VirgisLayer<T, S>.IsEditable
      VB:
      - id: Virgis.VirgisLayer`2.IsEditable*
        name: IsEditable
        nameWithType: VirgisLayer(Of T, S).IsEditable
        qualifiedName: Virgis.VirgisLayer(Of T, S).IsEditable
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer`2.IsEditable
  Virgis.IVirgisLayer.IsEditable:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.IsEditable
        name: IsEditable
        nameWithType: IVirgisLayer.IsEditable
        qualifiedName: Virgis.IVirgisLayer.IsEditable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisLayer.IsEditable
        name: IsEditable
        nameWithType: IVirgisLayer.IsEditable
        qualifiedName: Virgis.IVirgisLayer.IsEditable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisLayer
    commentId: M:Virgis.IVirgisLayer.IsEditable
  Virgis.VirgisLayer`2.Equals*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Equals*
        name: Equals
        nameWithType: VirgisLayer<T, S>.Equals
        qualifiedName: Virgis.VirgisLayer<T, S>.Equals
      VB:
      - id: Virgis.VirgisLayer`2.Equals*
        name: Equals
        nameWithType: VirgisLayer(Of T, S).Equals
        qualifiedName: Virgis.VirgisLayer(Of T, S).Equals
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer`2.Equals
  Virgis.VirgisLayer`2.GetHashCode*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetHashCode*
        name: GetHashCode
        nameWithType: VirgisLayer<T, S>.GetHashCode
        qualifiedName: Virgis.VirgisLayer<T, S>.GetHashCode
      VB:
      - id: Virgis.VirgisLayer`2.GetHashCode*
        name: GetHashCode
        nameWithType: VirgisLayer(Of T, S).GetHashCode
        qualifiedName: Virgis.VirgisLayer(Of T, S).GetHashCode
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer`2.GetHashCode
  IEnumerable:
    name:
      CSharp:
      - id: IEnumerable
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      VB:
      - id: IEnumerable
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
    isDefinition: true
    commentId: '!:IEnumerable'
  Virgis.KdTree`1.KdNode:
    name:
      CSharp:
      - id: Virgis.KdTree`1.KdNode
        name: KdTree.KdNode
        nameWithType: KdTree.KdNode
        qualifiedName: Virgis.KdTree.KdNode
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Virgis.KdTree`1.KdNode
        name: KdTree.KdNode
        nameWithType: KdTree.KdNode
        qualifiedName: Virgis.KdTree.KdNode
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.KdTree`1.KdNode
  Virgis.KdTree`1.KdNode[]:
    name:
      CSharp:
      - id: Virgis.KdTree`1.KdNode
        name: KdTree.KdNode
        nameWithType: KdTree.KdNode
        qualifiedName: Virgis.KdTree.KdNode
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Virgis.KdTree`1.KdNode
        name: KdTree.KdNode
        nameWithType: KdTree.KdNode
        qualifiedName: Virgis.KdTree.KdNode
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Virgis.KdTree`1.Count*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.Count*
        name: Count
        nameWithType: KdTree<T>.Count
        qualifiedName: Virgis.KdTree<T>.Count
      VB:
      - id: Virgis.KdTree`1.Count*
        name: Count
        nameWithType: KdTree(Of T).Count
        qualifiedName: Virgis.KdTree(Of T).Count
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.Count
  Virgis.KdTree`1.IsReadOnly*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.IsReadOnly*
        name: IsReadOnly
        nameWithType: KdTree<T>.IsReadOnly
        qualifiedName: Virgis.KdTree<T>.IsReadOnly
      VB:
      - id: Virgis.KdTree`1.IsReadOnly*
        name: IsReadOnly
        nameWithType: KdTree(Of T).IsReadOnly
        qualifiedName: Virgis.KdTree(Of T).IsReadOnly
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.IsReadOnly
  Virgis.KdTree`1.AverageSearchLength*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.AverageSearchLength*
        name: AverageSearchLength
        nameWithType: KdTree<T>.AverageSearchLength
        qualifiedName: Virgis.KdTree<T>.AverageSearchLength
      VB:
      - id: Virgis.KdTree`1.AverageSearchLength*
        name: AverageSearchLength
        nameWithType: KdTree(Of T).AverageSearchLength
        qualifiedName: Virgis.KdTree(Of T).AverageSearchLength
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.AverageSearchLength
  Virgis.KdTree`1.AverageSearchDeep*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.AverageSearchDeep*
        name: AverageSearchDeep
        nameWithType: KdTree<T>.AverageSearchDeep
        qualifiedName: Virgis.KdTree<T>.AverageSearchDeep
      VB:
      - id: Virgis.KdTree`1.AverageSearchDeep*
        name: AverageSearchDeep
        nameWithType: KdTree(Of T).AverageSearchDeep
        qualifiedName: Virgis.KdTree(Of T).AverageSearchDeep
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.AverageSearchDeep
  Virgis.KdTree`1.#ctor*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.#ctor*
        name: KdTree
        nameWithType: KdTree<T>.KdTree
        qualifiedName: Virgis.KdTree<T>.KdTree
      VB:
      - id: Virgis.KdTree`1.#ctor*
        name: KdTree
        nameWithType: KdTree(Of T).KdTree
        qualifiedName: Virgis.KdTree(Of T).KdTree
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.#ctor
  Virgis.KdTree`1.Item*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.Item*
        name: Item
        nameWithType: KdTree<T>.Item
        qualifiedName: Virgis.KdTree<T>.Item
      VB:
      - id: Virgis.KdTree`1.Item*
        name: Item
        nameWithType: KdTree(Of T).Item
        qualifiedName: Virgis.KdTree(Of T).Item
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.Item
  Virgis.KdTree`1.Add*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.Add*
        name: Add
        nameWithType: KdTree<T>.Add
        qualifiedName: Virgis.KdTree<T>.Add
      VB:
      - id: Virgis.KdTree`1.Add*
        name: Add
        nameWithType: KdTree(Of T).Add
        qualifiedName: Virgis.KdTree(Of T).Add
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.Add
  List{{T}}:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: List`1
    commentId: '!:List{`0}'
  Virgis.KdTree`1.AddAll*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.AddAll*
        name: AddAll
        nameWithType: KdTree<T>.AddAll
        qualifiedName: Virgis.KdTree<T>.AddAll
      VB:
      - id: Virgis.KdTree`1.AddAll*
        name: AddAll
        nameWithType: KdTree(Of T).AddAll
        qualifiedName: Virgis.KdTree(Of T).AddAll
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.AddAll
  Virgis.KdTree`1:
    name:
      CSharp:
      - id: Virgis.KdTree`1
        name: KdTree
        nameWithType: KdTree
        qualifiedName: Virgis.KdTree
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Virgis.KdTree`1
        name: KdTree
        nameWithType: KdTree
        qualifiedName: Virgis.KdTree
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.KdTree`1
  Predicate`1:
    name:
      CSharp:
      - id: Predicate`1
        name: Predicate
        nameWithType: Predicate
        qualifiedName: Predicate
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Predicate`1
        name: Predicate
        nameWithType: Predicate
        qualifiedName: Predicate
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  Predicate{{T}}:
    name:
      CSharp:
      - id: Predicate`1
        name: Predicate
        nameWithType: Predicate
        qualifiedName: Predicate
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Predicate`1
        name: Predicate
        nameWithType: Predicate
        qualifiedName: Predicate
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Predicate`1
    commentId: '!:Predicate{`0}'
  Virgis.KdTree`1.FindAll*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.FindAll*
        name: FindAll
        nameWithType: KdTree<T>.FindAll
        qualifiedName: Virgis.KdTree<T>.FindAll
      VB:
      - id: Virgis.KdTree`1.FindAll*
        name: FindAll
        nameWithType: KdTree(Of T).FindAll
        qualifiedName: Virgis.KdTree(Of T).FindAll
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.FindAll
  Virgis.KdTree`1.Find*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.Find*
        name: Find
        nameWithType: KdTree<T>.Find
        qualifiedName: Virgis.KdTree<T>.Find
      VB:
      - id: Virgis.KdTree`1.Find*
        name: Find
        nameWithType: KdTree(Of T).Find
        qualifiedName: Virgis.KdTree(Of T).Find
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.Find
  Virgis.KdTree`1.RemoveAt*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.RemoveAt*
        name: RemoveAt
        nameWithType: KdTree<T>.RemoveAt
        qualifiedName: Virgis.KdTree<T>.RemoveAt
      VB:
      - id: Virgis.KdTree`1.RemoveAt*
        name: RemoveAt
        nameWithType: KdTree(Of T).RemoveAt
        qualifiedName: Virgis.KdTree(Of T).RemoveAt
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.RemoveAt
  Virgis.KdTree`1.RemoveAll*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.RemoveAll*
        name: RemoveAll
        nameWithType: KdTree<T>.RemoveAll
        qualifiedName: Virgis.KdTree<T>.RemoveAll
      VB:
      - id: Virgis.KdTree`1.RemoveAll*
        name: RemoveAll
        nameWithType: KdTree(Of T).RemoveAll
        qualifiedName: Virgis.KdTree(Of T).RemoveAll
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.RemoveAll
  Virgis.KdTree`1.CountAll*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.CountAll*
        name: CountAll
        nameWithType: KdTree<T>.CountAll
        qualifiedName: Virgis.KdTree<T>.CountAll
      VB:
      - id: Virgis.KdTree`1.CountAll*
        name: CountAll
        nameWithType: KdTree(Of T).CountAll
        qualifiedName: Virgis.KdTree(Of T).CountAll
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.CountAll
  Virgis.KdTree`1.Clear*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.Clear*
        name: Clear
        nameWithType: KdTree<T>.Clear
        qualifiedName: Virgis.KdTree<T>.Clear
      VB:
      - id: Virgis.KdTree`1.Clear*
        name: Clear
        nameWithType: KdTree(Of T).Clear
        qualifiedName: Virgis.KdTree(Of T).Clear
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.Clear
  Virgis.KdTree`1.UpdatePositions*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.UpdatePositions*
        name: UpdatePositions
        nameWithType: KdTree<T>.UpdatePositions
        qualifiedName: Virgis.KdTree<T>.UpdatePositions
      VB:
      - id: Virgis.KdTree`1.UpdatePositions*
        name: UpdatePositions
        nameWithType: KdTree(Of T).UpdatePositions
        qualifiedName: Virgis.KdTree(Of T).UpdatePositions
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.UpdatePositions
  IEnumerator`1:
    name:
      CSharp:
      - id: IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: IEnumerator
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: IEnumerator
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:IEnumerator`1'
  IEnumerator{{T}}:
    name:
      CSharp:
      - id: IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: IEnumerator
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: IEnumerator
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IEnumerator`1
    commentId: '!:IEnumerator{`0}'
  Virgis.KdTree`1.GetEnumerator*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.GetEnumerator*
        name: GetEnumerator
        nameWithType: KdTree<T>.GetEnumerator
        qualifiedName: Virgis.KdTree<T>.GetEnumerator
      VB:
      - id: Virgis.KdTree`1.GetEnumerator*
        name: GetEnumerator
        nameWithType: KdTree(Of T).GetEnumerator
        qualifiedName: Virgis.KdTree(Of T).GetEnumerator
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.GetEnumerator
  Virgis.KdTree`1.ToList*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.ToList*
        name: ToList
        nameWithType: KdTree<T>.ToList
        qualifiedName: Virgis.KdTree<T>.ToList
      VB:
      - id: Virgis.KdTree`1.ToList*
        name: ToList
        nameWithType: KdTree(Of T).ToList
        qualifiedName: Virgis.KdTree(Of T).ToList
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.ToList
  Virgis.KdTree`1._distance*:
    name:
      CSharp:
      - id: Virgis.KdTree`1._distance*
        name: _distance
        nameWithType: KdTree<T>._distance
        qualifiedName: Virgis.KdTree<T>._distance
      VB:
      - id: Virgis.KdTree`1._distance*
        name: _distance
        nameWithType: KdTree(Of T)._distance
        qualifiedName: Virgis.KdTree(Of T)._distance
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1._distance
  Virgis.KdTree`1._getSplitValue*:
    name:
      CSharp:
      - id: Virgis.KdTree`1._getSplitValue*
        name: _getSplitValue
        nameWithType: KdTree<T>._getSplitValue
        qualifiedName: Virgis.KdTree<T>._getSplitValue
      VB:
      - id: Virgis.KdTree`1._getSplitValue*
        name: _getSplitValue
        nameWithType: KdTree(Of T)._getSplitValue
        qualifiedName: Virgis.KdTree(Of T)._getSplitValue
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1._getSplitValue
  Virgis.KdTree`1.FindClosest*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.FindClosest*
        name: FindClosest
        nameWithType: KdTree<T>.FindClosest
        qualifiedName: Virgis.KdTree<T>.FindClosest
      VB:
      - id: Virgis.KdTree`1.FindClosest*
        name: FindClosest
        nameWithType: KdTree(Of T).FindClosest
        qualifiedName: Virgis.KdTree(Of T).FindClosest
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.FindClosest
  IEnumerable{{T}}:
    name:
      CSharp:
      - id: IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IEnumerable`1
    commentId: '!:IEnumerable{`0}'
  Virgis.KdTree`1.FindClose*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.FindClose*
        name: FindClose
        nameWithType: KdTree<T>.FindClose
        qualifiedName: Virgis.KdTree<T>.FindClose
      VB:
      - id: Virgis.KdTree`1.FindClose*
        name: FindClose
        nameWithType: KdTree(Of T).FindClose
        qualifiedName: Virgis.KdTree(Of T).FindClose
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.FindClose
  Virgis.KdTree`1._findClosest*:
    name:
      CSharp:
      - id: Virgis.KdTree`1._findClosest*
        name: _findClosest
        nameWithType: KdTree<T>._findClosest
        qualifiedName: Virgis.KdTree<T>._findClosest
      VB:
      - id: Virgis.KdTree`1._findClosest*
        name: _findClosest
        nameWithType: KdTree(Of T)._findClosest
        qualifiedName: Virgis.KdTree(Of T)._findClosest
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1._findClosest
  Project:
    name:
      CSharp:
      - name: Project
        nameWithType: Project
        qualifiedName: Project
      VB:
      - name: Project
        nameWithType: Project
        qualifiedName: Project
    isDefinition: true
    commentId: N:Project
  Project.Serializable:
    name:
      CSharp:
      - id: Project.Serializable
        name: Serializable
        nameWithType: Serializable
        qualifiedName: Project.Serializable
      VB:
      - id: Project.Serializable
        name: Serializable
        nameWithType: Serializable
        qualifiedName: Project.Serializable
    isDefinition: true
    parent: Project
    commentId: T:Project.Serializable
  Project.SerializableVector3.#ctor*:
    name:
      CSharp:
      - id: Project.SerializableVector3.#ctor*
        name: SerializableVector3
        nameWithType: SerializableVector3.SerializableVector3
        qualifiedName: Project.SerializableVector3.SerializableVector3
      VB:
      - id: Project.SerializableVector3.#ctor*
        name: SerializableVector3
        nameWithType: SerializableVector3.SerializableVector3
        qualifiedName: Project.SerializableVector3.SerializableVector3
    isDefinition: true
    commentId: Overload:Project.SerializableVector3.#ctor
  IList`1:
    name:
      CSharp:
      - id: IList`1
        name: IList
        nameWithType: IList
        qualifiedName: IList
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IList`1
        name: IList
        nameWithType: IList
        qualifiedName: IList
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  IList{System.Single}:
    name:
      CSharp:
      - id: IList`1
        name: IList
        nameWithType: IList
        qualifiedName: IList
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IList`1
        name: IList
        nameWithType: IList
        qualifiedName: IList
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IList`1
    commentId: '!:IList{System.Single}'
  Project.Serializable.Update(IList{System.Single}):
    name:
      CSharp:
      - id: Project.Serializable.Update(IList{System.Single})
        name: Update
        nameWithType: Serializable.Update
        qualifiedName: Project.Serializable.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: IList`1
        name: IList
        nameWithType: IList
        qualifiedName: IList
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Project.Serializable.Update(IList{System.Single})
        name: Update
        nameWithType: Serializable.Update
        qualifiedName: Project.Serializable.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: IList`1
        name: IList
        nameWithType: IList
        qualifiedName: IList
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Project.Serializable
    commentId: M:Project.Serializable.Update(IList{System.Single})
  Project.SerializableVector3.Update*:
    name:
      CSharp:
      - id: Project.SerializableVector3.Update*
        name: Update
        nameWithType: SerializableVector3.Update
        qualifiedName: Project.SerializableVector3.Update
      VB:
      - id: Project.SerializableVector3.Update*
        name: Update
        nameWithType: SerializableVector3.Update
        qualifiedName: Project.SerializableVector3.Update
    isDefinition: true
    commentId: Overload:Project.SerializableVector3.Update
  Project.SerializableVector3.ToString*:
    name:
      CSharp:
      - id: Project.SerializableVector3.ToString*
        name: ToString
        nameWithType: SerializableVector3.ToString
        qualifiedName: Project.SerializableVector3.ToString
      VB:
      - id: Project.SerializableVector3.ToString*
        name: ToString
        nameWithType: SerializableVector3.ToString
        qualifiedName: Project.SerializableVector3.ToString
    isDefinition: true
    commentId: Overload:Project.SerializableVector3.ToString
  System.Single[]:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Project.Serializable.ToArray:
    name:
      CSharp:
      - id: Project.Serializable.ToArray
        name: ToArray
        nameWithType: Serializable.ToArray
        qualifiedName: Project.Serializable.ToArray
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Project.Serializable.ToArray
        name: ToArray
        nameWithType: Serializable.ToArray
        qualifiedName: Project.Serializable.ToArray
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Project.Serializable
    commentId: M:Project.Serializable.ToArray
  Project.SerializableVector3.ToArray*:
    name:
      CSharp:
      - id: Project.SerializableVector3.ToArray*
        name: ToArray
        nameWithType: SerializableVector3.ToArray
        qualifiedName: Project.SerializableVector3.ToArray
      VB:
      - id: Project.SerializableVector3.ToArray*
        name: ToArray
        nameWithType: SerializableVector3.ToArray
        qualifiedName: Project.SerializableVector3.ToArray
    isDefinition: true
    commentId: Overload:Project.SerializableVector3.ToArray
  Project.SerializableVector3.magnitude*:
    name:
      CSharp:
      - id: Project.SerializableVector3.magnitude*
        name: magnitude
        nameWithType: SerializableVector3.magnitude
        qualifiedName: Project.SerializableVector3.magnitude
      VB:
      - id: Project.SerializableVector3.magnitude*
        name: magnitude
        nameWithType: SerializableVector3.magnitude
        qualifiedName: Project.SerializableVector3.magnitude
    isDefinition: true
    commentId: Overload:Project.SerializableVector3.magnitude
  Project.SerializableVector3:
    name:
      CSharp:
      - id: Project.SerializableVector3
        name: SerializableVector3
        nameWithType: SerializableVector3
        qualifiedName: Project.SerializableVector3
      VB:
      - id: Project.SerializableVector3
        name: SerializableVector3
        nameWithType: SerializableVector3
        qualifiedName: Project.SerializableVector3
    isDefinition: true
    parent: Project
    commentId: T:Project.SerializableVector3
  Project.SerializableVector3.op_Implicit*:
    name:
      CSharp:
      - id: Project.SerializableVector3.op_Implicit*
        name: Implicit
        nameWithType: SerializableVector3.Implicit
        qualifiedName: Project.SerializableVector3.Implicit
      VB:
      - id: Project.SerializableVector3.op_Implicit*
        name: Widening
        nameWithType: SerializableVector3.Widening
        qualifiedName: Project.SerializableVector3.Widening
    isDefinition: true
    commentId: Overload:Project.SerializableVector3.op_Implicit
  Project.Serializable.magnitude:
    name:
      CSharp:
      - id: Project.Serializable.magnitude
        name: magnitude
        nameWithType: Serializable.magnitude
        qualifiedName: Project.Serializable.magnitude
      VB:
      - id: Project.Serializable.magnitude
        name: magnitude
        nameWithType: Serializable.magnitude
        qualifiedName: Project.Serializable.magnitude
    isDefinition: true
    parent: Project.Serializable
    commentId: F:Project.Serializable.magnitude
  Project.SerializableQuaternion.#ctor*:
    name:
      CSharp:
      - id: Project.SerializableQuaternion.#ctor*
        name: SerializableQuaternion
        nameWithType: SerializableQuaternion.SerializableQuaternion
        qualifiedName: Project.SerializableQuaternion.SerializableQuaternion
      VB:
      - id: Project.SerializableQuaternion.#ctor*
        name: SerializableQuaternion
        nameWithType: SerializableQuaternion.SerializableQuaternion
        qualifiedName: Project.SerializableQuaternion.SerializableQuaternion
    isDefinition: true
    commentId: Overload:Project.SerializableQuaternion.#ctor
  Project.SerializableQuaternion.Update*:
    name:
      CSharp:
      - id: Project.SerializableQuaternion.Update*
        name: Update
        nameWithType: SerializableQuaternion.Update
        qualifiedName: Project.SerializableQuaternion.Update
      VB:
      - id: Project.SerializableQuaternion.Update*
        name: Update
        nameWithType: SerializableQuaternion.Update
        qualifiedName: Project.SerializableQuaternion.Update
    isDefinition: true
    commentId: Overload:Project.SerializableQuaternion.Update
  Project.SerializableQuaternion.ToString*:
    name:
      CSharp:
      - id: Project.SerializableQuaternion.ToString*
        name: ToString
        nameWithType: SerializableQuaternion.ToString
        qualifiedName: Project.SerializableQuaternion.ToString
      VB:
      - id: Project.SerializableQuaternion.ToString*
        name: ToString
        nameWithType: SerializableQuaternion.ToString
        qualifiedName: Project.SerializableQuaternion.ToString
    isDefinition: true
    commentId: Overload:Project.SerializableQuaternion.ToString
  Project.SerializableQuaternion.ToArray*:
    name:
      CSharp:
      - id: Project.SerializableQuaternion.ToArray*
        name: ToArray
        nameWithType: SerializableQuaternion.ToArray
        qualifiedName: Project.SerializableQuaternion.ToArray
      VB:
      - id: Project.SerializableQuaternion.ToArray*
        name: ToArray
        nameWithType: SerializableQuaternion.ToArray
        qualifiedName: Project.SerializableQuaternion.ToArray
    isDefinition: true
    commentId: Overload:Project.SerializableQuaternion.ToArray
  Project.SerializableQuaternion:
    name:
      CSharp:
      - id: Project.SerializableQuaternion
        name: SerializableQuaternion
        nameWithType: SerializableQuaternion
        qualifiedName: Project.SerializableQuaternion
      VB:
      - id: Project.SerializableQuaternion
        name: SerializableQuaternion
        nameWithType: SerializableQuaternion
        qualifiedName: Project.SerializableQuaternion
    isDefinition: true
    parent: Project
    commentId: T:Project.SerializableQuaternion
  Project.SerializableQuaternion.op_Implicit*:
    name:
      CSharp:
      - id: Project.SerializableQuaternion.op_Implicit*
        name: Implicit
        nameWithType: SerializableQuaternion.Implicit
        qualifiedName: Project.SerializableQuaternion.Implicit
      VB:
      - id: Project.SerializableQuaternion.op_Implicit*
        name: Widening
        nameWithType: SerializableQuaternion.Widening
        qualifiedName: Project.SerializableQuaternion.Widening
    isDefinition: true
    commentId: Overload:Project.SerializableQuaternion.op_Implicit
  Project.SerializableColor.#ctor*:
    name:
      CSharp:
      - id: Project.SerializableColor.#ctor*
        name: SerializableColor
        nameWithType: SerializableColor.SerializableColor
        qualifiedName: Project.SerializableColor.SerializableColor
      VB:
      - id: Project.SerializableColor.#ctor*
        name: SerializableColor
        nameWithType: SerializableColor.SerializableColor
        qualifiedName: Project.SerializableColor.SerializableColor
    isDefinition: true
    commentId: Overload:Project.SerializableColor.#ctor
  Project.SerializableColor.Update*:
    name:
      CSharp:
      - id: Project.SerializableColor.Update*
        name: Update
        nameWithType: SerializableColor.Update
        qualifiedName: Project.SerializableColor.Update
      VB:
      - id: Project.SerializableColor.Update*
        name: Update
        nameWithType: SerializableColor.Update
        qualifiedName: Project.SerializableColor.Update
    isDefinition: true
    commentId: Overload:Project.SerializableColor.Update
  Project.SerializableColor:
    name:
      CSharp:
      - id: Project.SerializableColor
        name: SerializableColor
        nameWithType: SerializableColor
        qualifiedName: Project.SerializableColor
      VB:
      - id: Project.SerializableColor
        name: SerializableColor
        nameWithType: SerializableColor
        qualifiedName: Project.SerializableColor
    isDefinition: true
    parent: Project
    commentId: T:Project.SerializableColor
  Project.SerializableColor.op_Implicit*:
    name:
      CSharp:
      - id: Project.SerializableColor.op_Implicit*
        name: Implicit
        nameWithType: SerializableColor.Implicit
        qualifiedName: Project.SerializableColor.Implicit
      VB:
      - id: Project.SerializableColor.op_Implicit*
        name: Widening
        nameWithType: SerializableColor.Widening
        qualifiedName: Project.SerializableColor.Widening
    isDefinition: true
    commentId: Overload:Project.SerializableColor.op_Implicit
  Project.SerializableColor.ToString*:
    name:
      CSharp:
      - id: Project.SerializableColor.ToString*
        name: ToString
        nameWithType: SerializableColor.ToString
        qualifiedName: Project.SerializableColor.ToString
      VB:
      - id: Project.SerializableColor.ToString*
        name: ToString
        nameWithType: SerializableColor.ToString
        qualifiedName: Project.SerializableColor.ToString
    isDefinition: true
    commentId: Overload:Project.SerializableColor.ToString
  Project.SerializableColor.ToArray*:
    name:
      CSharp:
      - id: Project.SerializableColor.ToArray*
        name: ToArray
        nameWithType: SerializableColor.ToArray
        qualifiedName: Project.SerializableColor.ToArray
      VB:
      - id: Project.SerializableColor.ToArray*
        name: ToArray
        nameWithType: SerializableColor.ToArray
        qualifiedName: Project.SerializableColor.ToArray
    isDefinition: true
    commentId: Overload:Project.SerializableColor.ToArray
  Project.Serializable.Update*:
    name:
      CSharp:
      - id: Project.Serializable.Update*
        name: Update
        nameWithType: Serializable.Update
        qualifiedName: Project.Serializable.Update
      VB:
      - id: Project.Serializable.Update*
        name: Update
        nameWithType: Serializable.Update
        qualifiedName: Project.Serializable.Update
    isDefinition: true
    commentId: Overload:Project.Serializable.Update
  Project.Serializable.ToArray*:
    name:
      CSharp:
      - id: Project.Serializable.ToArray*
        name: ToArray
        nameWithType: Serializable.ToArray
        qualifiedName: Project.Serializable.ToArray
      VB:
      - id: Project.Serializable.ToArray*
        name: ToArray
        nameWithType: Serializable.ToArray
        qualifiedName: Project.Serializable.ToArray
    isDefinition: true
    commentId: Overload:Project.Serializable.ToArray
  Project.TestableObject:
    name:
      CSharp:
      - id: Project.TestableObject
        name: TestableObject
        nameWithType: TestableObject
        qualifiedName: Project.TestableObject
      VB:
      - id: Project.TestableObject
        name: TestableObject
        nameWithType: TestableObject
        qualifiedName: Project.TestableObject
    isDefinition: true
    parent: Project
    commentId: T:Project.TestableObject
  Project.TestableObject.ContainsKey(System.String):
    name:
      CSharp:
      - id: Project.TestableObject.ContainsKey(System.String)
        name: ContainsKey
        nameWithType: TestableObject.ContainsKey
        qualifiedName: Project.TestableObject.ContainsKey
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Project.TestableObject.ContainsKey(System.String)
        name: ContainsKey
        nameWithType: TestableObject.ContainsKey
        qualifiedName: Project.TestableObject.ContainsKey
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Project.TestableObject
    commentId: M:Project.TestableObject.ContainsKey(System.String)
  List{Point}:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Point
        name: Point
        nameWithType: Point
        qualifiedName: Point
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Point
        name: Point
        nameWithType: Point
        qualifiedName: Point
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: List`1
    commentId: '!:List{Point}'
  List{Project.RecordSet}:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Project.RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: Project.RecordSet
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Project.RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: Project.RecordSet
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: List`1
    commentId: '!:List{Project.RecordSet}'
  Project.GisProject.Camera*:
    name:
      CSharp:
      - id: Project.GisProject.Camera*
        name: Camera
        nameWithType: GisProject.Camera
        qualifiedName: Project.GisProject.Camera
      VB:
      - id: Project.GisProject.Camera*
        name: Camera
        nameWithType: GisProject.Camera
        qualifiedName: Project.GisProject.Camera
    isDefinition: true
    commentId: Overload:Project.GisProject.Camera
  Project.GisProject:
    name:
      CSharp:
      - id: Project.GisProject
        name: GisProject
        nameWithType: GisProject
        qualifiedName: Project.GisProject
      VB:
      - id: Project.GisProject
        name: GisProject
        nameWithType: GisProject
        qualifiedName: Project.GisProject
    isDefinition: true
    commentId: T:Project.GisProject
  Project.RecordSetDataType:
    name:
      CSharp:
      - id: Project.RecordSetDataType
        name: RecordSetDataType
        nameWithType: RecordSetDataType
        qualifiedName: Project.RecordSetDataType
      VB:
      - id: Project.RecordSetDataType
        name: RecordSetDataType
        nameWithType: RecordSetDataType
        qualifiedName: Project.RecordSetDataType
    isDefinition: true
    parent: Project
    commentId: T:Project.RecordSetDataType
  Project.JsonTransform:
    name:
      CSharp:
      - id: Project.JsonTransform
        name: JsonTransform
        nameWithType: JsonTransform
        qualifiedName: Project.JsonTransform
      VB:
      - id: Project.JsonTransform
        name: JsonTransform
        nameWithType: JsonTransform
        qualifiedName: Project.JsonTransform
    isDefinition: true
    parent: Project
    commentId: T:Project.JsonTransform
  Project.RecordSet:
    name:
      CSharp:
      - id: Project.RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: Project.RecordSet
      VB:
      - id: Project.RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: Project.RecordSet
    isDefinition: true
    parent: Project
    commentId: T:Project.RecordSet
  Project.VectorConverter`1.#ctor*:
    name:
      CSharp:
      - id: Project.VectorConverter`1.#ctor*
        name: VectorConverter
        nameWithType: VectorConverter<T>.VectorConverter
        qualifiedName: Project.VectorConverter<T>.VectorConverter
      VB:
      - id: Project.VectorConverter`1.#ctor*
        name: VectorConverter
        nameWithType: VectorConverter(Of T).VectorConverter
        qualifiedName: Project.VectorConverter(Of T).VectorConverter
    isDefinition: true
    commentId: Overload:Project.VectorConverter`1.#ctor
  Type:
    name:
      CSharp:
      - id: Type
        name: Type
        nameWithType: Type
        qualifiedName: Type
        isExternal: true
      VB:
      - id: Type
        name: Type
        nameWithType: Type
        qualifiedName: Type
        isExternal: true
    isDefinition: true
  Project.VectorConverter`1.CanConvert*:
    name:
      CSharp:
      - id: Project.VectorConverter`1.CanConvert*
        name: CanConvert
        nameWithType: VectorConverter<T>.CanConvert
        qualifiedName: Project.VectorConverter<T>.CanConvert
      VB:
      - id: Project.VectorConverter`1.CanConvert*
        name: CanConvert
        nameWithType: VectorConverter(Of T).CanConvert
        qualifiedName: Project.VectorConverter(Of T).CanConvert
    isDefinition: true
    commentId: Overload:Project.VectorConverter`1.CanConvert
  JsonReader:
    name:
      CSharp:
      - id: JsonReader
        name: JsonReader
        nameWithType: JsonReader
        qualifiedName: JsonReader
        isExternal: true
      VB:
      - id: JsonReader
        name: JsonReader
        nameWithType: JsonReader
        qualifiedName: JsonReader
        isExternal: true
    isDefinition: true
  JsonSerializer:
    name:
      CSharp:
      - id: JsonSerializer
        name: JsonSerializer
        nameWithType: JsonSerializer
        qualifiedName: JsonSerializer
        isExternal: true
      VB:
      - id: JsonSerializer
        name: JsonSerializer
        nameWithType: JsonSerializer
        qualifiedName: JsonSerializer
        isExternal: true
    isDefinition: true
  Project.VectorConverter`1.ReadJson*:
    name:
      CSharp:
      - id: Project.VectorConverter`1.ReadJson*
        name: ReadJson
        nameWithType: VectorConverter<T>.ReadJson
        qualifiedName: Project.VectorConverter<T>.ReadJson
      VB:
      - id: Project.VectorConverter`1.ReadJson*
        name: ReadJson
        nameWithType: VectorConverter(Of T).ReadJson
        qualifiedName: Project.VectorConverter(Of T).ReadJson
    isDefinition: true
    commentId: Overload:Project.VectorConverter`1.ReadJson
  JsonWriter:
    name:
      CSharp:
      - id: JsonWriter
        name: JsonWriter
        nameWithType: JsonWriter
        qualifiedName: JsonWriter
        isExternal: true
      VB:
      - id: JsonWriter
        name: JsonWriter
        nameWithType: JsonWriter
        qualifiedName: JsonWriter
        isExternal: true
    isDefinition: true
  Project.VectorConverter`1.WriteJson*:
    name:
      CSharp:
      - id: Project.VectorConverter`1.WriteJson*
        name: WriteJson
        nameWithType: VectorConverter<T>.WriteJson
        qualifiedName: Project.VectorConverter<T>.WriteJson
      VB:
      - id: Project.VectorConverter`1.WriteJson*
        name: WriteJson
        nameWithType: VectorConverter(Of T).WriteJson
        qualifiedName: Project.VectorConverter(Of T).WriteJson
    isDefinition: true
    commentId: Overload:Project.VectorConverter`1.WriteJson
  Project.VectorConverter`1:
    name:
      CSharp:
      - id: Project.VectorConverter`1
        name: VectorConverter
        nameWithType: VectorConverter
        qualifiedName: Project.VectorConverter
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Project.VectorConverter`1
        name: VectorConverter
        nameWithType: VectorConverter
        qualifiedName: Project.VectorConverter
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Project.VectorConverter`1
  Project.RecordsetConverter.#ctor*:
    name:
      CSharp:
      - id: Project.RecordsetConverter.#ctor*
        name: RecordsetConverter
        nameWithType: RecordsetConverter.RecordsetConverter
        qualifiedName: Project.RecordsetConverter.RecordsetConverter
      VB:
      - id: Project.RecordsetConverter.#ctor*
        name: RecordsetConverter
        nameWithType: RecordsetConverter.RecordsetConverter
        qualifiedName: Project.RecordsetConverter.RecordsetConverter
    isDefinition: true
    commentId: Overload:Project.RecordsetConverter.#ctor
  Project.RecordsetConverter.CanConvert*:
    name:
      CSharp:
      - id: Project.RecordsetConverter.CanConvert*
        name: CanConvert
        nameWithType: RecordsetConverter.CanConvert
        qualifiedName: Project.RecordsetConverter.CanConvert
      VB:
      - id: Project.RecordsetConverter.CanConvert*
        name: CanConvert
        nameWithType: RecordsetConverter.CanConvert
        qualifiedName: Project.RecordsetConverter.CanConvert
    isDefinition: true
    commentId: Overload:Project.RecordsetConverter.CanConvert
  Project.RecordsetConverter.ReadJson*:
    name:
      CSharp:
      - id: Project.RecordsetConverter.ReadJson*
        name: ReadJson
        nameWithType: RecordsetConverter.ReadJson
        qualifiedName: Project.RecordsetConverter.ReadJson
      VB:
      - id: Project.RecordsetConverter.ReadJson*
        name: ReadJson
        nameWithType: RecordsetConverter.ReadJson
        qualifiedName: Project.RecordsetConverter.ReadJson
    isDefinition: true
    commentId: Overload:Project.RecordsetConverter.ReadJson
  Project.RecordsetConverter.WriteJson*:
    name:
      CSharp:
      - id: Project.RecordsetConverter.WriteJson*
        name: WriteJson
        nameWithType: RecordsetConverter.WriteJson
        qualifiedName: Project.RecordsetConverter.WriteJson
      VB:
      - id: Project.RecordsetConverter.WriteJson*
        name: WriteJson
        nameWithType: RecordsetConverter.WriteJson
        qualifiedName: Project.RecordsetConverter.WriteJson
    isDefinition: true
    commentId: Overload:Project.RecordsetConverter.WriteJson
  Project.RecordsetConverter:
    name:
      CSharp:
      - id: Project.RecordsetConverter
        name: RecordsetConverter
        nameWithType: RecordsetConverter
        qualifiedName: Project.RecordsetConverter
      VB:
      - id: Project.RecordsetConverter
        name: RecordsetConverter
        nameWithType: RecordsetConverter
        qualifiedName: Project.RecordsetConverter
    isDefinition: true
    commentId: T:Project.RecordsetConverter
  Project.RecordSetType:
    name:
      CSharp:
      - id: Project.RecordSetType
        name: RecordSetType
        nameWithType: RecordSetType
        qualifiedName: Project.RecordSetType
      VB:
      - id: Project.RecordSetType
        name: RecordSetType
        nameWithType: RecordSetType
        qualifiedName: Project.RecordSetType
    isDefinition: true
    parent: Project
    commentId: T:Project.RecordSetType
  Project.RecordSet.Id:
    name:
      CSharp:
      - id: Project.RecordSet.Id
        name: Id
        nameWithType: RecordSet.Id
        qualifiedName: Project.RecordSet.Id
      VB:
      - id: Project.RecordSet.Id
        name: Id
        nameWithType: RecordSet.Id
        qualifiedName: Project.RecordSet.Id
    isDefinition: true
    parent: Project.RecordSet
    commentId: F:Project.RecordSet.Id
  Project.RecordSet.DisplayName:
    name:
      CSharp:
      - id: Project.RecordSet.DisplayName
        name: DisplayName
        nameWithType: RecordSet.DisplayName
        qualifiedName: Project.RecordSet.DisplayName
      VB:
      - id: Project.RecordSet.DisplayName
        name: DisplayName
        nameWithType: RecordSet.DisplayName
        qualifiedName: Project.RecordSet.DisplayName
    isDefinition: true
    parent: Project.RecordSet
    commentId: F:Project.RecordSet.DisplayName
  Project.RecordSet.Type:
    name:
      CSharp:
      - id: Project.RecordSet.Type
        name: Type
        nameWithType: RecordSet.Type
        qualifiedName: Project.RecordSet.Type
      VB:
      - id: Project.RecordSet.Type
        name: Type
        nameWithType: RecordSet.Type
        qualifiedName: Project.RecordSet.Type
    isDefinition: true
    parent: Project.RecordSet
    commentId: F:Project.RecordSet.Type
  Project.RecordSet.DataType:
    name:
      CSharp:
      - id: Project.RecordSet.DataType
        name: DataType
        nameWithType: RecordSet.DataType
        qualifiedName: Project.RecordSet.DataType
      VB:
      - id: Project.RecordSet.DataType
        name: DataType
        nameWithType: RecordSet.DataType
        qualifiedName: Project.RecordSet.DataType
    isDefinition: true
    parent: Project.RecordSet
    commentId: F:Project.RecordSet.DataType
  Project.RecordSet.Source:
    name:
      CSharp:
      - id: Project.RecordSet.Source
        name: Source
        nameWithType: RecordSet.Source
        qualifiedName: Project.RecordSet.Source
      VB:
      - id: Project.RecordSet.Source
        name: Source
        nameWithType: RecordSet.Source
        qualifiedName: Project.RecordSet.Source
    isDefinition: true
    parent: Project.RecordSet
    commentId: F:Project.RecordSet.Source
  Project.RecordSet.Features:
    name:
      CSharp:
      - id: Project.RecordSet.Features
        name: Features
        nameWithType: RecordSet.Features
        qualifiedName: Project.RecordSet.Features
      VB:
      - id: Project.RecordSet.Features
        name: Features
        nameWithType: RecordSet.Features
        qualifiedName: Project.RecordSet.Features
    isDefinition: true
    parent: Project.RecordSet
    commentId: F:Project.RecordSet.Features
  Project.RecordSet.Position:
    name:
      CSharp:
      - id: Project.RecordSet.Position
        name: Position
        nameWithType: RecordSet.Position
        qualifiedName: Project.RecordSet.Position
      VB:
      - id: Project.RecordSet.Position
        name: Position
        nameWithType: RecordSet.Position
        qualifiedName: Project.RecordSet.Position
    isDefinition: true
    parent: Project.RecordSet
    commentId: F:Project.RecordSet.Position
  Project.RecordSet.Transform:
    name:
      CSharp:
      - id: Project.RecordSet.Transform
        name: Transform
        nameWithType: RecordSet.Transform
        qualifiedName: Project.RecordSet.Transform
      VB:
      - id: Project.RecordSet.Transform
        name: Transform
        nameWithType: RecordSet.Transform
        qualifiedName: Project.RecordSet.Transform
    isDefinition: true
    parent: Project.RecordSet
    commentId: F:Project.RecordSet.Transform
  Project.RecordSet.Visible:
    name:
      CSharp:
      - id: Project.RecordSet.Visible
        name: Visible
        nameWithType: RecordSet.Visible
        qualifiedName: Project.RecordSet.Visible
      VB:
      - id: Project.RecordSet.Visible
        name: Visible
        nameWithType: RecordSet.Visible
        qualifiedName: Project.RecordSet.Visible
    isDefinition: true
    parent: Project.RecordSet
    commentId: F:Project.RecordSet.Visible
  Project.GeographyCollection.GeogData:
    name:
      CSharp:
      - id: Project.GeographyCollection.GeogData
        name: GeographyCollection.GeogData
        nameWithType: GeographyCollection.GeogData
        qualifiedName: Project.GeographyCollection.GeogData
      VB:
      - id: Project.GeographyCollection.GeogData
        name: GeographyCollection.GeogData
        nameWithType: GeographyCollection.GeogData
        qualifiedName: Project.GeographyCollection.GeogData
    isDefinition: true
    parent: Project
    commentId: T:Project.GeographyCollection.GeogData
  Project.GeographyCollection:
    name:
      CSharp:
      - id: Project.GeographyCollection
        name: GeographyCollection
        nameWithType: GeographyCollection
        qualifiedName: Project.GeographyCollection
      VB:
      - id: Project.GeographyCollection
        name: GeographyCollection
        nameWithType: GeographyCollection
        qualifiedName: Project.GeographyCollection
    isDefinition: true
    parent: Project
    commentId: T:Project.GeographyCollection
  Dictionary{System.String,Project.Unit}:
    name:
      CSharp:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Project.Unit
        name: Unit
        nameWithType: Unit
        qualifiedName: Project.Unit
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Project.Unit
        name: Unit
        nameWithType: Unit
        qualifiedName: Project.Unit
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Dictionary`2
    commentId: '!:Dictionary{System.String,Project.Unit}'
  Project.GeologyCollection.GeoData:
    name:
      CSharp:
      - id: Project.GeologyCollection.GeoData
        name: GeologyCollection.GeoData
        nameWithType: GeologyCollection.GeoData
        qualifiedName: Project.GeologyCollection.GeoData
      VB:
      - id: Project.GeologyCollection.GeoData
        name: GeologyCollection.GeoData
        nameWithType: GeologyCollection.GeoData
        qualifiedName: Project.GeologyCollection.GeoData
    isDefinition: true
    parent: Project
    commentId: T:Project.GeologyCollection.GeoData
  Project.GeologyCollection:
    name:
      CSharp:
      - id: Project.GeologyCollection
        name: GeologyCollection
        nameWithType: GeologyCollection
        qualifiedName: Project.GeologyCollection
      VB:
      - id: Project.GeologyCollection
        name: GeologyCollection
        nameWithType: GeologyCollection
        qualifiedName: Project.GeologyCollection
    isDefinition: true
    commentId: T:Project.GeologyCollection
  Dictionary{System.String,Project.GeoTypes}:
    name:
      CSharp:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Project.GeoTypes
        name: GeoTypes
        nameWithType: GeoTypes
        qualifiedName: Project.GeoTypes
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Project.GeoTypes
        name: GeoTypes
        nameWithType: GeoTypes
        qualifiedName: Project.GeoTypes
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Dictionary`2
    commentId: '!:Dictionary{System.String,Project.GeoTypes}'
  Project.GeoTypes:
    name:
      CSharp:
      - id: Project.GeoTypes
        name: GeoTypes
        nameWithType: GeoTypes
        qualifiedName: Project.GeoTypes
      VB:
      - id: Project.GeoTypes
        name: GeoTypes
        nameWithType: GeoTypes
        qualifiedName: Project.GeoTypes
    isDefinition: true
    parent: Project
    commentId: T:Project.GeoTypes
  Project.Shapes:
    name:
      CSharp:
      - id: Project.Shapes
        name: Shapes
        nameWithType: Shapes
        qualifiedName: Project.Shapes
      VB:
      - id: Project.Shapes
        name: Shapes
        nameWithType: Shapes
        qualifiedName: Project.Shapes
    isDefinition: true
    parent: Project
    commentId: T:Project.Shapes
  Project.Unit:
    name:
      CSharp:
      - id: Project.Unit
        name: Unit
        nameWithType: Unit
        qualifiedName: Project.Unit
      VB:
      - id: Project.Unit
        name: Unit
        nameWithType: Unit
        qualifiedName: Project.Unit
    isDefinition: true
    commentId: T:Project.Unit
  Project.TestableObject.ContainsKey*:
    name:
      CSharp:
      - id: Project.TestableObject.ContainsKey*
        name: ContainsKey
        nameWithType: TestableObject.ContainsKey
        qualifiedName: Project.TestableObject.ContainsKey
      VB:
      - id: Project.TestableObject.ContainsKey*
        name: ContainsKey
        nameWithType: TestableObject.ContainsKey
        qualifiedName: Project.TestableObject.ContainsKey
    isDefinition: true
    commentId: Overload:Project.TestableObject.ContainsKey
